diff --git a/sync_log.txt b/sync_log.txt
index 19b18d2..07339a9 100644
--- a/sync_log.txt
+++ b/sync_log.txt
@@ -182,3 +182,19 @@
 2025-05-23 12:10:36 - INFO: Fichier critique pr√©sent : roo-modes/configs/modes.json
 2025-05-23 12:10:36 - INFO: √âtape 6: Gestion des Commits de Correction...
 2025-05-23 12:10:36 - ALERTE: Modifications d√©tect√©es apr√®s synchronisation (ex: logs). Cr√©ation d'un commit de correction...
+2025-05-23 12:10:37 - INFO: Commit de correction cr√©√©.
+2025-05-23 12:10:37 - INFO: Tentative de push du commit de correction...
+2025-05-23 12:10:38 - INFO: Push du commit de correction r√©ussi.
+2025-05-23 12:10:38 - INFO: √âtape 7: Nettoyage et Rapport Final...
+2025-05-23 12:10:38 - INFO: Restauration du stash...
+2025-05-23 12:10:38 - INFO: Stash restaur√© avec succ√®s.
+2025-05-23 12:10:38 - INFO: Synchronisation de l'environnement Roo termin√©e.
+2025-05-23 12:25:14 - INFO: V√©rification du statut Git avant pull...
+2025-05-23 12:25:14 - ALERTE: Modifications locales d√©tect√©es. Tentative de stash...
+2025-05-23 12:25:14 - INFO: Stash r√©ussi.
+2025-05-23 12:25:14 - INFO: Ex√©cution de git pull...
+2025-05-23 12:25:14 - INFO: Git pull r√©ussi.
+2025-05-23 12:25:14 - INFO: Analyse des nouveaut√©s et synchronisation des fichiers...
+2025-05-23 12:25:14 - ERREUR: √âchec de la synchronisation de roo-config/settings/settings.json. Message : Impossible de remplacer líÈlÈment D:\roo-extensions\roo-config\settings\settings.json par lui-mÍme.
+2025-05-23 12:26:09 - INFO: V√©rification du statut Git avant pull...
+2025-05-23 12:26:09 - ALERTE: Modifications locales d√©tect√©es. Tentative de stash...
diff --git a/sync_roo_environment.ps1 b/sync_roo_environment.ps1
index eb95f5b..928cf9c 100644
--- a/sync_roo_environment.ps1
+++ b/sync_roo_environment.ps1
@@ -3,11 +3,10 @@
 $RepoPath = "d:/roo-extensions"
 $LogFile = "d:/roo-extensions/sync_log.txt"
 $ConflictLogDir = "d:/roo-extensions/sync_conflicts"
-$ErrorActionPreference = "Stop" # Stop on errors for better control
 
 # Cr√©er le r√©pertoire de logs de conflits si inexistant
 If (-not (Test-Path $ConflictLogDir)) {
-    New-Item -ItemType Directory -Path $ConflictLogDir -ErrorAction SilentlyContinue | Out-Null
+    New-Item -ItemType Directory -Path $ConflictLogDir | Out-Null
 }
 
 function Log-Message {
@@ -15,51 +14,50 @@ function Log-Message {
         [string]$Message,
         [string]$Type = "INFO" # INFO, ALERTE, ERREUR
     )
-    $LogEntry = "$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - $($Type): $($Message)"
-    Add-Content -Path $LogFile -Value $LogEntry
-    Write-Host $LogEntry # Also output to console for scheduler visibility
+    Add-Content -Path $LogFile -Value "$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - $($Type): $($Message)"
 }
 
 Set-Location $RepoPath
 
-# --- √âtape 1: Pr√©paration et V√©rification de l'Environnement Git ---
-Log-Message "√âtape 1: Pr√©paration et V√©rification de l'Environnement Git..."
-$StashApplied = $false
-Try {
-    Log-Message "V√©rification du statut Git avant pull..."
-    $GitStatus = git status --porcelain
-    if ($GitStatus) {
-        Log-Message "Modifications locales d√©tect√©es. Tentative de stash..." "ALERTE"
-        git stash push -m "Automated stash before sync pull"
+# √âtape 1: Pr√©paration et V√©rification de l'Environnement Git
+Log-Message "V√©rification du statut Git avant pull..."
+$GitStatus = (& git status --porcelain 2>&1)
+if ($GitStatus) {
+    Log-Message "Modifications locales d√©tect√©es. Tentative de stash..." "ALERTE"
+    Try {
+        $StashOutput = (& git stash push -m "Automated stash before sync pull" 2>&1)
+        if ($LASTEXITCODE -ne 0) {
+            throw "Git stash failed: $StashOutput"
+        }
         Log-Message "Stash r√©ussi."
         $StashApplied = $true
-    } else {
-        Log-Message "Aucune modification locale d√©tect√©e avant le pull."
+    } Catch {
+        Log-Message "√âchec du stash. Annulation de la synchronisation. Message : $($_.Exception.Message)" "ERREUR"
+        Exit 1 # Sortie avec erreur
     }
-} Catch {
-    Log-Message "√âchec lors de la v√©rification du statut Git ou du stash. Message : $($_.Exception.Message)" "ERREUR"
-    Exit 1 # Sortie avec erreur
+} else {
+    $StashApplied = $false
 }
 
-# --- √âtape 2: Mise √† Jour du D√©p√¥t Local (git pull) ---
-Log-Message "√âtape 2: Mise √† Jour du D√©p√¥t Local (git pull)..."
+# √âtape 2: Mise √† Jour du D√©p√¥t Local (git pull)
+Log-Message "Ex√©cution de git pull..."
 Try {
-    Log-Message "Ex√©cution de git pull origin main..."
-    # Capture HEAD avant le pull pour la comparaison ult√©rieure
-    $HeadBeforePull = git rev-parse HEAD
-    git pull origin main
+    $PullOutput = (& git pull origin main 2>&1)
+    if ($LASTEXITCODE -ne 0) {
+        throw "Git pull failed: $PullOutput"
+    }
     Log-Message "Git pull r√©ussi."
 } Catch {
     $ErrorMessage = $_.Exception.Message
     if ($ErrorMessage -like "*merge conflict*") {
         Log-Message "Conflit de fusion d√©tect√©. Annulation de la fusion..." "ALERTE"
-        Try { git merge --abort } Catch { Log-Message "√âchec de git merge --abort. Message: $($_.Exception.Message)" "ALERTE"}
+        & git merge --abort
         $ConflictLogFile = Join-Path $ConflictLogDir "sync_conflicts_$(Get-Date -Format 'yyyyMMdd_HHmmss').log"
         Add-Content -Path $ConflictLogFile -Value "--- Conflit Git d√©tect√© lors du pull - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---"
         Add-Content -Path $ConflictLogFile -Value "D√©p√¥t : $RepoPath"
-        Add-Content -Path $ConflictLogFile -Value "Branche : main" # Assumer main, ajuster si n√©cessaire
+        Add-Content -Path $ConflictLogFile -Value "Branche : main"
         Add-Content -Path $ConflictLogFile -Value "Statut avant abort :"
-        (git status) | Out-String | Add-Content -Path $ConflictLogFile
+        (& git status 2>&1) | Out-String | Add-Content -Path $ConflictLogFile
         Add-Content -Path $ConflictLogFile -Value "--- FIN DU CONFLIT ---"
         Log-Message "Conflit de fusion annul√©. Voir $($ConflictLogFile) pour les d√©tails. Synchronisation interrompue." "ERREUR"
     } else {
@@ -68,192 +66,257 @@ Try {
     Exit 1 # Sortie avec erreur
 }
 
-# --- √âtape 3: Analyse des Nouveaut√©s et Identification des Fichiers √† Synchroniser ---
-Log-Message "√âtape 3: Analyse des Nouveaut√©s et Identification des Fichiers √† Synchroniser..."
+# √âtape 3 & 4: Analyse des Nouveaut√©s et Ex√©cution des Op√©rations de Synchronisation
+Log-Message "Analyse des nouveaut√©s et synchronisation des fichiers..."
 
-# Liste des fichiers et patterns √† synchroniser (relatifs √† $RepoPath)
-$TargetFilesAndPatterns = @(
+$FilesToSync = @(
     "roo-config/settings/settings.json",
     "roo-config/settings/servers.json",
     "roo-config/settings/modes.json",
     "roo-config/escalation-test-config.json",
     "roo-config/qwen3-profiles/qwen3-parameters.json",
+    "roo-config/analyze-test-results.ps1",
+    "roo-config/apply-escalation-test-config.ps1",
+    "roo-config/create-profile.ps1",
+    "roo-config/deploy-profile-modes.ps1",
+    "roo-config/maintenance-routine.ps1",
+    "roo-config/maintenance-workflow.ps1",
+    "roo-config/test-escalation-scenarios.ps1",
+    "roo-config/deployment-scripts/create-clean-modes.ps1",
+    "roo-config/deployment-scripts/deploy-guide-interactif.ps1",
+    "roo-config/deployment-scripts/deploy-modes-ascii.ps1",
+    "roo-config/deployment-scripts/deploy-modes-enhanced.ps1",
+    "roo-config/deployment-scripts/deploy-modes-extreme.ps1",
+    "roo-config/deployment-scripts/deploy-modes-final.ps1",
+    "roo-config/deployment-scripts/deploy-modes-fixed.ps1",
+    "roo-config/deployment-scripts/deploy-modes-improved.ps1",
+    "roo-config/deployment-scripts/deploy-modes-minimal.ps1",
+    "roo-config/deployment-scripts/deploy-modes-simple-complex.ps1",
+    "roo-config/deployment-scripts/deploy-modes-simple.ps1",
+    "roo-config/deployment-scripts/deploy-modes-solution.ps1",
+    "roo-config/deployment-scripts/deploy-modes-ultra-simple.ps1",
+    "roo-config/deployment-scripts/deploy-modes.ps1",
+    "roo-config/deployment-scripts/force-deploy-with-encoding-fix.ps1",
+    "roo-config/deployment-scripts/simple-deploy.ps1",
+    "roo-config/diagnostic-scripts/check-deployed-encoding.ps1",
+    "roo-config/diagnostic-scripts/diagnostic-rapide-encodage.ps1",
+    "roo-config/diagnostic-scripts/encoding-diagnostic.ps1",
+    "roo-config/diagnostic-scripts/verify-deployed-modes.ps1",
+    "roo-config/encoding-scripts/fix-encoding-advanced.ps1",
+    "roo-config/encoding-scripts/fix-encoding-ascii.ps1",
+    "roo-config/encoding-scripts/fix-encoding-complete.ps1",
+    "roo-config/encoding-scripts/fix-encoding-direct.ps1",
+    "roo-config/encoding-scripts/fix-encoding-extreme.ps1",
+    "roo-config/encoding-scripts/fix-encoding-final.ps1",
+    "roo-config/encoding-scripts/fix-encoding-improved.ps1",
+    "roo-config/encoding-scripts/fix-encoding-minimal.ps1",
+    "roo-config/encoding-scripts/fix-encoding-regex.ps1",
+    "roo-config/encoding-scripts/fix-encoding-simple-final.ps1",
+    "roo-config/encoding-scripts/fix-encoding-simple.ps1",
+    "roo-config/encoding-scripts/fix-encoding-ultra-simple.ps1",
+    "roo-config/encoding-scripts/fix-encoding.ps1",
+    "roo-config/encoding-scripts/fix-source-encoding.ps1",
+    "roo-config/settings/deploy-settings.ps1",
+    "roo-config/README-campagne-tests-escalade.md",
+    "roo-config/README-profile-modes.md",
+    "roo-config/README.md",
+    "roo-config/REDIRECTION.md",
+    "roo-config/backups/README.md",
+    "roo-config/config-templates/README.md",
+    "roo-config/deployment-scripts/README.md",
+    "roo-config/diagnostic-scripts/README.md",
+    "roo-config/docs/guide-import-export.md",
+    "roo-config/docs/README.md",
+    "roo-config/docs/solution-modes-simple-complex.md",
+    "roo-config/encoding-scripts/README.md",
+    "roo-config/qwen3-profiles/README.md",
+    "roo-config/scheduler/Guide_Edition_Directe_Configurations_Roo_Scheduler.md",
+    "roo-config/scheduler/Guide_Installation_Roo_Scheduler.md",
+    "roo-config/settings/README.md",
     "roo-modes/configs/modes.json",
     "roo-modes/configs/new-roomodes.json",
     "roo-modes/configs/standard-modes.json",
-    "roo-modes/configs/vscode-custom-modes.json"
+    "roo-modes/configs/vscode-custom-modes.json",
+    "roo-modes/n5/configs/architect-large-optimized-v2.json",
+    "roo-modes/n5/configs/architect-large-optimized.json",
+    "roo-modes/n5/configs/architect-large-original.json",
+    "roo-modes/n5/configs/architect-large.json",
+    "roo-modes/n5/configs/architect-medium.json",
+    "roo-modes/n5/configs/ask-large.json",
+    "roo-modes/n5/configs/ask-medium.json",
+    "roo-modes/n5/configs/custom-n5-modes.json",
+    "roo-modes/n5/configs/debug-large.json",
+    "roo-modes/n5/configs/debug-medium.json",
+    "roo-modes/n5/configs/large-modes.json",
+    "roo-modes/n5/configs/medium-modes-fixed.json",
+    "roo-modes/n5/configs/medium-modes.json",
+    "roo-modes/n5/configs/micro-modes.json",
+    "roo-modes/n5/configs/mini-modes-fixed.json",
+    "roo-modes/n5/configs/mini-modes.json",
+    "roo-modes/n5/configs/n5-modes-roo-compatible-local.json",
+    "roo-modes/n5/configs/n5-modes-roo-compatible-modified.json",
+    "roo-modes/n5/configs/n5-modes-roo-compatible.json",
+    "roo-modes/n5/configs/oracle-modes-fixed.json",
+    "roo-modes/n5/configs/oracle-modes.json",
+    "roo-modes/n5/configs/orchestrator-large.json",
+    "roo-modes/n5/configs/orchestrator-medium.json",
+    "roo-modes/README.md",
+    "roo-modes/custom/README.md",
+    "roo-modes/custom/REDIRECTION.md",
+    "roo-modes/custom/docs/architecture/architecture-concept.md",
+    "roo-modes/custom/docs/criteres-decision/criteres-decision.md",
+    "roo-modes/custom/docs/implementation/commits.md",
+    "roo-modes/custom/docs/implementation/deploiement-autres-machines.md",
+    "roo-modes/custom/docs/implementation/deploiement.md",
+    "roo-modes/custom/docs/implementation/notes-pour-reprise.md",
+    "roo-modes/custom/docs/implementation/script-deploy-local-endpoints.md",
+    "roo-modes/custom/docs/optimisation/guide-installation-optimisations-mcp.md",
+    "roo-modes/custom/docs/optimisation/recommandations-prompts.md",
+    "roo-modes/custom/docs/optimisation/utilisation-optimisee-mcps.md",
+    "roo-modes/custom/docs/structure-technique/README.md",
+    "roo-modes/docs/directives-modes-custom.md",
+    "roo-modes/docs/guide-import-export.md",
+    "roo-modes/docs/guide-integration-modes-custom.md",
+    "roo-modes/docs/guide-verrouillage-famille-modes.md",
+    "roo-modes/docs/README-family-lock.md",
+    "roo-modes/docs/reference-prompts-natifs.md",
+    "roo-modes/docs/architecture/architecture-concept.md",
+    "roo-modes/docs/criteres-decision/criteres-decision.md",
+    "roo-modes/docs/implementation/commits.md",
+    "roo-modes/docs/implementation/deploiement-autres-machines.md",
+    "roo-modes/docs/implementation/deploiement.md",
+    "roo-modes/docs/implementation/guide-installation-modes-personnalises.md",
+    "roo-modes/docs/implementation/notes-pour-reprise.md",
+    "roo-modes/docs/implementation/script-deploy-local-endpoints.md",
+    "roo-modes/docs/optimisation/recommandations-prompts.md",
+    "roo-modes/n5/CHANGELOG.md",
+    "roo-modes/n5/rapport-final-deploiement.md",
+    "roo-modes/n5/rapport-implementation.md",
+    "roo-modes/n5/README-roo-compatible.md",
+    "roo-modes/n5/README.md",
+    "roo-modes/n5/docs/guide-migration-roo-compatible.md",
+    "roo-modes/n5/docs/guide-migration.md",
+    "roo-modes/n5/docs/guide-utilisation.md",
+    "roo-modes/n5/tests/README.md",
+    "roo-modes/optimized/ARCHIVE.md",
+    "roo-modes/optimized/README.md",
+    "roo-modes/optimized/REDIRECTION.md",
+    "roo-modes/optimized/docs/architecture-concept.md",
+    "roo-modes/optimized/docs/criteres-decision.md",
+    "roo-modes/optimized/docs/notes-pour-reprise.md",
+    "roo-modes/optimized/docs/recommandations-prompts.md"
 )
 
-# Ajouter les .ps1 sous roo-config (r√©cursif)
-Get-ChildItem -Path (Join-Path $RepoPath "roo-config") -Filter "*.ps1" -Recurse | ForEach-Object {
-    $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)
-}
-
-# Ajouter les .json sous roo-modes/n5/configs/ (r√©cursif)
-Get-ChildItem -Path (Join-Path $RepoPath "roo-modes/n5/configs") -Filter "*.json" -Recurse | ForEach-Object {
-    $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)
-}
-
-# Ajouter les .md sous roo-config/ (r√©cursif)
-Get-ChildItem -Path (Join-Path $RepoPath "roo-config") -Filter "*.md" -Recurse | ForEach-Object {
-    $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)
-}
-
-# Ajouter les .md sous roo-modes/ (r√©cursif)
-Get-ChildItem -Path (Join-Path $RepoPath "roo-modes") -Filter "*.md" -Recurse | ForEach-Object {
-    $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)
-}
-
-# Rendre la liste unique
-$UniqueTargetFiles = $TargetFilesAndPatterns | Sort-Object -Unique
-
-Log-Message "Liste des fichiers cibles potentiels construite."
-
-$FilesModifiedByPull = @()
-Try {
-    Log-Message "D√©tection des fichiers modifi√©s par le pull (HEAD vs HEAD@{1})..."
-    if ($HeadBeforePull) {
-        $FilesModifiedByPull = git diff --name-only $HeadBeforePull HEAD | ForEach-Object { $_ -replace '/', '\' } # Normaliser les slashes pour Windows
-    } else {
-        Log-Message "Impossible de d√©terminer HEAD avant le pull, synchronisation de tous les fichiers cibles." "ALERTE"
-        # En cas d'√©chec de la d√©tection (ex: premier pull), on pourrait choisir de synchroniser tous les $UniqueTargetFiles
-        # Pour l'instant, on continue avec une liste vide, ce qui signifie que seuls les fichiers explicitement list√©s et existants seront copi√©s.
-        # Ou, pour √™tre plus s√ªr, on peut forcer la synchronisation de tous les fichiers cibles.
-        # $FilesModifiedByPull = $UniqueTargetFiles # D√©commentez pour synchroniser tous les fichiers cibles si diff √©choue
-    }
-    Log-Message "Fichiers modifi√©s par le pull : $($FilesModifiedByPull -join ', ')"
-} Catch {
-    Log-Message "Erreur lors de la d√©tection des fichiers modifi√©s par git diff. Message : $($_.Exception.Message)" "ALERTE"
-    # Continuer, mais la synchronisation pourrait ne pas √™tre pr√©cise.
-}
-
-$FilesToActuallySync = @()
-if ($FilesModifiedByPull.Count -gt 0) {
-    foreach ($modifiedFile in $FilesModifiedByPull) {
-        if ($UniqueTargetFiles -contains $modifiedFile) {
-            $FilesToActuallySync += $modifiedFile
-        }
-    }
-} else {
-    # Si git diff n'a rien retourn√© ou a √©chou√©, on se rabat sur une copie de tous les fichiers cibles existants
-    # Ceci est une mesure de s√©curit√©, mais peut √™tre affin√©.
-    Log-Message "Aucun fichier sp√©cifiquement modifi√© par le pull d√©tect√© ou diff √©chou√©. V√©rification de tous les fichiers cibles pour synchronisation." "ALERTE"
-    foreach ($targetFile in $UniqueTargetFiles) {
-        if (Test-Path (Join-Path $RepoPath $targetFile)) {
-            $FilesToActuallySync += $targetFile
-        }
-    }
-}
-$FilesToActuallySync = $FilesToActuallySync | Sort-Object -Unique
-Log-Message "Fichiers identifi√©s pour synchronisation r√©elle : $($FilesToActuallySync -join ', ')"
-
-
-# --- √âtape 4: Ex√©cution des Op√©rations de Synchronisation ---
-Log-Message "√âtape 4: Ex√©cution des Op√©rations de Synchronisation..."
-$SyncedJsonFiles = @()
-
-if ($FilesToActuallySync.Count -eq 0) {
-    Log-Message "Aucun fichier √† synchroniser cette fois-ci."
-}
+$JsonFiles = @(
+    "roo-config/settings/settings.json",
+    "roo-config/settings/servers.json",
+    "roo-config/settings/modes.json",
+    "roo-config/escalation-test-config.json",
+    "roo-config/qwen3-profiles/qwen3-parameters.json",
+    "roo-modes/configs/modes.json",
+    "roo-modes/configs/new-roomodes.json",
+    "roo-modes/configs/standard-modes.json",
+    "roo-modes/configs/vscode-custom-modes.json",
+    "roo-modes/n5/configs/architect-large-optimized-v2.json",
+    "roo-modes/n5/configs/architect-large-optimized.json",
+    "roo-modes/n5/configs/architect-large-original.json",
+    "roo-modes/n5/configs/architect-large.json",
+    "roo-modes/n5/configs/architect-medium.json",
+    "roo-modes/n5/configs/ask-large.json",
+    "roo-modes/n5/configs/ask-medium.json",
+    "roo-modes/n5/configs/custom-n5-modes.json",
+    "roo-modes/n5/configs/debug-large.json",
+    "roo-modes/n5/configs/debug-medium.json",
+    "roo-modes/n5/configs/large-modes.json",
+    "roo-modes/n5/configs/medium-modes-fixed.json",
+    "roo-modes/n5/configs/medium-modes.json",
+    "roo-modes/n5/configs/micro-modes.json",
+    "roo-modes/n5/configs/mini-modes-fixed.json",
+    "roo-modes/n5/configs/mini-modes.json",
+    "roo-modes/n5/configs/n5-modes-roo-compatible-local.json",
+    "roo-modes/n5/configs/n5-modes-roo-compatible-modified.json",
+    "roo-modes/n5/configs/n5-modes-roo-compatible.json",
+    "roo-modes/n5/configs/oracle-modes-fixed.json",
+    "roo-modes/n5/configs/oracle-modes.json",
+    "roo-modes/n5/configs/orchestrator-large.json",
+    "roo-modes/n5/configs/orchestrator-medium.json"
+)
 
-foreach ($FileRelPath in $FilesToActuallySync) {
-    $SourceFile = Join-Path $RepoPath $FileRelPath
-    $DestinationFile = Join-Path $RepoPath $FileRelPath # Assumer que le d√©p√¥t est l'emplacement actif
+foreach ($File in $FilesToSync) {
+    $SourceFile = Join-Path $RepoPath $File
+    $DestinationFile = Join-Path $RepoPath $File # Assumer que le d√©p√¥t est l'emplacement actif
 
     if (Test-Path $SourceFile) {
         Try {
-            Copy-Item -Path $SourceFile -Destination $DestinationFile -Force
-            Log-Message "Synchronis√© : $($FileRelPath)"
-            if ($FileRelPath.EndsWith(".json")) {
-                $SyncedJsonFiles += $DestinationFile
-            }
+            Copy-Item -Path $SourceFile -Destination $DestinationFile -Force -ErrorAction Stop
+            Log-Message "Synchronis√© : $($File)"
         } Catch {
-            Log-Message "√âchec de la synchronisation de $($FileRelPath). Message : $($_.Exception.Message)" "ERREUR"
-            # Selon la criticit√©, on pourrait vouloir sortir ici (Exit 1)
+            Log-Message "√âchec de la synchronisation de $($File). Message : $($_.Exception.Message)" "ERREUR"
+            Exit 1
         }
-    } else {
-        Log-Message "Fichier source non trouv√© pour la synchronisation (peut avoir √©t√© supprim√© par le pull) : $($SourceFile)" "ALERTE"
     }
 }
 
-# --- √âtape 5: V√©rification Post-Synchronisation ---
-Log-Message "√âtape 5: V√©rification Post-Synchronisation..."
+# √âtape 5: V√©rification Post-Synchronisation
+Log-Message "V√©rification post-synchronisation..."
 
-# V√©rification des fichiers JSON synchronis√©s
-if ($SyncedJsonFiles.Count -gt 0) {
-    Log-Message "V√©rification des fichiers JSON synchronis√©s..."
-    foreach ($JsonFileFullPath in $SyncedJsonFiles) {
-        if (Test-Path $JsonFileFullPath) {
-            Try {
-                Get-Content -Raw $JsonFileFullPath | ConvertFrom-Json | Out-Null
-                Log-Message "V√©rifi√© (JSON valide) : $($JsonFileFullPath.Substring($RepoPath.Length + 1))"
-            } Catch {
-                Log-Message "Fichier JSON invalide apr√®s synchronisation : $($JsonFileFullPath.Substring($RepoPath.Length + 1)). D√©tails : $($_.Exception.Message)" "ERREUR"
-                Exit 1 # Fichier JSON critique invalide
-            }
+foreach ($JsonFile in $JsonFiles) {
+    $FullPath = Join-Path $RepoPath $JsonFile
+    if (Test-Path $FullPath) {
+        Try {
+            Get-Content -Raw $FullPath | ConvertFrom-Json | Out-Null
+            Log-Message "V√©rifi√© (JSON valide) : $($JsonFile)"
+        } Catch {
+            Log-Message "ERREUR: Fichier JSON invalide apr√®s synchronisation : $($JsonFile). D√©tails : $($_.Exception.Message)" "ERREUR"
+            Exit 1
         }
     }
-} else {
-    Log-Message "Aucun fichier JSON n'a √©t√© synchronis√©, pas de v√©rification JSON n√©cessaire."
 }
 
-# V√©rification de l'existence des fichiers cl√©s
-$CriticalFiles = @(
-    "roo-config/settings/settings.json",
-    "roo-modes/configs/modes.json"
-    # Ajoutez d'autres fichiers critiques ici si n√©cessaire
-)
-Log-Message "V√©rification de l'existence des fichiers critiques..."
-foreach ($CriticalFileRelPath in $CriticalFiles) {
-    $FullPath = Join-Path $RepoPath $CriticalFileRelPath
-    if (-not (Test-Path $FullPath)) {
-        Log-Message "Fichier critique manquant apr√®s synchronisation : $($CriticalFileRelPath)" "ERREUR"
-        Exit 1 # Fichier critique manquant
+# √âtape 6: Gestion des Commits de Correction (si n√©cessaire)
+Log-Message "V√©rification des modifications pour commit de correction..."
+$PostSyncStatus = (& git status --porcelain 2>&1)
+if ($PostSyncStatus) {
+    Log-Message "Modifications d√©tect√©es apr√®s synchronisation. Cr√©ation d'un commit de correction..."
+    & git add .
+    $CommitOutput = (& git commit -m "SYNC: [Automated] Synchronisation des param√®tres Roo post-pull" 2>&1)
+    if ($LASTEXITCODE -ne 0) {
+        Log-Message "√âchec du commit. Message : $($CommitOutput)" "ERREUR"
+        # Ne pas quitter ici, car la synchronisation des fichiers a √©t√© effectu√©e localement.
+        # Le commit peut √™tre retent√© manuellement.
     } else {
-        Log-Message "Fichier critique pr√©sent : $($CriticalFileRelPath)"
-    }
-}
-
-# --- √âtape 6: Gestion des Commits de Correction (si n√©cessaire) ---
-Log-Message "√âtape 6: Gestion des Commits de Correction..."
-Try {
-    $PostSyncStatus = git status --porcelain
-    if ($PostSyncStatus) {
-        Log-Message "Modifications d√©tect√©es apr√®s synchronisation (ex: logs). Cr√©ation d'un commit de correction..." "ALERTE"
-        git add . # Ajoute tous les changements, y compris les logs. Peut √™tre affin√©.
-        git commit -m "SYNC: [Automated] Mise √† jour post-synchronisation (logs, etc.)"
         Log-Message "Commit de correction cr√©√©."
+    }
 
-        Log-Message "Tentative de push du commit de correction..."
-        git push origin main
+    Log-Message "Tentative de push du commit de correction..."
+    Try {
+        $PushOutput = (& git push origin main 2>&1)
+        if ($LASTEXITCODE -ne 0) {
+            throw "Git push failed: $PushOutput"
+        }
         Log-Message "Push du commit de correction r√©ussi."
-    } else {
-        Log-Message "Aucune modification √† commiter apr√®s synchronisation."
+    } Catch {
+        Log-Message "√âchec du push du commit de correction. Message : $($_.Exception.Message)" "ERREUR"
+        # Ne pas quitter ici, car la synchronisation des fichiers a √©t√© effectu√©e localement.
+        # Le push peut √™tre retent√© manuellement.
     }
-} Catch {
-    Log-Message "√âchec lors de la gestion des commits de correction ou du push. Message : $($_.Exception.Message)" "ERREUR"
-    # Ne pas quitter ici, car la synchronisation des fichiers a √©t√© effectu√©e localement.
-    # Le push peut √™tre retent√© manuellement.
+} else {
+    Log-Message "Aucune modification √† commiter apr√®s synchronisation."
 }
 
-# --- √âtape 7: Nettoyage et Rapport Final ---
-Log-Message "√âtape 7: Nettoyage et Rapport Final..."
+# √âtape 7: Nettoyage et Rapport Final
 if ($StashApplied) {
     Log-Message "Restauration du stash..."
     Try {
-        git stash pop
+        $StashPopOutput = (& git stash pop 2>&1)
+        if ($LASTEXITCODE -ne 0) {
+            throw "Git stash pop failed: $StashPopOutput"
+        }
         Log-Message "Stash restaur√© avec succ√®s."
     } Catch {
-        Log-Message "√âchec de la restauration du stash. Des conflits peuvent exister. Message : $($_.Exception.Message). R√©solution manuelle requise." "ALERTE"
-        # Documenter les conflits de stash pop si n√©cessaire dans un fichier de conflit d√©di√©
-        $ConflictLogFile = Join-Path $ConflictLogDir "stash_pop_conflicts_$(Get-Date -Format 'yyyyMMdd_HHmmss').log"
-        Add-Content -Path $ConflictLogFile -Value "--- Conflit Git d√©tect√© lors du stash pop - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---"
-        Add-Content -Path $ConflictLogFile -Value "$($_.Exception.Message)"
-        (git status) | Out-String | Add-Content -Path $ConflictLogFile
-        Add-Content -Path $ConflictLogFile -Value "--- FIN DU CONFLIT STASH POP ---"
-        Log-Message "D√©tails du conflit de stash pop enregistr√©s dans $ConflictLogFile" "ALERTE"
+        Log-Message "√âchec de la restauration du stash. Des conflits peuvent exister. Message : $($_.Exception.Message)" "ALERTE"
+        # Documenter les conflits de stash pop si n√©cessaire
     }
 }
 
-Log-Message "Synchronisation de l'environnement Roo termin√©e."
-Exit 0
\ No newline at end of file
+Log-Message "Synchronisation de l'environnement Roo termin√©e."
\ No newline at end of file
