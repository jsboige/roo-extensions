{
  "CurrentVersion": {
    "Lines": 245,
    "File": "RooSync/sync_roo_environment.ps1",
    "Size": 12475
  },
  "Summary": {
    "StashsAnalyzed": 5,
    "TotalAddedInStashs": 0,
    "TotalRemovedFromCurrent": 0,
    "TotalUniqueLines": 794
  },
  "Stashs": [
    {
      "Lines": 262,
      "Size": 12314,
      "File": "stash1-version.ps1",
      "Comparison": {
        "CommonLines": 103,
        "UniqueInCurrent": 142,
        "UniqueInStash": 159,
        "UniqueAnalysis": [
          {
            "Context": "    L4: $LogFile = \"d:/roo-extensions/sync_log.txt\"\n    L5: $ConflictLogDir = \"d:/roo-extensions/sync_conflicts\"\n>>> L6: $ErrorActionPreference = \"Stop\" # Stop on errors for better control\n    L7: \n    L8: # Créer le répertoire de logs de conflits si inexistant",
            "Line": "$ErrorActionPreference = \"Stop\" # Stop on errors for better control",
            "Type": "code",
            "Index": 5
          },
          {
            "Context": "    L8: # Créer le répertoire de logs de conflits si inexistant\n    L9: If (-not (Test-Path $ConflictLogDir)) {\n>>> L10:     New-Item -ItemType Directory -Path $ConflictLogDir -ErrorAction SilentlyContinue | Out-Null\n    L11: }\n    L12: ",
            "Line": "    New-Item -ItemType Directory -Path $ConflictLogDir -ErrorAction SilentlyContinue | Out-Null",
            "Type": "code",
            "Index": 9
          },
          {
            "Context": "    L16:         [string]$Type = \"INFO\" # INFO, ALERTE, ERREUR\n    L17:     )\n>>> L18:     $LogEntry = \"$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - $($Type): $($Message)\"\n    L19:     Add-Content -Path $LogFile -Value $LogEntry\n    L20:     Write-Host $LogEntry # Also output to console for scheduler visibility",
            "Line": "    $LogEntry = \"$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - $($Type): $($Message)\"",
            "Type": "code",
            "Index": 17
          },
          {
            "Context": "    L17:     )\n    L18:     $LogEntry = \"$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - $($Type): $($Message)\"\n>>> L19:     Add-Content -Path $LogFile -Value $LogEntry\n    L20:     Write-Host $LogEntry # Also output to console for scheduler visibility\n    L21: }",
            "Line": "    Add-Content -Path $LogFile -Value $LogEntry",
            "Type": "code",
            "Index": 18
          },
          {
            "Context": "    L18:     $LogEntry = \"$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - $($Type): $($Message)\"\n    L19:     Add-Content -Path $LogFile -Value $LogEntry\n>>> L20:     Write-Host $LogEntry # Also output to console for scheduler visibility\n    L21: }\n    L22: ",
            "Line": "    Write-Host $LogEntry # Also output to console for scheduler visibility",
            "Type": "code",
            "Index": 19
          },
          {
            "Context": "    L23: Set-Location $RepoPath\n    L24: \n>>> L25: # --- Étape 1: Préparation et Vérification de l'Environnement Git ---\n    L26: Log-Message \"Étape 1: Préparation et Vérification de l'Environnement Git...\"\n    L27: $StashApplied = $false",
            "Line": "# --- Étape 1: Préparation et Vérification de l'Environnement Git ---",
            "Type": "comment",
            "Index": 24
          },
          {
            "Context": "    L24: \n    L25: # --- Étape 1: Préparation et Vérification de l'Environnement Git ---\n>>> L26: Log-Message \"Étape 1: Préparation et Vérification de l'Environnement Git...\"\n    L27: $StashApplied = $false\n    L28: Try {",
            "Line": "Log-Message \"Étape 1: Préparation et Vérification de l'Environnement Git...\"",
            "Type": "code",
            "Index": 25
          },
          {
            "Context": "    L25: # --- Étape 1: Préparation et Vérification de l'Environnement Git ---\n    L26: Log-Message \"Étape 1: Préparation et Vérification de l'Environnement Git...\"\n>>> L27: $StashApplied = $false\n    L28: Try {\n    L29:     Log-Message \"Vérification du statut Git avant pull...\"",
            "Line": "$StashApplied = $false",
            "Type": "code",
            "Index": 26
          },
          {
            "Context": "    L27: $StashApplied = $false\n    L28: Try {\n>>> L29:     Log-Message \"Vérification du statut Git avant pull...\"\n    L30:     $GitStatus = git status --porcelain\n    L31:     if ($GitStatus) {",
            "Line": "    Log-Message \"Vérification du statut Git avant pull...\"",
            "Type": "code",
            "Index": 28
          },
          {
            "Context": "    L28: Try {\n    L29:     Log-Message \"Vérification du statut Git avant pull...\"\n>>> L30:     $GitStatus = git status --porcelain\n    L31:     if ($GitStatus) {\n    L32:         Log-Message \"Modifications locales détectées. Tentative de stash...\" \"ALERTE\"",
            "Line": "    $GitStatus = git status --porcelain",
            "Type": "code",
            "Index": 29
          },
          {
            "Context": "    L29:     Log-Message \"Vérification du statut Git avant pull...\"\n    L30:     $GitStatus = git status --porcelain\n>>> L31:     if ($GitStatus) {\n    L32:         Log-Message \"Modifications locales détectées. Tentative de stash...\" \"ALERTE\"\n    L33:         git stash push -m \"Automated stash before sync pull\"",
            "Line": "    if ($GitStatus) {",
            "Type": "control",
            "Index": 30
          },
          {
            "Context": "    L30:     $GitStatus = git status --porcelain\n    L31:     if ($GitStatus) {\n>>> L32:         Log-Message \"Modifications locales détectées. Tentative de stash...\" \"ALERTE\"\n    L33:         git stash push -m \"Automated stash before sync pull\"\n    L34:         Log-Message \"Stash réussi.\"",
            "Line": "        Log-Message \"Modifications locales détectées. Tentative de stash...\" \"ALERTE\"",
            "Type": "code",
            "Index": 31
          },
          {
            "Context": "    L31:     if ($GitStatus) {\n    L32:         Log-Message \"Modifications locales détectées. Tentative de stash...\" \"ALERTE\"\n>>> L33:         git stash push -m \"Automated stash before sync pull\"\n    L34:         Log-Message \"Stash réussi.\"\n    L35:         $StashApplied = $true",
            "Line": "        git stash push -m \"Automated stash before sync pull\"",
            "Type": "code",
            "Index": 32
          },
          {
            "Context": "    L35:         $StashApplied = $true\n    L36:     } else {\n>>> L37:         Log-Message \"Aucune modification locale détectée avant le pull.\"\n    L38:     }\n    L39: } Catch {",
            "Line": "        Log-Message \"Aucune modification locale détectée avant le pull.\"",
            "Type": "code",
            "Index": 36
          },
          {
            "Context": "    L38:     }\n    L39: } Catch {\n>>> L40:     Log-Message \"Échec lors de la vérification du statut Git ou du stash. Message : $($_.Exception.Message)\" \"ERREUR\"\n    L41:     Exit 1 # Sortie avec erreur\n    L42: }",
            "Line": "    Log-Message \"Échec lors de la vérification du statut Git ou du stash. Message : $($_.Exception.Message)\" \"ERREUR\"",
            "Type": "code",
            "Index": 39
          },
          {
            "Context": "    L42: }\n    L43: \n>>> L44: # --- Étape 2: Mise à Jour du Dépôt Local (git pull) ---\n    L45: Log-Message \"Étape 2: Mise à Jour du Dépôt Local (git pull)...\"\n    L46: Try {",
            "Line": "# --- Étape 2: Mise à Jour du Dépôt Local (git pull) ---",
            "Type": "comment",
            "Index": 43
          },
          {
            "Context": "    L43: \n    L44: # --- Étape 2: Mise à Jour du Dépôt Local (git pull) ---\n>>> L45: Log-Message \"Étape 2: Mise à Jour du Dépôt Local (git pull)...\"\n    L46: Try {\n    L47:     Log-Message \"Exécution de git pull origin main...\"",
            "Line": "Log-Message \"Étape 2: Mise à Jour du Dépôt Local (git pull)...\"",
            "Type": "code",
            "Index": 44
          },
          {
            "Context": "    L26: Log-Message \"Étape 1: Préparation et Vérification de l'Environnement Git...\"\n    L27: $StashApplied = $false\n>>> L28: Try {\n    L29:     Log-Message \"Vérification du statut Git avant pull...\"\n    L30:     $GitStatus = git status --porcelain",
            "Line": "Try {",
            "Type": "control",
            "Index": 27
          },
          {
            "Context": "    L45: Log-Message \"Étape 2: Mise à Jour du Dépôt Local (git pull)...\"\n    L46: Try {\n>>> L47:     Log-Message \"Exécution de git pull origin main...\"\n    L48:     # Capture HEAD avant le pull pour la comparaison ultérieure\n    L49:     $HeadBeforePull = git rev-parse HEAD",
            "Line": "    Log-Message \"Exécution de git pull origin main...\"",
            "Type": "code",
            "Index": 46
          },
          {
            "Context": "    L46: Try {\n    L47:     Log-Message \"Exécution de git pull origin main...\"\n>>> L48:     # Capture HEAD avant le pull pour la comparaison ultérieure\n    L49:     $HeadBeforePull = git rev-parse HEAD\n    L50:     git pull origin main",
            "Line": "    # Capture HEAD avant le pull pour la comparaison ultérieure",
            "Type": "comment",
            "Index": 47
          },
          {
            "Context": "    L47:     Log-Message \"Exécution de git pull origin main...\"\n    L48:     # Capture HEAD avant le pull pour la comparaison ultérieure\n>>> L49:     $HeadBeforePull = git rev-parse HEAD\n    L50:     git pull origin main\n    L51:     Log-Message \"Git pull réussi.\"",
            "Line": "    $HeadBeforePull = git rev-parse HEAD",
            "Type": "code",
            "Index": 48
          },
          {
            "Context": "    L48:     # Capture HEAD avant le pull pour la comparaison ultérieure\n    L49:     $HeadBeforePull = git rev-parse HEAD\n>>> L50:     git pull origin main\n    L51:     Log-Message \"Git pull réussi.\"\n    L52: } Catch {",
            "Line": "    git pull origin main",
            "Type": "code",
            "Index": 49
          },
          {
            "Context": "    L37:         Log-Message \"Aucune modification locale détectée avant le pull.\"\n    L38:     }\n>>> L39: } Catch {\n    L40:     Log-Message \"Échec lors de la vérification du statut Git ou du stash. Message : $($_.Exception.Message)\" \"ERREUR\"\n    L41:     Exit 1 # Sortie avec erreur",
            "Line": "} Catch {",
            "Type": "code",
            "Index": 38
          },
          {
            "Context": "    L54:     if ($ErrorMessage -like \"*merge conflict*\") {\n    L55:         Log-Message \"Conflit de fusion détecté. Annulation de la fusion...\" \"ALERTE\"\n>>> L56:         Try { git merge --abort } Catch { Log-Message \"Échec de git merge --abort. Message: $($_.Exception.Message)\" \"ALERTE\"}\n    L57:         $ConflictLogFile = Join-Path $ConflictLogDir \"sync_conflicts_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"\n    L58:         Add-Content -Path $ConflictLogFile -Value \"--- Conflit Git détecté lors du pull - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---\"",
            "Line": "        Try { git merge --abort } Catch { Log-Message \"Échec de git merge --abort. Message: $($_.Exception.Message)\" \"ALERTE\"}",
            "Type": "control",
            "Index": 55
          },
          {
            "Context": "    L58:         Add-Content -Path $ConflictLogFile -Value \"--- Conflit Git détecté lors du pull - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---\"\n    L59:         Add-Content -Path $ConflictLogFile -Value \"Dépôt : $RepoPath\"\n>>> L60:         Add-Content -Path $ConflictLogFile -Value \"Branche : main\" # Assumer main, ajuster si nécessaire\n    L61:         Add-Content -Path $ConflictLogFile -Value \"Statut avant abort :\"\n    L62:         (git status) | Out-String | Add-Content -Path $ConflictLogFile",
            "Line": "        Add-Content -Path $ConflictLogFile -Value \"Branche : main\" # Assumer main, ajuster si nécessaire",
            "Type": "code",
            "Index": 59
          },
          {
            "Context": "    L39: } Catch {\n    L40:     Log-Message \"Échec lors de la vérification du statut Git ou du stash. Message : $($_.Exception.Message)\" \"ERREUR\"\n>>> L41:     Exit 1 # Sortie avec erreur\n    L42: }\n    L43: ",
            "Line": "    Exit 1 # Sortie avec erreur",
            "Type": "code",
            "Index": 40
          },
          {
            "Context": "    L69: }\n    L70: \n>>> L71: # --- Étape 3: Analyse des Nouveautés et Identification des Fichiers à Synchroniser ---\n    L72: Log-Message \"Étape 3: Analyse des Nouveautés et Identification des Fichiers à Synchroniser...\"\n    L73: ",
            "Line": "# --- Étape 3: Analyse des Nouveautés et Identification des Fichiers à Synchroniser ---",
            "Type": "comment",
            "Index": 70
          },
          {
            "Context": "    L70: \n    L71: # --- Étape 3: Analyse des Nouveautés et Identification des Fichiers à Synchroniser ---\n>>> L72: Log-Message \"Étape 3: Analyse des Nouveautés et Identification des Fichiers à Synchroniser...\"\n    L73: \n    L74: # Liste des fichiers et patterns à synchroniser (relatifs à $RepoPath)",
            "Line": "Log-Message \"Étape 3: Analyse des Nouveautés et Identification des Fichiers à Synchroniser...\"",
            "Type": "code",
            "Index": 71
          },
          {
            "Context": "    L72: Log-Message \"Étape 3: Analyse des Nouveautés et Identification des Fichiers à Synchroniser...\"\n    L73: \n>>> L74: # Liste des fichiers et patterns à synchroniser (relatifs à $RepoPath)\n    L75: $TargetFilesAndPatterns = @(\n    L76:     \"roo-config/settings/settings.json\",",
            "Line": "# Liste des fichiers et patterns à synchroniser (relatifs à $RepoPath)",
            "Type": "comment",
            "Index": 73
          },
          {
            "Context": "    L73: \n    L74: # Liste des fichiers et patterns à synchroniser (relatifs à $RepoPath)\n>>> L75: $TargetFilesAndPatterns = @(\n    L76:     \"roo-config/settings/settings.json\",\n    L77:     \"roo-config/settings/servers.json\",",
            "Line": "$TargetFilesAndPatterns = @(",
            "Type": "code",
            "Index": 74
          },
          {
            "Context": "    L80:     \"roo-config/qwen3-profiles/qwen3-parameters.json\",\n    L81:     \"roo-modes/configs/modes.json\",\n>>> L82:     \"roo-modes/configs/new-roomodes.json\",\n    L83:     \"roo-modes/configs/standard-modes.json\",\n    L84:     \"roo-modes/configs/vscode-custom-modes.json\"",
            "Line": "    \"roo-modes/configs/new-roomodes.json\",",
            "Type": "code",
            "Index": 81
          },
          {
            "Context": "    L85: )\n    L86: \n>>> L87: # Ajouter les .ps1 sous roo-config (récursif)\n    L88: Get-ChildItem -Path (Join-Path $RepoPath \"roo-config\") -Filter \"*.ps1\" -Recurse | ForEach-Object {\n    L89:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)",
            "Line": "# Ajouter les .ps1 sous roo-config (récursif)",
            "Type": "comment",
            "Index": 86
          },
          {
            "Context": "    L86: \n    L87: # Ajouter les .ps1 sous roo-config (récursif)\n>>> L88: Get-ChildItem -Path (Join-Path $RepoPath \"roo-config\") -Filter \"*.ps1\" -Recurse | ForEach-Object {\n    L89:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)\n    L90: }",
            "Line": "Get-ChildItem -Path (Join-Path $RepoPath \"roo-config\") -Filter \"*.ps1\" -Recurse | ForEach-Object {",
            "Type": "code",
            "Index": 87
          },
          {
            "Context": "    L87: # Ajouter les .ps1 sous roo-config (récursif)\n    L88: Get-ChildItem -Path (Join-Path $RepoPath \"roo-config\") -Filter \"*.ps1\" -Recurse | ForEach-Object {\n>>> L89:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)\n    L90: }\n    L91: ",
            "Line": "    $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)",
            "Type": "code",
            "Index": 88
          },
          {
            "Context": "    L90: }\n    L91: \n>>> L92: # Ajouter les .json sous roo-modes/n5/configs/ (récursif)\n    L93: Get-ChildItem -Path (Join-Path $RepoPath \"roo-modes/n5/configs\") -Filter \"*.json\" -Recurse | ForEach-Object {\n    L94:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)",
            "Line": "# Ajouter les .json sous roo-modes/n5/configs/ (récursif)",
            "Type": "comment",
            "Index": 91
          },
          {
            "Context": "    L91: \n    L92: # Ajouter les .json sous roo-modes/n5/configs/ (récursif)\n>>> L93: Get-ChildItem -Path (Join-Path $RepoPath \"roo-modes/n5/configs\") -Filter \"*.json\" -Recurse | ForEach-Object {\n    L94:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)\n    L95: }",
            "Line": "Get-ChildItem -Path (Join-Path $RepoPath \"roo-modes/n5/configs\") -Filter \"*.json\" -Recurse | ForEach-Object {",
            "Type": "code",
            "Index": 92
          },
          {
            "Context": "    L87: # Ajouter les .ps1 sous roo-config (récursif)\n    L88: Get-ChildItem -Path (Join-Path $RepoPath \"roo-config\") -Filter \"*.ps1\" -Recurse | ForEach-Object {\n>>> L89:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)\n    L90: }\n    L91: ",
            "Line": "    $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)",
            "Type": "code",
            "Index": 88
          },
          {
            "Context": "    L95: }\n    L96: \n>>> L97: # Ajouter les .md sous roo-config/ (récursif)\n    L98: Get-ChildItem -Path (Join-Path $RepoPath \"roo-config\") -Filter \"*.md\" -Recurse | ForEach-Object {\n    L99:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)",
            "Line": "# Ajouter les .md sous roo-config/ (récursif)",
            "Type": "comment",
            "Index": 96
          },
          {
            "Context": "    L96: \n    L97: # Ajouter les .md sous roo-config/ (récursif)\n>>> L98: Get-ChildItem -Path (Join-Path $RepoPath \"roo-config\") -Filter \"*.md\" -Recurse | ForEach-Object {\n    L99:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)\n    L100: }",
            "Line": "Get-ChildItem -Path (Join-Path $RepoPath \"roo-config\") -Filter \"*.md\" -Recurse | ForEach-Object {",
            "Type": "code",
            "Index": 97
          },
          {
            "Context": "    L87: # Ajouter les .ps1 sous roo-config (récursif)\n    L88: Get-ChildItem -Path (Join-Path $RepoPath \"roo-config\") -Filter \"*.ps1\" -Recurse | ForEach-Object {\n>>> L89:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)\n    L90: }\n    L91: ",
            "Line": "    $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)",
            "Type": "code",
            "Index": 88
          },
          {
            "Context": "    L100: }\n    L101: \n>>> L102: # Ajouter les .md sous roo-modes/ (récursif)\n    L103: Get-ChildItem -Path (Join-Path $RepoPath \"roo-modes\") -Filter \"*.md\" -Recurse | ForEach-Object {\n    L104:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)",
            "Line": "# Ajouter les .md sous roo-modes/ (récursif)",
            "Type": "comment",
            "Index": 101
          },
          {
            "Context": "    L101: \n    L102: # Ajouter les .md sous roo-modes/ (récursif)\n>>> L103: Get-ChildItem -Path (Join-Path $RepoPath \"roo-modes\") -Filter \"*.md\" -Recurse | ForEach-Object {\n    L104:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)\n    L105: }",
            "Line": "Get-ChildItem -Path (Join-Path $RepoPath \"roo-modes\") -Filter \"*.md\" -Recurse | ForEach-Object {",
            "Type": "code",
            "Index": 102
          },
          {
            "Context": "    L87: # Ajouter les .ps1 sous roo-config (récursif)\n    L88: Get-ChildItem -Path (Join-Path $RepoPath \"roo-config\") -Filter \"*.ps1\" -Recurse | ForEach-Object {\n>>> L89:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)\n    L90: }\n    L91: ",
            "Line": "    $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)",
            "Type": "code",
            "Index": 88
          },
          {
            "Context": "    L105: }\n    L106: \n>>> L107: # Rendre la liste unique\n    L108: $UniqueTargetFiles = $TargetFilesAndPatterns | Sort-Object -Unique\n    L109: ",
            "Line": "# Rendre la liste unique",
            "Type": "comment",
            "Index": 106
          },
          {
            "Context": "    L106: \n    L107: # Rendre la liste unique\n>>> L108: $UniqueTargetFiles = $TargetFilesAndPatterns | Sort-Object -Unique\n    L109: \n    L110: Log-Message \"Liste des fichiers cibles potentiels construite.\"",
            "Line": "$UniqueTargetFiles = $TargetFilesAndPatterns | Sort-Object -Unique",
            "Type": "code",
            "Index": 107
          },
          {
            "Context": "    L108: $UniqueTargetFiles = $TargetFilesAndPatterns | Sort-Object -Unique\n    L109: \n>>> L110: Log-Message \"Liste des fichiers cibles potentiels construite.\"\n    L111: \n    L112: $FilesModifiedByPull = @()",
            "Line": "Log-Message \"Liste des fichiers cibles potentiels construite.\"",
            "Type": "code",
            "Index": 109
          },
          {
            "Context": "    L110: Log-Message \"Liste des fichiers cibles potentiels construite.\"\n    L111: \n>>> L112: $FilesModifiedByPull = @()\n    L113: Try {\n    L114:     Log-Message \"Détection des fichiers modifiés par le pull (HEAD vs HEAD@{1})...\"",
            "Line": "$FilesModifiedByPull = @()",
            "Type": "code",
            "Index": 111
          },
          {
            "Context": "    L26: Log-Message \"Étape 1: Préparation et Vérification de l'Environnement Git...\"\n    L27: $StashApplied = $false\n>>> L28: Try {\n    L29:     Log-Message \"Vérification du statut Git avant pull...\"\n    L30:     $GitStatus = git status --porcelain",
            "Line": "Try {",
            "Type": "control",
            "Index": 27
          },
          {
            "Context": "    L112: $FilesModifiedByPull = @()\n    L113: Try {\n>>> L114:     Log-Message \"Détection des fichiers modifiés par le pull (HEAD vs HEAD@{1})...\"\n    L115:     if ($HeadBeforePull) {\n    L116:         $FilesModifiedByPull = git diff --name-only $HeadBeforePull HEAD | ForEach-Object { $_ -replace '/', '\\' } # Normaliser les slashes pour Windows",
            "Line": "    Log-Message \"Détection des fichiers modifiés par le pull (HEAD vs HEAD@{1})...\"",
            "Type": "code",
            "Index": 113
          },
          {
            "Context": "    L113: Try {\n    L114:     Log-Message \"Détection des fichiers modifiés par le pull (HEAD vs HEAD@{1})...\"\n>>> L115:     if ($HeadBeforePull) {\n    L116:         $FilesModifiedByPull = git diff --name-only $HeadBeforePull HEAD | ForEach-Object { $_ -replace '/', '\\' } # Normaliser les slashes pour Windows\n    L117:     } else {",
            "Line": "    if ($HeadBeforePull) {",
            "Type": "control",
            "Index": 114
          },
          {
            "Context": "    L114:     Log-Message \"Détection des fichiers modifiés par le pull (HEAD vs HEAD@{1})...\"\n    L115:     if ($HeadBeforePull) {\n>>> L116:         $FilesModifiedByPull = git diff --name-only $HeadBeforePull HEAD | ForEach-Object { $_ -replace '/', '\\' } # Normaliser les slashes pour Windows\n    L117:     } else {\n    L118:         Log-Message \"Impossible de déterminer HEAD avant le pull, synchronisation de tous les fichiers cibles.\" \"ALERTE\"",
            "Line": "        $FilesModifiedByPull = git diff --name-only $HeadBeforePull HEAD | ForEach-Object { $_ -replace '/', '\\' } # Normaliser les slashes pour Windows",
            "Type": "code",
            "Index": 115
          },
          {
            "Context": "    L116:         $FilesModifiedByPull = git diff --name-only $HeadBeforePull HEAD | ForEach-Object { $_ -replace '/', '\\' } # Normaliser les slashes pour Windows\n    L117:     } else {\n>>> L118:         Log-Message \"Impossible de déterminer HEAD avant le pull, synchronisation de tous les fichiers cibles.\" \"ALERTE\"\n    L119:         # En cas d'échec de la détection (ex: premier pull), on pourrait choisir de synchroniser tous les $UniqueTargetFiles\n    L120:         # Pour l'instant, on continue avec une liste vide, ce qui signifie que seuls les fichiers explicitement listés et existants seront copiés.",
            "Line": "        Log-Message \"Impossible de déterminer HEAD avant le pull, synchronisation de tous les fichiers cibles.\" \"ALERTE\"",
            "Type": "code",
            "Index": 117
          },
          {
            "Context": "    L117:     } else {\n    L118:         Log-Message \"Impossible de déterminer HEAD avant le pull, synchronisation de tous les fichiers cibles.\" \"ALERTE\"\n>>> L119:         # En cas d'échec de la détection (ex: premier pull), on pourrait choisir de synchroniser tous les $UniqueTargetFiles\n    L120:         # Pour l'instant, on continue avec une liste vide, ce qui signifie que seuls les fichiers explicitement listés et existants seront copiés.\n    L121:         # Ou, pour être plus sûr, on peut forcer la synchronisation de tous les fichiers cibles.",
            "Line": "        # En cas d'échec de la détection (ex: premier pull), on pourrait choisir de synchroniser tous les $UniqueTargetFiles",
            "Type": "comment",
            "Index": 118
          },
          {
            "Context": "    L118:         Log-Message \"Impossible de déterminer HEAD avant le pull, synchronisation de tous les fichiers cibles.\" \"ALERTE\"\n    L119:         # En cas d'échec de la détection (ex: premier pull), on pourrait choisir de synchroniser tous les $UniqueTargetFiles\n>>> L120:         # Pour l'instant, on continue avec une liste vide, ce qui signifie que seuls les fichiers explicitement listés et existants seront copiés.\n    L121:         # Ou, pour être plus sûr, on peut forcer la synchronisation de tous les fichiers cibles.\n    L122:         # $FilesModifiedByPull = $UniqueTargetFiles # Décommentez pour synchroniser tous les fichiers cibles si diff échoue",
            "Line": "        # Pour l'instant, on continue avec une liste vide, ce qui signifie que seuls les fichiers explicitement listés et existants seront copiés.",
            "Type": "comment",
            "Index": 119
          },
          {
            "Context": "    L119:         # En cas d'échec de la détection (ex: premier pull), on pourrait choisir de synchroniser tous les $UniqueTargetFiles\n    L120:         # Pour l'instant, on continue avec une liste vide, ce qui signifie que seuls les fichiers explicitement listés et existants seront copiés.\n>>> L121:         # Ou, pour être plus sûr, on peut forcer la synchronisation de tous les fichiers cibles.\n    L122:         # $FilesModifiedByPull = $UniqueTargetFiles # Décommentez pour synchroniser tous les fichiers cibles si diff échoue\n    L123:     }",
            "Line": "        # Ou, pour être plus sûr, on peut forcer la synchronisation de tous les fichiers cibles.",
            "Type": "comment",
            "Index": 120
          },
          {
            "Context": "    L120:         # Pour l'instant, on continue avec une liste vide, ce qui signifie que seuls les fichiers explicitement listés et existants seront copiés.\n    L121:         # Ou, pour être plus sûr, on peut forcer la synchronisation de tous les fichiers cibles.\n>>> L122:         # $FilesModifiedByPull = $UniqueTargetFiles # Décommentez pour synchroniser tous les fichiers cibles si diff échoue\n    L123:     }\n    L124:     Log-Message \"Fichiers modifiés par le pull : $($FilesModifiedByPull -join ', ')\"",
            "Line": "        # $FilesModifiedByPull = $UniqueTargetFiles # Décommentez pour synchroniser tous les fichiers cibles si diff échoue",
            "Type": "comment",
            "Index": 121
          },
          {
            "Context": "    L122:         # $FilesModifiedByPull = $UniqueTargetFiles # Décommentez pour synchroniser tous les fichiers cibles si diff échoue\n    L123:     }\n>>> L124:     Log-Message \"Fichiers modifiés par le pull : $($FilesModifiedByPull -join ', ')\"\n    L125: } Catch {\n    L126:     Log-Message \"Erreur lors de la détection des fichiers modifiés par git diff. Message : $($_.Exception.Message)\" \"ALERTE\"",
            "Line": "    Log-Message \"Fichiers modifiés par le pull : $($FilesModifiedByPull -join ', ')\"",
            "Type": "code",
            "Index": 123
          },
          {
            "Context": "    L37:         Log-Message \"Aucune modification locale détectée avant le pull.\"\n    L38:     }\n>>> L39: } Catch {\n    L40:     Log-Message \"Échec lors de la vérification du statut Git ou du stash. Message : $($_.Exception.Message)\" \"ERREUR\"\n    L41:     Exit 1 # Sortie avec erreur",
            "Line": "} Catch {",
            "Type": "code",
            "Index": 38
          },
          {
            "Context": "    L124:     Log-Message \"Fichiers modifiés par le pull : $($FilesModifiedByPull -join ', ')\"\n    L125: } Catch {\n>>> L126:     Log-Message \"Erreur lors de la détection des fichiers modifiés par git diff. Message : $($_.Exception.Message)\" \"ALERTE\"\n    L127:     # Continuer, mais la synchronisation pourrait ne pas être précise.\n    L128: }",
            "Line": "    Log-Message \"Erreur lors de la détection des fichiers modifiés par git diff. Message : $($_.Exception.Message)\" \"ALERTE\"",
            "Type": "code",
            "Index": 125
          },
          {
            "Context": "    L125: } Catch {\n    L126:     Log-Message \"Erreur lors de la détection des fichiers modifiés par git diff. Message : $($_.Exception.Message)\" \"ALERTE\"\n>>> L127:     # Continuer, mais la synchronisation pourrait ne pas être précise.\n    L128: }\n    L129: ",
            "Line": "    # Continuer, mais la synchronisation pourrait ne pas être précise.",
            "Type": "comment",
            "Index": 126
          },
          {
            "Context": "    L128: }\n    L129: \n>>> L130: $FilesToActuallySync = @()\n    L131: if ($FilesModifiedByPull.Count -gt 0) {\n    L132:     foreach ($modifiedFile in $FilesModifiedByPull) {",
            "Line": "$FilesToActuallySync = @()",
            "Type": "code",
            "Index": 129
          },
          {
            "Context": "    L129: \n    L130: $FilesToActuallySync = @()\n>>> L131: if ($FilesModifiedByPull.Count -gt 0) {\n    L132:     foreach ($modifiedFile in $FilesModifiedByPull) {\n    L133:         if ($UniqueTargetFiles -contains $modifiedFile) {",
            "Line": "if ($FilesModifiedByPull.Count -gt 0) {",
            "Type": "control",
            "Index": 130
          },
          {
            "Context": "    L130: $FilesToActuallySync = @()\n    L131: if ($FilesModifiedByPull.Count -gt 0) {\n>>> L132:     foreach ($modifiedFile in $FilesModifiedByPull) {\n    L133:         if ($UniqueTargetFiles -contains $modifiedFile) {\n    L134:             $FilesToActuallySync += $modifiedFile",
            "Line": "    foreach ($modifiedFile in $FilesModifiedByPull) {",
            "Type": "control",
            "Index": 131
          },
          {
            "Context": "    L131: if ($FilesModifiedByPull.Count -gt 0) {\n    L132:     foreach ($modifiedFile in $FilesModifiedByPull) {\n>>> L133:         if ($UniqueTargetFiles -contains $modifiedFile) {\n    L134:             $FilesToActuallySync += $modifiedFile\n    L135:         }",
            "Line": "        if ($UniqueTargetFiles -contains $modifiedFile) {",
            "Type": "control",
            "Index": 132
          },
          {
            "Context": "    L132:     foreach ($modifiedFile in $FilesModifiedByPull) {\n    L133:         if ($UniqueTargetFiles -contains $modifiedFile) {\n>>> L134:             $FilesToActuallySync += $modifiedFile\n    L135:         }\n    L136:     }",
            "Line": "            $FilesToActuallySync += $modifiedFile",
            "Type": "code",
            "Index": 133
          },
          {
            "Context": "    L136:     }\n    L137: } else {\n>>> L138:     # Si git diff n'a rien retourné ou a échoué, on se rabat sur une copie de tous les fichiers cibles existants\n    L139:     # Ceci est une mesure de sécurité, mais peut être affiné.\n    L140:     Log-Message \"Aucun fichier spécifiquement modifié par le pull détecté ou diff échoué. Vérification de tous les fichiers cibles pour synchronisation.\" \"ALERTE\"",
            "Line": "    # Si git diff n'a rien retourné ou a échoué, on se rabat sur une copie de tous les fichiers cibles existants",
            "Type": "comment",
            "Index": 137
          },
          {
            "Context": "    L137: } else {\n    L138:     # Si git diff n'a rien retourné ou a échoué, on se rabat sur une copie de tous les fichiers cibles existants\n>>> L139:     # Ceci est une mesure de sécurité, mais peut être affiné.\n    L140:     Log-Message \"Aucun fichier spécifiquement modifié par le pull détecté ou diff échoué. Vérification de tous les fichiers cibles pour synchronisation.\" \"ALERTE\"\n    L141:     foreach ($targetFile in $UniqueTargetFiles) {",
            "Line": "    # Ceci est une mesure de sécurité, mais peut être affiné.",
            "Type": "comment",
            "Index": 138
          },
          {
            "Context": "    L138:     # Si git diff n'a rien retourné ou a échoué, on se rabat sur une copie de tous les fichiers cibles existants\n    L139:     # Ceci est une mesure de sécurité, mais peut être affiné.\n>>> L140:     Log-Message \"Aucun fichier spécifiquement modifié par le pull détecté ou diff échoué. Vérification de tous les fichiers cibles pour synchronisation.\" \"ALERTE\"\n    L141:     foreach ($targetFile in $UniqueTargetFiles) {\n    L142:         if (Test-Path (Join-Path $RepoPath $targetFile)) {",
            "Line": "    Log-Message \"Aucun fichier spécifiquement modifié par le pull détecté ou diff échoué. Vérification de tous les fichiers cibles pour synchronisation.\" \"ALERTE\"",
            "Type": "code",
            "Index": 139
          },
          {
            "Context": "    L139:     # Ceci est une mesure de sécurité, mais peut être affiné.\n    L140:     Log-Message \"Aucun fichier spécifiquement modifié par le pull détecté ou diff échoué. Vérification de tous les fichiers cibles pour synchronisation.\" \"ALERTE\"\n>>> L141:     foreach ($targetFile in $UniqueTargetFiles) {\n    L142:         if (Test-Path (Join-Path $RepoPath $targetFile)) {\n    L143:             $FilesToActuallySync += $targetFile",
            "Line": "    foreach ($targetFile in $UniqueTargetFiles) {",
            "Type": "control",
            "Index": 140
          },
          {
            "Context": "    L140:     Log-Message \"Aucun fichier spécifiquement modifié par le pull détecté ou diff échoué. Vérification de tous les fichiers cibles pour synchronisation.\" \"ALERTE\"\n    L141:     foreach ($targetFile in $UniqueTargetFiles) {\n>>> L142:         if (Test-Path (Join-Path $RepoPath $targetFile)) {\n    L143:             $FilesToActuallySync += $targetFile\n    L144:         }",
            "Line": "        if (Test-Path (Join-Path $RepoPath $targetFile)) {",
            "Type": "control",
            "Index": 141
          },
          {
            "Context": "    L141:     foreach ($targetFile in $UniqueTargetFiles) {\n    L142:         if (Test-Path (Join-Path $RepoPath $targetFile)) {\n>>> L143:             $FilesToActuallySync += $targetFile\n    L144:         }\n    L145:     }",
            "Line": "            $FilesToActuallySync += $targetFile",
            "Type": "code",
            "Index": 142
          },
          {
            "Context": "    L145:     }\n    L146: }\n>>> L147: $FilesToActuallySync = $FilesToActuallySync | Sort-Object -Unique\n    L148: Log-Message \"Fichiers identifiés pour synchronisation réelle : $($FilesToActuallySync -join ', ')\"\n    L149: ",
            "Line": "$FilesToActuallySync = $FilesToActuallySync | Sort-Object -Unique",
            "Type": "code",
            "Index": 146
          },
          {
            "Context": "    L146: }\n    L147: $FilesToActuallySync = $FilesToActuallySync | Sort-Object -Unique\n>>> L148: Log-Message \"Fichiers identifiés pour synchronisation réelle : $($FilesToActuallySync -join ', ')\"\n    L149: \n    L150: ",
            "Line": "Log-Message \"Fichiers identifiés pour synchronisation réelle : $($FilesToActuallySync -join ', ')\"",
            "Type": "code",
            "Index": 147
          },
          {
            "Context": "    L149: \n    L150: \n>>> L151: # --- Étape 4: Exécution des Opérations de Synchronisation ---\n    L152: Log-Message \"Étape 4: Exécution des Opérations de Synchronisation...\"\n    L153: $SyncedJsonFiles = @()",
            "Line": "# --- Étape 4: Exécution des Opérations de Synchronisation ---",
            "Type": "comment",
            "Index": 150
          },
          {
            "Context": "    L150: \n    L151: # --- Étape 4: Exécution des Opérations de Synchronisation ---\n>>> L152: Log-Message \"Étape 4: Exécution des Opérations de Synchronisation...\"\n    L153: $SyncedJsonFiles = @()\n    L154: ",
            "Line": "Log-Message \"Étape 4: Exécution des Opérations de Synchronisation...\"",
            "Type": "code",
            "Index": 151
          },
          {
            "Context": "    L151: # --- Étape 4: Exécution des Opérations de Synchronisation ---\n    L152: Log-Message \"Étape 4: Exécution des Opérations de Synchronisation...\"\n>>> L153: $SyncedJsonFiles = @()\n    L154: \n    L155: if ($FilesToActuallySync.Count -eq 0) {",
            "Line": "$SyncedJsonFiles = @()",
            "Type": "code",
            "Index": 152
          },
          {
            "Context": "    L153: $SyncedJsonFiles = @()\n    L154: \n>>> L155: if ($FilesToActuallySync.Count -eq 0) {\n    L156:     Log-Message \"Aucun fichier à synchroniser cette fois-ci.\"\n    L157: }",
            "Line": "if ($FilesToActuallySync.Count -eq 0) {",
            "Type": "control",
            "Index": 154
          },
          {
            "Context": "    L154: \n    L155: if ($FilesToActuallySync.Count -eq 0) {\n>>> L156:     Log-Message \"Aucun fichier à synchroniser cette fois-ci.\"\n    L157: }\n    L158: ",
            "Line": "    Log-Message \"Aucun fichier à synchroniser cette fois-ci.\"",
            "Type": "code",
            "Index": 155
          },
          {
            "Context": "    L157: }\n    L158: \n>>> L159: foreach ($FileRelPath in $FilesToActuallySync) {\n    L160:     $SourceFile = Join-Path $RepoPath $FileRelPath\n    L161:     ",
            "Line": "foreach ($FileRelPath in $FilesToActuallySync) {",
            "Type": "control",
            "Index": 158
          },
          {
            "Context": "    L158: \n    L159: foreach ($FileRelPath in $FilesToActuallySync) {\n>>> L160:     $SourceFile = Join-Path $RepoPath $FileRelPath\n    L161:     \n    L162:     # Vérification que le fichier existe et validation JSON si applicable",
            "Line": "    $SourceFile = Join-Path $RepoPath $FileRelPath",
            "Type": "code",
            "Index": 159
          },
          {
            "Context": "    L160:     $SourceFile = Join-Path $RepoPath $FileRelPath\n    L161:     \n>>> L162:     # Vérification que le fichier existe et validation JSON si applicable\n    L163:     if (Test-Path $SourceFile) {\n    L164:         Try {",
            "Line": "    # Vérification que le fichier existe et validation JSON si applicable",
            "Type": "comment",
            "Index": 161
          },
          {
            "Context": "    L161:     \n    L162:     # Vérification que le fichier existe et validation JSON si applicable\n>>> L163:     if (Test-Path $SourceFile) {\n    L164:         Try {\n    L165:             # Pour les fichiers JSON, effectuer une validation",
            "Line": "    if (Test-Path $SourceFile) {",
            "Type": "control",
            "Index": 162
          },
          {
            "Context": "    L162:     # Vérification que le fichier existe et validation JSON si applicable\n    L163:     if (Test-Path $SourceFile) {\n>>> L164:         Try {\n    L165:             # Pour les fichiers JSON, effectuer une validation\n    L166:             if ($FileRelPath.EndsWith(\".json\")) {",
            "Line": "        Try {",
            "Type": "control",
            "Index": 163
          },
          {
            "Context": "    L163:     if (Test-Path $SourceFile) {\n    L164:         Try {\n>>> L165:             # Pour les fichiers JSON, effectuer une validation\n    L166:             if ($FileRelPath.EndsWith(\".json\")) {\n    L167:                 Get-Content -Raw $SourceFile | ConvertFrom-Json | Out-Null",
            "Line": "            # Pour les fichiers JSON, effectuer une validation",
            "Type": "comment",
            "Index": 164
          },
          {
            "Context": "    L164:         Try {\n    L165:             # Pour les fichiers JSON, effectuer une validation\n>>> L166:             if ($FileRelPath.EndsWith(\".json\")) {\n    L167:                 Get-Content -Raw $SourceFile | ConvertFrom-Json | Out-Null\n    L168:                 Log-Message \"Validé (JSON valide) : $($FileRelPath)\"",
            "Line": "            if ($FileRelPath.EndsWith(\".json\")) {",
            "Type": "control",
            "Index": 165
          },
          {
            "Context": "    L165:             # Pour les fichiers JSON, effectuer une validation\n    L166:             if ($FileRelPath.EndsWith(\".json\")) {\n>>> L167:                 Get-Content -Raw $SourceFile | ConvertFrom-Json | Out-Null\n    L168:                 Log-Message \"Validé (JSON valide) : $($FileRelPath)\"\n    L169:                 $SyncedJsonFiles += $SourceFile",
            "Line": "                Get-Content -Raw $SourceFile | ConvertFrom-Json | Out-Null",
            "Type": "code",
            "Index": 166
          },
          {
            "Context": "    L166:             if ($FileRelPath.EndsWith(\".json\")) {\n    L167:                 Get-Content -Raw $SourceFile | ConvertFrom-Json | Out-Null\n>>> L168:                 Log-Message \"Validé (JSON valide) : $($FileRelPath)\"\n    L169:                 $SyncedJsonFiles += $SourceFile\n    L170:             } else {",
            "Line": "                Log-Message \"Validé (JSON valide) : $($FileRelPath)\"",
            "Type": "code",
            "Index": 167
          },
          {
            "Context": "    L167:                 Get-Content -Raw $SourceFile | ConvertFrom-Json | Out-Null\n    L168:                 Log-Message \"Validé (JSON valide) : $($FileRelPath)\"\n>>> L169:                 $SyncedJsonFiles += $SourceFile\n    L170:             } else {\n    L171:                 Log-Message \"Vérifié : $($FileRelPath)\"",
            "Line": "                $SyncedJsonFiles += $SourceFile",
            "Type": "code",
            "Index": 168
          },
          {
            "Context": "    L168:                 Log-Message \"Validé (JSON valide) : $($FileRelPath)\"\n    L169:                 $SyncedJsonFiles += $SourceFile\n>>> L170:             } else {\n    L171:                 Log-Message \"Vérifié : $($FileRelPath)\"\n    L172:             }",
            "Line": "            } else {",
            "Type": "code",
            "Index": 169
          },
          {
            "Context": "    L169:                 $SyncedJsonFiles += $SourceFile\n    L170:             } else {\n>>> L171:                 Log-Message \"Vérifié : $($FileRelPath)\"\n    L172:             }\n    L173:         } Catch {",
            "Line": "                Log-Message \"Vérifié : $($FileRelPath)\"",
            "Type": "code",
            "Index": 170
          },
          {
            "Context": "    L171:                 Log-Message \"Vérifié : $($FileRelPath)\"\n    L172:             }\n>>> L173:         } Catch {\n    L174:             Log-Message \"Fichier invalide après pull : $($FileRelPath). Détails : $($_.Exception.Message)\" \"ERREUR\"\n    L175:             Exit 1 # Fichier critique invalide",
            "Line": "        } Catch {",
            "Type": "code",
            "Index": 172
          },
          {
            "Context": "    L172:             }\n    L173:         } Catch {\n>>> L174:             Log-Message \"Fichier invalide après pull : $($FileRelPath). Détails : $($_.Exception.Message)\" \"ERREUR\"\n    L175:             Exit 1 # Fichier critique invalide\n    L176:         }",
            "Line": "            Log-Message \"Fichier invalide après pull : $($FileRelPath). Détails : $($_.Exception.Message)\" \"ERREUR\"",
            "Type": "code",
            "Index": 173
          },
          {
            "Context": "    L173:         } Catch {\n    L174:             Log-Message \"Fichier invalide après pull : $($FileRelPath). Détails : $($_.Exception.Message)\" \"ERREUR\"\n>>> L175:             Exit 1 # Fichier critique invalide\n    L176:         }\n    L177:     } else {",
            "Line": "            Exit 1 # Fichier critique invalide",
            "Type": "code",
            "Index": 174
          },
          {
            "Context": "    L34:         Log-Message \"Stash réussi.\"\n    L35:         $StashApplied = $true\n>>> L36:     } else {\n    L37:         Log-Message \"Aucune modification locale détectée avant le pull.\"\n    L38:     }",
            "Line": "    } else {",
            "Type": "code",
            "Index": 35
          },
          {
            "Context": "    L176:         }\n    L177:     } else {\n>>> L178:         Log-Message \"Fichier cible non trouvé (peut avoir été supprimé par le pull) : $($SourceFile)\" \"ALERTE\"\n    L179:     }\n    L180: }",
            "Line": "        Log-Message \"Fichier cible non trouvé (peut avoir été supprimé par le pull) : $($SourceFile)\" \"ALERTE\"",
            "Type": "code",
            "Index": 177
          },
          {
            "Context": "    L9: If (-not (Test-Path $ConflictLogDir)) {\n    L10:     New-Item -ItemType Directory -Path $ConflictLogDir -ErrorAction SilentlyContinue | Out-Null\n>>> L11: }\n    L12: \n    L13: function Log-Message {",
            "Line": "}",
            "Type": "structure",
            "Index": 10
          },
          {
            "Context": "    L180: }\n    L181: \n>>> L182: # --- Étape 5: Vérification Post-Synchronisation ---\n    L183: Log-Message \"Étape 5: Vérification Post-Synchronisation...\"\n    L184: ",
            "Line": "# --- Étape 5: Vérification Post-Synchronisation ---",
            "Type": "comment",
            "Index": 181
          },
          {
            "Context": "    L181: \n    L182: # --- Étape 5: Vérification Post-Synchronisation ---\n>>> L183: Log-Message \"Étape 5: Vérification Post-Synchronisation...\"\n    L184: \n    L185: # Vérification des fichiers JSON synchronisés",
            "Line": "Log-Message \"Étape 5: Vérification Post-Synchronisation...\"",
            "Type": "code",
            "Index": 182
          },
          {
            "Context": "    L183: Log-Message \"Étape 5: Vérification Post-Synchronisation...\"\n    L184: \n>>> L185: # Vérification des fichiers JSON synchronisés\n    L186: if ($SyncedJsonFiles.Count -gt 0) {\n    L187:     Log-Message \"Vérification des fichiers JSON synchronisés...\"",
            "Line": "# Vérification des fichiers JSON synchronisés",
            "Type": "comment",
            "Index": 184
          },
          {
            "Context": "    L184: \n    L185: # Vérification des fichiers JSON synchronisés\n>>> L186: if ($SyncedJsonFiles.Count -gt 0) {\n    L187:     Log-Message \"Vérification des fichiers JSON synchronisés...\"\n    L188:     foreach ($JsonFileFullPath in $SyncedJsonFiles) {",
            "Line": "if ($SyncedJsonFiles.Count -gt 0) {",
            "Type": "control",
            "Index": 185
          },
          {
            "Context": "    L185: # Vérification des fichiers JSON synchronisés\n    L186: if ($SyncedJsonFiles.Count -gt 0) {\n>>> L187:     Log-Message \"Vérification des fichiers JSON synchronisés...\"\n    L188:     foreach ($JsonFileFullPath in $SyncedJsonFiles) {\n    L189:         if (Test-Path $JsonFileFullPath) {",
            "Line": "    Log-Message \"Vérification des fichiers JSON synchronisés...\"",
            "Type": "code",
            "Index": 186
          },
          {
            "Context": "    L186: if ($SyncedJsonFiles.Count -gt 0) {\n    L187:     Log-Message \"Vérification des fichiers JSON synchronisés...\"\n>>> L188:     foreach ($JsonFileFullPath in $SyncedJsonFiles) {\n    L189:         if (Test-Path $JsonFileFullPath) {\n    L190:             Try {",
            "Line": "    foreach ($JsonFileFullPath in $SyncedJsonFiles) {",
            "Type": "control",
            "Index": 187
          },
          {
            "Context": "    L187:     Log-Message \"Vérification des fichiers JSON synchronisés...\"\n    L188:     foreach ($JsonFileFullPath in $SyncedJsonFiles) {\n>>> L189:         if (Test-Path $JsonFileFullPath) {\n    L190:             Try {\n    L191:                 Get-Content -Raw $JsonFileFullPath | ConvertFrom-Json | Out-Null",
            "Line": "        if (Test-Path $JsonFileFullPath) {",
            "Type": "control",
            "Index": 188
          },
          {
            "Context": "    L189:         if (Test-Path $JsonFileFullPath) {\n    L190:             Try {\n>>> L191:                 Get-Content -Raw $JsonFileFullPath | ConvertFrom-Json | Out-Null\n    L192:                 Log-Message \"Vérifié (JSON valide) : $($JsonFileFullPath.Substring($RepoPath.Length + 1))\"\n    L193:             } Catch {",
            "Line": "                Get-Content -Raw $JsonFileFullPath | ConvertFrom-Json | Out-Null",
            "Type": "code",
            "Index": 190
          },
          {
            "Context": "    L190:             Try {\n    L191:                 Get-Content -Raw $JsonFileFullPath | ConvertFrom-Json | Out-Null\n>>> L192:                 Log-Message \"Vérifié (JSON valide) : $($JsonFileFullPath.Substring($RepoPath.Length + 1))\"\n    L193:             } Catch {\n    L194:                 Log-Message \"Fichier JSON invalide après synchronisation : $($JsonFileFullPath.Substring($RepoPath.Length + 1)). Détails : $($_.Exception.Message)\" \"ERREUR\"",
            "Line": "                Log-Message \"Vérifié (JSON valide) : $($JsonFileFullPath.Substring($RepoPath.Length + 1))\"",
            "Type": "code",
            "Index": 191
          },
          {
            "Context": "    L192:                 Log-Message \"Vérifié (JSON valide) : $($JsonFileFullPath.Substring($RepoPath.Length + 1))\"\n    L193:             } Catch {\n>>> L194:                 Log-Message \"Fichier JSON invalide après synchronisation : $($JsonFileFullPath.Substring($RepoPath.Length + 1)). Détails : $($_.Exception.Message)\" \"ERREUR\"\n    L195:                 Exit 1 # Fichier JSON critique invalide\n    L196:             }",
            "Line": "                Log-Message \"Fichier JSON invalide après synchronisation : $($JsonFileFullPath.Substring($RepoPath.Length + 1)). Détails : $($_.Exception.Message)\" \"ERREUR\"",
            "Type": "code",
            "Index": 193
          },
          {
            "Context": "    L193:             } Catch {\n    L194:                 Log-Message \"Fichier JSON invalide après synchronisation : $($JsonFileFullPath.Substring($RepoPath.Length + 1)). Détails : $($_.Exception.Message)\" \"ERREUR\"\n>>> L195:                 Exit 1 # Fichier JSON critique invalide\n    L196:             }\n    L197:         }",
            "Line": "                Exit 1 # Fichier JSON critique invalide",
            "Type": "code",
            "Index": 194
          },
          {
            "Context": "    L133:         if ($UniqueTargetFiles -contains $modifiedFile) {\n    L134:             $FilesToActuallySync += $modifiedFile\n>>> L135:         }\n    L136:     }\n    L137: } else {",
            "Line": "        }",
            "Type": "structure",
            "Index": 134
          },
          {
            "Context": "    L198:     }\n    L199: } else {\n>>> L200:     Log-Message \"Aucun fichier JSON n'a été synchronisé, pas de vérification JSON nécessaire.\"\n    L201: }\n    L202: ",
            "Line": "    Log-Message \"Aucun fichier JSON n'a été synchronisé, pas de vérification JSON nécessaire.\"",
            "Type": "code",
            "Index": 199
          },
          {
            "Context": "    L9: If (-not (Test-Path $ConflictLogDir)) {\n    L10:     New-Item -ItemType Directory -Path $ConflictLogDir -ErrorAction SilentlyContinue | Out-Null\n>>> L11: }\n    L12: \n    L13: function Log-Message {",
            "Line": "}",
            "Type": "structure",
            "Index": 10
          },
          {
            "Context": "    L201: }\n    L202: \n>>> L203: # Vérification de l'existence des fichiers clés\n    L204: $CriticalFiles = @(\n    L205:     \"roo-config/settings/settings.json\",",
            "Line": "# Vérification de l'existence des fichiers clés",
            "Type": "comment",
            "Index": 202
          },
          {
            "Context": "    L202: \n    L203: # Vérification de l'existence des fichiers clés\n>>> L204: $CriticalFiles = @(\n    L205:     \"roo-config/settings/settings.json\",\n    L206:     \"roo-modes/configs/modes.json\"",
            "Line": "$CriticalFiles = @(",
            "Type": "code",
            "Index": 203
          },
          {
            "Context": "    L74: # Liste des fichiers et patterns à synchroniser (relatifs à $RepoPath)\n    L75: $TargetFilesAndPatterns = @(\n>>> L76:     \"roo-config/settings/settings.json\",\n    L77:     \"roo-config/settings/servers.json\",\n    L78:     \"roo-config/settings/modes.json\",",
            "Line": "    \"roo-config/settings/settings.json\",",
            "Type": "code",
            "Index": 75
          },
          {
            "Context": "    L204: $CriticalFiles = @(\n    L205:     \"roo-config/settings/settings.json\",\n>>> L206:     \"roo-modes/configs/modes.json\"\n    L207:     # Ajoutez d'autres fichiers critiques ici si nécessaire\n    L208: )",
            "Line": "    \"roo-modes/configs/modes.json\"",
            "Type": "code",
            "Index": 205
          },
          {
            "Context": "    L205:     \"roo-config/settings/settings.json\",\n    L206:     \"roo-modes/configs/modes.json\"\n>>> L207:     # Ajoutez d'autres fichiers critiques ici si nécessaire\n    L208: )\n    L209: Log-Message \"Vérification de l'existence des fichiers critiques...\"",
            "Line": "    # Ajoutez d'autres fichiers critiques ici si nécessaire",
            "Type": "comment",
            "Index": 206
          },
          {
            "Context": "    L83:     \"roo-modes/configs/standard-modes.json\",\n    L84:     \"roo-modes/configs/vscode-custom-modes.json\"\n>>> L85: )\n    L86: \n    L87: # Ajouter les .ps1 sous roo-config (récursif)",
            "Line": ")",
            "Type": "structure",
            "Index": 84
          },
          {
            "Context": "    L207:     # Ajoutez d'autres fichiers critiques ici si nécessaire\n    L208: )\n>>> L209: Log-Message \"Vérification de l'existence des fichiers critiques...\"\n    L210: foreach ($CriticalFileRelPath in $CriticalFiles) {\n    L211:     $FullPath = Join-Path $RepoPath $CriticalFileRelPath",
            "Line": "Log-Message \"Vérification de l'existence des fichiers critiques...\"",
            "Type": "code",
            "Index": 208
          },
          {
            "Context": "    L208: )\n    L209: Log-Message \"Vérification de l'existence des fichiers critiques...\"\n>>> L210: foreach ($CriticalFileRelPath in $CriticalFiles) {\n    L211:     $FullPath = Join-Path $RepoPath $CriticalFileRelPath\n    L212:     if (-not (Test-Path $FullPath)) {",
            "Line": "foreach ($CriticalFileRelPath in $CriticalFiles) {",
            "Type": "control",
            "Index": 209
          },
          {
            "Context": "    L209: Log-Message \"Vérification de l'existence des fichiers critiques...\"\n    L210: foreach ($CriticalFileRelPath in $CriticalFiles) {\n>>> L211:     $FullPath = Join-Path $RepoPath $CriticalFileRelPath\n    L212:     if (-not (Test-Path $FullPath)) {\n    L213:         Log-Message \"Fichier critique manquant après synchronisation : $($CriticalFileRelPath)\" \"ERREUR\"",
            "Line": "    $FullPath = Join-Path $RepoPath $CriticalFileRelPath",
            "Type": "code",
            "Index": 210
          },
          {
            "Context": "    L210: foreach ($CriticalFileRelPath in $CriticalFiles) {\n    L211:     $FullPath = Join-Path $RepoPath $CriticalFileRelPath\n>>> L212:     if (-not (Test-Path $FullPath)) {\n    L213:         Log-Message \"Fichier critique manquant après synchronisation : $($CriticalFileRelPath)\" \"ERREUR\"\n    L214:         Exit 1 # Fichier critique manquant",
            "Line": "    if (-not (Test-Path $FullPath)) {",
            "Type": "control",
            "Index": 211
          },
          {
            "Context": "    L211:     $FullPath = Join-Path $RepoPath $CriticalFileRelPath\n    L212:     if (-not (Test-Path $FullPath)) {\n>>> L213:         Log-Message \"Fichier critique manquant après synchronisation : $($CriticalFileRelPath)\" \"ERREUR\"\n    L214:         Exit 1 # Fichier critique manquant\n    L215:     } else {",
            "Line": "        Log-Message \"Fichier critique manquant après synchronisation : $($CriticalFileRelPath)\" \"ERREUR\"",
            "Type": "code",
            "Index": 212
          },
          {
            "Context": "    L212:     if (-not (Test-Path $FullPath)) {\n    L213:         Log-Message \"Fichier critique manquant après synchronisation : $($CriticalFileRelPath)\" \"ERREUR\"\n>>> L214:         Exit 1 # Fichier critique manquant\n    L215:     } else {\n    L216:         Log-Message \"Fichier critique présent : $($CriticalFileRelPath)\"",
            "Line": "        Exit 1 # Fichier critique manquant",
            "Type": "code",
            "Index": 213
          },
          {
            "Context": "    L34:         Log-Message \"Stash réussi.\"\n    L35:         $StashApplied = $true\n>>> L36:     } else {\n    L37:         Log-Message \"Aucune modification locale détectée avant le pull.\"\n    L38:     }",
            "Line": "    } else {",
            "Type": "code",
            "Index": 35
          },
          {
            "Context": "    L214:         Exit 1 # Fichier critique manquant\n    L215:     } else {\n>>> L216:         Log-Message \"Fichier critique présent : $($CriticalFileRelPath)\"\n    L217:     }\n    L218: }",
            "Line": "        Log-Message \"Fichier critique présent : $($CriticalFileRelPath)\"",
            "Type": "code",
            "Index": 215
          },
          {
            "Context": "    L9: If (-not (Test-Path $ConflictLogDir)) {\n    L10:     New-Item -ItemType Directory -Path $ConflictLogDir -ErrorAction SilentlyContinue | Out-Null\n>>> L11: }\n    L12: \n    L13: function Log-Message {",
            "Line": "}",
            "Type": "structure",
            "Index": 10
          },
          {
            "Context": "    L218: }\n    L219: \n>>> L220: # --- Étape 6: Gestion des Commits de Correction (si nécessaire) ---\n    L221: Log-Message \"Étape 6: Gestion des Commits de Correction...\"\n    L222: Try {",
            "Line": "# --- Étape 6: Gestion des Commits de Correction (si nécessaire) ---",
            "Type": "comment",
            "Index": 219
          },
          {
            "Context": "    L219: \n    L220: # --- Étape 6: Gestion des Commits de Correction (si nécessaire) ---\n>>> L221: Log-Message \"Étape 6: Gestion des Commits de Correction...\"\n    L222: Try {\n    L223:     $PostSyncStatus = git status --porcelain",
            "Line": "Log-Message \"Étape 6: Gestion des Commits de Correction...\"",
            "Type": "code",
            "Index": 220
          },
          {
            "Context": "    L26: Log-Message \"Étape 1: Préparation et Vérification de l'Environnement Git...\"\n    L27: $StashApplied = $false\n>>> L28: Try {\n    L29:     Log-Message \"Vérification du statut Git avant pull...\"\n    L30:     $GitStatus = git status --porcelain",
            "Line": "Try {",
            "Type": "control",
            "Index": 27
          },
          {
            "Context": "    L221: Log-Message \"Étape 6: Gestion des Commits de Correction...\"\n    L222: Try {\n>>> L223:     $PostSyncStatus = git status --porcelain\n    L224:     if ($PostSyncStatus) {\n    L225:         Log-Message \"Modifications détectées après synchronisation (ex: logs). Création d'un commit de correction...\" \"ALERTE\"",
            "Line": "    $PostSyncStatus = git status --porcelain",
            "Type": "code",
            "Index": 222
          },
          {
            "Context": "    L222: Try {\n    L223:     $PostSyncStatus = git status --porcelain\n>>> L224:     if ($PostSyncStatus) {\n    L225:         Log-Message \"Modifications détectées après synchronisation (ex: logs). Création d'un commit de correction...\" \"ALERTE\"\n    L226:         git add . # Ajoute tous les changements, y compris les logs. Peut être affiné.",
            "Line": "    if ($PostSyncStatus) {",
            "Type": "control",
            "Index": 223
          },
          {
            "Context": "    L223:     $PostSyncStatus = git status --porcelain\n    L224:     if ($PostSyncStatus) {\n>>> L225:         Log-Message \"Modifications détectées après synchronisation (ex: logs). Création d'un commit de correction...\" \"ALERTE\"\n    L226:         git add . # Ajoute tous les changements, y compris les logs. Peut être affiné.\n    L227:         git commit -m \"SYNC: [Automated] Mise à jour post-synchronisation (logs, etc.)\"",
            "Line": "        Log-Message \"Modifications détectées après synchronisation (ex: logs). Création d'un commit de correction...\" \"ALERTE\"",
            "Type": "code",
            "Index": 224
          },
          {
            "Context": "    L224:     if ($PostSyncStatus) {\n    L225:         Log-Message \"Modifications détectées après synchronisation (ex: logs). Création d'un commit de correction...\" \"ALERTE\"\n>>> L226:         git add . # Ajoute tous les changements, y compris les logs. Peut être affiné.\n    L227:         git commit -m \"SYNC: [Automated] Mise à jour post-synchronisation (logs, etc.)\"\n    L228:         Log-Message \"Commit de correction créé.\"",
            "Line": "        git add . # Ajoute tous les changements, y compris les logs. Peut être affiné.",
            "Type": "code",
            "Index": 225
          },
          {
            "Context": "    L225:         Log-Message \"Modifications détectées après synchronisation (ex: logs). Création d'un commit de correction...\" \"ALERTE\"\n    L226:         git add . # Ajoute tous les changements, y compris les logs. Peut être affiné.\n>>> L227:         git commit -m \"SYNC: [Automated] Mise à jour post-synchronisation (logs, etc.)\"\n    L228:         Log-Message \"Commit de correction créé.\"\n    L229: ",
            "Line": "        git commit -m \"SYNC: [Automated] Mise à jour post-synchronisation (logs, etc.)\"",
            "Type": "code",
            "Index": 226
          },
          {
            "Context": "    L226:         git add . # Ajoute tous les changements, y compris les logs. Peut être affiné.\n    L227:         git commit -m \"SYNC: [Automated] Mise à jour post-synchronisation (logs, etc.)\"\n>>> L228:         Log-Message \"Commit de correction créé.\"\n    L229: \n    L230:         Log-Message \"Tentative de push du commit de correction...\"",
            "Line": "        Log-Message \"Commit de correction créé.\"",
            "Type": "code",
            "Index": 227
          },
          {
            "Context": "    L228:         Log-Message \"Commit de correction créé.\"\n    L229: \n>>> L230:         Log-Message \"Tentative de push du commit de correction...\"\n    L231:         git push origin main\n    L232:         Log-Message \"Push du commit de correction réussi.\"",
            "Line": "        Log-Message \"Tentative de push du commit de correction...\"",
            "Type": "code",
            "Index": 229
          },
          {
            "Context": "    L229: \n    L230:         Log-Message \"Tentative de push du commit de correction...\"\n>>> L231:         git push origin main\n    L232:         Log-Message \"Push du commit de correction réussi.\"\n    L233:     } else {",
            "Line": "        git push origin main",
            "Type": "code",
            "Index": 230
          },
          {
            "Context": "    L230:         Log-Message \"Tentative de push du commit de correction...\"\n    L231:         git push origin main\n>>> L232:         Log-Message \"Push du commit de correction réussi.\"\n    L233:     } else {\n    L234:         Log-Message \"Aucune modification à commiter après synchronisation.\"",
            "Line": "        Log-Message \"Push du commit de correction réussi.\"",
            "Type": "code",
            "Index": 231
          },
          {
            "Context": "    L34:         Log-Message \"Stash réussi.\"\n    L35:         $StashApplied = $true\n>>> L36:     } else {\n    L37:         Log-Message \"Aucune modification locale détectée avant le pull.\"\n    L38:     }",
            "Line": "    } else {",
            "Type": "code",
            "Index": 35
          },
          {
            "Context": "    L232:         Log-Message \"Push du commit de correction réussi.\"\n    L233:     } else {\n>>> L234:         Log-Message \"Aucune modification à commiter après synchronisation.\"\n    L235:     }\n    L236: } Catch {",
            "Line": "        Log-Message \"Aucune modification à commiter après synchronisation.\"",
            "Type": "code",
            "Index": 233
          },
          {
            "Context": "    L37:         Log-Message \"Aucune modification locale détectée avant le pull.\"\n    L38:     }\n>>> L39: } Catch {\n    L40:     Log-Message \"Échec lors de la vérification du statut Git ou du stash. Message : $($_.Exception.Message)\" \"ERREUR\"\n    L41:     Exit 1 # Sortie avec erreur",
            "Line": "} Catch {",
            "Type": "code",
            "Index": 38
          },
          {
            "Context": "    L235:     }\n    L236: } Catch {\n>>> L237:     Log-Message \"Échec lors de la gestion des commits de correction ou du push. Message : $($_.Exception.Message)\" \"ERREUR\"\n    L238:     # Ne pas quitter ici, car la synchronisation des fichiers a été effectuée localement.\n    L239:     # Le push peut être retenté manuellement.",
            "Line": "    Log-Message \"Échec lors de la gestion des commits de correction ou du push. Message : $($_.Exception.Message)\" \"ERREUR\"",
            "Type": "code",
            "Index": 236
          },
          {
            "Context": "    L236: } Catch {\n    L237:     Log-Message \"Échec lors de la gestion des commits de correction ou du push. Message : $($_.Exception.Message)\" \"ERREUR\"\n>>> L238:     # Ne pas quitter ici, car la synchronisation des fichiers a été effectuée localement.\n    L239:     # Le push peut être retenté manuellement.\n    L240: }",
            "Line": "    # Ne pas quitter ici, car la synchronisation des fichiers a été effectuée localement.",
            "Type": "comment",
            "Index": 237
          },
          {
            "Context": "    L237:     Log-Message \"Échec lors de la gestion des commits de correction ou du push. Message : $($_.Exception.Message)\" \"ERREUR\"\n    L238:     # Ne pas quitter ici, car la synchronisation des fichiers a été effectuée localement.\n>>> L239:     # Le push peut être retenté manuellement.\n    L240: }\n    L241: ",
            "Line": "    # Le push peut être retenté manuellement.",
            "Type": "comment",
            "Index": 238
          },
          {
            "Context": "    L9: If (-not (Test-Path $ConflictLogDir)) {\n    L10:     New-Item -ItemType Directory -Path $ConflictLogDir -ErrorAction SilentlyContinue | Out-Null\n>>> L11: }\n    L12: \n    L13: function Log-Message {",
            "Line": "}",
            "Type": "structure",
            "Index": 10
          },
          {
            "Context": "    L1: # Fichier : d:/roo-extensions/sync_roo_environment.ps1\n>>> L2: \n    L3: $RepoPath = \"d:/roo-extensions\"\n    L4: $LogFile = \"d:/roo-extensions/sync_log.txt\"",
            "Line": "",
            "Type": "empty",
            "Index": 1
          },
          {
            "Context": "    L240: }\n    L241: \n>>> L242: # --- Étape 7: Nettoyage et Rapport Final ---\n    L243: Log-Message \"Étape 7: Nettoyage et Rapport Final...\"\n    L244: if ($StashApplied) {",
            "Line": "# --- Étape 7: Nettoyage et Rapport Final ---",
            "Type": "comment",
            "Index": 241
          },
          {
            "Context": "    L241: \n    L242: # --- Étape 7: Nettoyage et Rapport Final ---\n>>> L243: Log-Message \"Étape 7: Nettoyage et Rapport Final...\"\n    L244: if ($StashApplied) {\n    L245:     Log-Message \"Restauration du stash...\"",
            "Line": "Log-Message \"Étape 7: Nettoyage et Rapport Final...\"",
            "Type": "code",
            "Index": 242
          },
          {
            "Context": "    L245:     Log-Message \"Restauration du stash...\"\n    L246:     Try {\n>>> L247:         git stash pop\n    L248:         Log-Message \"Stash restauré avec succès.\"\n    L249:     } Catch {",
            "Line": "        git stash pop",
            "Type": "code",
            "Index": 246
          },
          {
            "Context": "    L248:         Log-Message \"Stash restauré avec succès.\"\n    L249:     } Catch {\n>>> L250:         Log-Message \"Échec de la restauration du stash. Des conflits peuvent exister. Message : $($_.Exception.Message). Résolution manuelle requise.\" \"ALERTE\"\n    L251:         # Documenter les conflits de stash pop si nécessaire dans un fichier de conflit dédié\n    L252:         $ConflictLogFile = Join-Path $ConflictLogDir \"stash_pop_conflicts_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"",
            "Line": "        Log-Message \"Échec de la restauration du stash. Des conflits peuvent exister. Message : $($_.Exception.Message). Résolution manuelle requise.\" \"ALERTE\"",
            "Type": "code",
            "Index": 249
          },
          {
            "Context": "    L249:     } Catch {\n    L250:         Log-Message \"Échec de la restauration du stash. Des conflits peuvent exister. Message : $($_.Exception.Message). Résolution manuelle requise.\" \"ALERTE\"\n>>> L251:         # Documenter les conflits de stash pop si nécessaire dans un fichier de conflit dédié\n    L252:         $ConflictLogFile = Join-Path $ConflictLogDir \"stash_pop_conflicts_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"\n    L253:         Add-Content -Path $ConflictLogFile -Value \"--- Conflit Git détecté lors du stash pop - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---\"",
            "Line": "        # Documenter les conflits de stash pop si nécessaire dans un fichier de conflit dédié",
            "Type": "comment",
            "Index": 250
          },
          {
            "Context": "    L250:         Log-Message \"Échec de la restauration du stash. Des conflits peuvent exister. Message : $($_.Exception.Message). Résolution manuelle requise.\" \"ALERTE\"\n    L251:         # Documenter les conflits de stash pop si nécessaire dans un fichier de conflit dédié\n>>> L252:         $ConflictLogFile = Join-Path $ConflictLogDir \"stash_pop_conflicts_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"\n    L253:         Add-Content -Path $ConflictLogFile -Value \"--- Conflit Git détecté lors du stash pop - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---\"\n    L254:         Add-Content -Path $ConflictLogFile -Value \"$($_.Exception.Message)\"",
            "Line": "        $ConflictLogFile = Join-Path $ConflictLogDir \"stash_pop_conflicts_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"",
            "Type": "code",
            "Index": 251
          },
          {
            "Context": "    L251:         # Documenter les conflits de stash pop si nécessaire dans un fichier de conflit dédié\n    L252:         $ConflictLogFile = Join-Path $ConflictLogDir \"stash_pop_conflicts_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"\n>>> L253:         Add-Content -Path $ConflictLogFile -Value \"--- Conflit Git détecté lors du stash pop - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---\"\n    L254:         Add-Content -Path $ConflictLogFile -Value \"$($_.Exception.Message)\"\n    L255:         (git status) | Out-String | Add-Content -Path $ConflictLogFile",
            "Line": "        Add-Content -Path $ConflictLogFile -Value \"--- Conflit Git détecté lors du stash pop - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---\"",
            "Type": "code",
            "Index": 252
          },
          {
            "Context": "    L252:         $ConflictLogFile = Join-Path $ConflictLogDir \"stash_pop_conflicts_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"\n    L253:         Add-Content -Path $ConflictLogFile -Value \"--- Conflit Git détecté lors du stash pop - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---\"\n>>> L254:         Add-Content -Path $ConflictLogFile -Value \"$($_.Exception.Message)\"\n    L255:         (git status) | Out-String | Add-Content -Path $ConflictLogFile\n    L256:         Add-Content -Path $ConflictLogFile -Value \"--- FIN DU CONFLIT STASH POP ---\"",
            "Line": "        Add-Content -Path $ConflictLogFile -Value \"$($_.Exception.Message)\"",
            "Type": "code",
            "Index": 253
          },
          {
            "Context": "    L60:         Add-Content -Path $ConflictLogFile -Value \"Branche : main\" # Assumer main, ajuster si nécessaire\n    L61:         Add-Content -Path $ConflictLogFile -Value \"Statut avant abort :\"\n>>> L62:         (git status) | Out-String | Add-Content -Path $ConflictLogFile\n    L63:         Add-Content -Path $ConflictLogFile -Value \"--- FIN DU CONFLIT ---\"\n    L64:         Log-Message \"Conflit de fusion annulé. Voir $($ConflictLogFile) pour les détails. Synchronisation interrompue.\" \"ERREUR\"",
            "Line": "        (git status) | Out-String | Add-Content -Path $ConflictLogFile",
            "Type": "code",
            "Index": 61
          },
          {
            "Context": "    L254:         Add-Content -Path $ConflictLogFile -Value \"$($_.Exception.Message)\"\n    L255:         (git status) | Out-String | Add-Content -Path $ConflictLogFile\n>>> L256:         Add-Content -Path $ConflictLogFile -Value \"--- FIN DU CONFLIT STASH POP ---\"\n    L257:         Log-Message \"Détails du conflit de stash pop enregistrés dans $ConflictLogFile\" \"ALERTE\"\n    L258:     }",
            "Line": "        Add-Content -Path $ConflictLogFile -Value \"--- FIN DU CONFLIT STASH POP ---\"",
            "Type": "code",
            "Index": 255
          },
          {
            "Context": "    L255:         (git status) | Out-String | Add-Content -Path $ConflictLogFile\n    L256:         Add-Content -Path $ConflictLogFile -Value \"--- FIN DU CONFLIT STASH POP ---\"\n>>> L257:         Log-Message \"Détails du conflit de stash pop enregistrés dans $ConflictLogFile\" \"ALERTE\"\n    L258:     }\n    L259: }",
            "Line": "        Log-Message \"Détails du conflit de stash pop enregistrés dans $ConflictLogFile\" \"ALERTE\"",
            "Type": "code",
            "Index": 256
          },
          {
            "Context": "    L36:     } else {\n    L37:         Log-Message \"Aucune modification locale détectée avant le pull.\"\n>>> L38:     }\n    L39: } Catch {\n    L40:     Log-Message \"Échec lors de la vérification du statut Git ou du stash. Message : $($_.Exception.Message)\" \"ERREUR\"",
            "Line": "    }",
            "Type": "structure",
            "Index": 37
          },
          {
            "Context": "    L9: If (-not (Test-Path $ConflictLogDir)) {\n    L10:     New-Item -ItemType Directory -Path $ConflictLogDir -ErrorAction SilentlyContinue | Out-Null\n>>> L11: }\n    L12: \n    L13: function Log-Message {",
            "Line": "}",
            "Type": "structure",
            "Index": 10
          },
          {
            "Context": "    L1: # Fichier : d:/roo-extensions/sync_roo_environment.ps1\n>>> L2: \n    L3: $RepoPath = \"d:/roo-extensions\"\n    L4: $LogFile = \"d:/roo-extensions/sync_log.txt\"",
            "Line": "",
            "Type": "empty",
            "Index": 1
          }
        ]
      },
      "Index": 1
    },
    {
      "Lines": 262,
      "Size": 12335,
      "File": "stash5-version.ps1",
      "Comparison": {
        "CommonLines": 101,
        "UniqueInCurrent": 144,
        "UniqueInStash": 161,
        "UniqueAnalysis": [
          {
            "Context": "    L4: $LogFile = \"d:/roo-extensions/sync_log.txt\"\n    L5: $ConflictLogDir = \"d:/roo-extensions/sync_conflicts\"\n>>> L6: $ErrorActionPreference = \"Stop\" # Stop on errors for better control\n    L7: \n    L8: # Créer le répertoire de logs de conflits si inexistant",
            "Line": "$ErrorActionPreference = \"Stop\" # Stop on errors for better control",
            "Type": "code",
            "Index": 5
          },
          {
            "Context": "    L8: # Créer le répertoire de logs de conflits si inexistant\n    L9: If (-not (Test-Path $ConflictLogDir)) {\n>>> L10:     New-Item -ItemType Directory -Path $ConflictLogDir -ErrorAction SilentlyContinue | Out-Null\n    L11: }\n    L12: ",
            "Line": "    New-Item -ItemType Directory -Path $ConflictLogDir -ErrorAction SilentlyContinue | Out-Null",
            "Type": "code",
            "Index": 9
          },
          {
            "Context": "    L16:         [string]$Type = \"INFO\" # INFO, ALERTE, ERREUR\n    L17:     )\n>>> L18:     $LogEntry = \"$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - $($Type): $($Message)\"\n    L19:     Add-Content -Path $LogFile -Value $LogEntry\n    L20:     Write-Host $LogEntry # Also output to console for scheduler visibility",
            "Line": "    $LogEntry = \"$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - $($Type): $($Message)\"",
            "Type": "code",
            "Index": 17
          },
          {
            "Context": "    L17:     )\n    L18:     $LogEntry = \"$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - $($Type): $($Message)\"\n>>> L19:     Add-Content -Path $LogFile -Value $LogEntry\n    L20:     Write-Host $LogEntry # Also output to console for scheduler visibility\n    L21: }",
            "Line": "    Add-Content -Path $LogFile -Value $LogEntry",
            "Type": "code",
            "Index": 18
          },
          {
            "Context": "    L18:     $LogEntry = \"$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - $($Type): $($Message)\"\n    L19:     Add-Content -Path $LogFile -Value $LogEntry\n>>> L20:     Write-Host $LogEntry # Also output to console for scheduler visibility\n    L21: }\n    L22: ",
            "Line": "    Write-Host $LogEntry # Also output to console for scheduler visibility",
            "Type": "code",
            "Index": 19
          },
          {
            "Context": "    L23: Set-Location $RepoPath\n    L24: \n>>> L25: # --- Étape 1: Préparation et Vérification de l'Environnement Git ---\n    L26: Log-Message \"Étape 1: Préparation et Vérification de l'Environnement Git...\"\n    L27: $StashApplied = $false",
            "Line": "# --- Étape 1: Préparation et Vérification de l'Environnement Git ---",
            "Type": "comment",
            "Index": 24
          },
          {
            "Context": "    L24: \n    L25: # --- Étape 1: Préparation et Vérification de l'Environnement Git ---\n>>> L26: Log-Message \"Étape 1: Préparation et Vérification de l'Environnement Git...\"\n    L27: $StashApplied = $false\n    L28: Try {",
            "Line": "Log-Message \"Étape 1: Préparation et Vérification de l'Environnement Git...\"",
            "Type": "code",
            "Index": 25
          },
          {
            "Context": "    L25: # --- Étape 1: Préparation et Vérification de l'Environnement Git ---\n    L26: Log-Message \"Étape 1: Préparation et Vérification de l'Environnement Git...\"\n>>> L27: $StashApplied = $false\n    L28: Try {\n    L29:     Log-Message \"Vérification du statut Git avant pull...\"",
            "Line": "$StashApplied = $false",
            "Type": "code",
            "Index": 26
          },
          {
            "Context": "    L27: $StashApplied = $false\n    L28: Try {\n>>> L29:     Log-Message \"Vérification du statut Git avant pull...\"\n    L30:     $GitStatus = git status --porcelain\n    L31:     if ($GitStatus) {",
            "Line": "    Log-Message \"Vérification du statut Git avant pull...\"",
            "Type": "code",
            "Index": 28
          },
          {
            "Context": "    L28: Try {\n    L29:     Log-Message \"Vérification du statut Git avant pull...\"\n>>> L30:     $GitStatus = git status --porcelain\n    L31:     if ($GitStatus) {\n    L32:         Log-Message \"Modifications locales détectées. Tentative de stash...\" \"ALERTE\"",
            "Line": "    $GitStatus = git status --porcelain",
            "Type": "code",
            "Index": 29
          },
          {
            "Context": "    L29:     Log-Message \"Vérification du statut Git avant pull...\"\n    L30:     $GitStatus = git status --porcelain\n>>> L31:     if ($GitStatus) {\n    L32:         Log-Message \"Modifications locales détectées. Tentative de stash...\" \"ALERTE\"\n    L33:         git stash push -m \"Automated stash before sync pull\"",
            "Line": "    if ($GitStatus) {",
            "Type": "control",
            "Index": 30
          },
          {
            "Context": "    L30:     $GitStatus = git status --porcelain\n    L31:     if ($GitStatus) {\n>>> L32:         Log-Message \"Modifications locales détectées. Tentative de stash...\" \"ALERTE\"\n    L33:         git stash push -m \"Automated stash before sync pull\"\n    L34:         Log-Message \"Stash réussi.\"",
            "Line": "        Log-Message \"Modifications locales détectées. Tentative de stash...\" \"ALERTE\"",
            "Type": "code",
            "Index": 31
          },
          {
            "Context": "    L31:     if ($GitStatus) {\n    L32:         Log-Message \"Modifications locales détectées. Tentative de stash...\" \"ALERTE\"\n>>> L33:         git stash push -m \"Automated stash before sync pull\"\n    L34:         Log-Message \"Stash réussi.\"\n    L35:         $StashApplied = $true",
            "Line": "        git stash push -m \"Automated stash before sync pull\"",
            "Type": "code",
            "Index": 32
          },
          {
            "Context": "    L35:         $StashApplied = $true\n    L36:     } else {\n>>> L37:         Log-Message \"Aucune modification locale détectée avant le pull.\"\n    L38:     }\n    L39: } Catch {",
            "Line": "        Log-Message \"Aucune modification locale détectée avant le pull.\"",
            "Type": "code",
            "Index": 36
          },
          {
            "Context": "    L38:     }\n    L39: } Catch {\n>>> L40:     Log-Message \"Échec lors de la vérification du statut Git ou du stash. Message : $($_.Exception.Message)\" \"ERREUR\"\n    L41:     Exit 1 # Sortie avec erreur\n    L42: }",
            "Line": "    Log-Message \"Échec lors de la vérification du statut Git ou du stash. Message : $($_.Exception.Message)\" \"ERREUR\"",
            "Type": "code",
            "Index": 39
          },
          {
            "Context": "    L42: }\n    L43: \n>>> L44: # --- Étape 2: Mise à Jour du Dépôt Local (git pull) ---\n    L45: Log-Message \"Étape 2: Mise à Jour du Dépôt Local (git pull)...\"\n    L46: Try {",
            "Line": "# --- Étape 2: Mise à Jour du Dépôt Local (git pull) ---",
            "Type": "comment",
            "Index": 43
          },
          {
            "Context": "    L43: \n    L44: # --- Étape 2: Mise à Jour du Dépôt Local (git pull) ---\n>>> L45: Log-Message \"Étape 2: Mise à Jour du Dépôt Local (git pull)...\"\n    L46: Try {\n    L47:     Log-Message \"Exécution de git pull origin main...\"",
            "Line": "Log-Message \"Étape 2: Mise à Jour du Dépôt Local (git pull)...\"",
            "Type": "code",
            "Index": 44
          },
          {
            "Context": "    L26: Log-Message \"Étape 1: Préparation et Vérification de l'Environnement Git...\"\n    L27: $StashApplied = $false\n>>> L28: Try {\n    L29:     Log-Message \"Vérification du statut Git avant pull...\"\n    L30:     $GitStatus = git status --porcelain",
            "Line": "Try {",
            "Type": "control",
            "Index": 27
          },
          {
            "Context": "    L45: Log-Message \"Étape 2: Mise à Jour du Dépôt Local (git pull)...\"\n    L46: Try {\n>>> L47:     Log-Message \"Exécution de git pull origin main...\"\n    L48:     # Capture HEAD avant le pull pour la comparaison ultérieure\n    L49:     $HeadBeforePull = git rev-parse HEAD",
            "Line": "    Log-Message \"Exécution de git pull origin main...\"",
            "Type": "code",
            "Index": 46
          },
          {
            "Context": "    L46: Try {\n    L47:     Log-Message \"Exécution de git pull origin main...\"\n>>> L48:     # Capture HEAD avant le pull pour la comparaison ultérieure\n    L49:     $HeadBeforePull = git rev-parse HEAD\n    L50:     git pull origin main",
            "Line": "    # Capture HEAD avant le pull pour la comparaison ultérieure",
            "Type": "comment",
            "Index": 47
          },
          {
            "Context": "    L47:     Log-Message \"Exécution de git pull origin main...\"\n    L48:     # Capture HEAD avant le pull pour la comparaison ultérieure\n>>> L49:     $HeadBeforePull = git rev-parse HEAD\n    L50:     git pull origin main\n    L51:     Log-Message \"Git pull réussi.\"",
            "Line": "    $HeadBeforePull = git rev-parse HEAD",
            "Type": "code",
            "Index": 48
          },
          {
            "Context": "    L48:     # Capture HEAD avant le pull pour la comparaison ultérieure\n    L49:     $HeadBeforePull = git rev-parse HEAD\n>>> L50:     git pull origin main\n    L51:     Log-Message \"Git pull réussi.\"\n    L52: } Catch {",
            "Line": "    git pull origin main",
            "Type": "code",
            "Index": 49
          },
          {
            "Context": "    L37:         Log-Message \"Aucune modification locale détectée avant le pull.\"\n    L38:     }\n>>> L39: } Catch {\n    L40:     Log-Message \"Échec lors de la vérification du statut Git ou du stash. Message : $($_.Exception.Message)\" \"ERREUR\"\n    L41:     Exit 1 # Sortie avec erreur",
            "Line": "} Catch {",
            "Type": "code",
            "Index": 38
          },
          {
            "Context": "    L54:     if ($ErrorMessage -like \"*merge conflict*\") {\n    L55:         Log-Message \"Conflit de fusion détecté. Annulation de la fusion...\" \"ALERTE\"\n>>> L56:         Try { git merge --abort } Catch { Log-Message \"Échec de git merge --abort. Message: $($_.Exception.Message)\" \"ALERTE\"}\n    L57:         $ConflictLogFile = Join-Path $ConflictLogDir \"sync_conflicts_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"\n    L58:         Add-Content -Path $ConflictLogFile -Value \"--- Conflit Git détecté lors du pull - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---\"",
            "Line": "        Try { git merge --abort } Catch { Log-Message \"Échec de git merge --abort. Message: $($_.Exception.Message)\" \"ALERTE\"}",
            "Type": "control",
            "Index": 55
          },
          {
            "Context": "    L58:         Add-Content -Path $ConflictLogFile -Value \"--- Conflit Git détecté lors du pull - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---\"\n    L59:         Add-Content -Path $ConflictLogFile -Value \"Dépôt : $RepoPath\"\n>>> L60:         Add-Content -Path $ConflictLogFile -Value \"Branche : main\" # Assumer main, ajuster si nécessaire\n    L61:         Add-Content -Path $ConflictLogFile -Value \"Statut avant abort :\"\n    L62:         (git status) | Out-String | Add-Content -Path $ConflictLogFile",
            "Line": "        Add-Content -Path $ConflictLogFile -Value \"Branche : main\" # Assumer main, ajuster si nécessaire",
            "Type": "code",
            "Index": 59
          },
          {
            "Context": "    L39: } Catch {\n    L40:     Log-Message \"Échec lors de la vérification du statut Git ou du stash. Message : $($_.Exception.Message)\" \"ERREUR\"\n>>> L41:     Exit 1 # Sortie avec erreur\n    L42: }\n    L43: ",
            "Line": "    Exit 1 # Sortie avec erreur",
            "Type": "code",
            "Index": 40
          },
          {
            "Context": "    L69: }\n    L70: \n>>> L71: # --- Étape 3: Analyse des Nouveautés et Identification des Fichiers à Synchroniser ---\n    L72: Log-Message \"Étape 3: Analyse des Nouveautés et Identification des Fichiers à Synchroniser...\"\n    L73: ",
            "Line": "# --- Étape 3: Analyse des Nouveautés et Identification des Fichiers à Synchroniser ---",
            "Type": "comment",
            "Index": 70
          },
          {
            "Context": "    L70: \n    L71: # --- Étape 3: Analyse des Nouveautés et Identification des Fichiers à Synchroniser ---\n>>> L72: Log-Message \"Étape 3: Analyse des Nouveautés et Identification des Fichiers à Synchroniser...\"\n    L73: \n    L74: # Liste des fichiers et patterns à synchroniser (relatifs à $RepoPath)",
            "Line": "Log-Message \"Étape 3: Analyse des Nouveautés et Identification des Fichiers à Synchroniser...\"",
            "Type": "code",
            "Index": 71
          },
          {
            "Context": "    L72: Log-Message \"Étape 3: Analyse des Nouveautés et Identification des Fichiers à Synchroniser...\"\n    L73: \n>>> L74: # Liste des fichiers et patterns à synchroniser (relatifs à $RepoPath)\n    L75: $TargetFilesAndPatterns = @(\n    L76:     \"roo-config/settings/settings.json\",",
            "Line": "# Liste des fichiers et patterns à synchroniser (relatifs à $RepoPath)",
            "Type": "comment",
            "Index": 73
          },
          {
            "Context": "    L73: \n    L74: # Liste des fichiers et patterns à synchroniser (relatifs à $RepoPath)\n>>> L75: $TargetFilesAndPatterns = @(\n    L76:     \"roo-config/settings/settings.json\",\n    L77:     \"roo-config/settings/servers.json\",",
            "Line": "$TargetFilesAndPatterns = @(",
            "Type": "code",
            "Index": 74
          },
          {
            "Context": "    L80:     \"roo-config/qwen3-profiles/qwen3-parameters.json\",\n    L81:     \"roo-modes/configs/modes.json\",\n>>> L82:     \"roo-modes/configs/new-roomodes.json\",\n    L83:     \"roo-modes/configs/standard-modes.json\",\n    L84:     \"roo-modes/configs/vscode-custom-modes.json\",",
            "Line": "    \"roo-modes/configs/new-roomodes.json\",",
            "Type": "code",
            "Index": 81
          },
          {
            "Context": "    L82:     \"roo-modes/configs/new-roomodes.json\",\n    L83:     \"roo-modes/configs/standard-modes.json\",\n>>> L84:     \"roo-modes/configs/vscode-custom-modes.json\",\n    L85:     \"sync_log.txt\"\n    L86: )",
            "Line": "    \"roo-modes/configs/vscode-custom-modes.json\",",
            "Type": "code",
            "Index": 83
          },
          {
            "Context": "    L83:     \"roo-modes/configs/standard-modes.json\",\n    L84:     \"roo-modes/configs/vscode-custom-modes.json\",\n>>> L85:     \"sync_log.txt\"\n    L86: )\n    L87: ",
            "Line": "    \"sync_log.txt\"",
            "Type": "code",
            "Index": 84
          },
          {
            "Context": "    L86: )\n    L87: \n>>> L88: # Ajouter les .ps1 sous roo-config (récursif)\n    L89: Get-ChildItem -Path (Join-Path $RepoPath \"roo-config\") -Filter \"*.ps1\" -Recurse | ForEach-Object {\n    L90:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)",
            "Line": "# Ajouter les .ps1 sous roo-config (récursif)",
            "Type": "comment",
            "Index": 87
          },
          {
            "Context": "    L87: \n    L88: # Ajouter les .ps1 sous roo-config (récursif)\n>>> L89: Get-ChildItem -Path (Join-Path $RepoPath \"roo-config\") -Filter \"*.ps1\" -Recurse | ForEach-Object {\n    L90:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)\n    L91: }",
            "Line": "Get-ChildItem -Path (Join-Path $RepoPath \"roo-config\") -Filter \"*.ps1\" -Recurse | ForEach-Object {",
            "Type": "code",
            "Index": 88
          },
          {
            "Context": "    L88: # Ajouter les .ps1 sous roo-config (récursif)\n    L89: Get-ChildItem -Path (Join-Path $RepoPath \"roo-config\") -Filter \"*.ps1\" -Recurse | ForEach-Object {\n>>> L90:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)\n    L91: }\n    L92: ",
            "Line": "    $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)",
            "Type": "code",
            "Index": 89
          },
          {
            "Context": "    L91: }\n    L92: \n>>> L93: # Ajouter les .json sous roo-modes/n5/configs/ (récursif)\n    L94: Get-ChildItem -Path (Join-Path $RepoPath \"roo-modes/n5/configs\") -Filter \"*.json\" -Recurse | ForEach-Object {\n    L95:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)",
            "Line": "# Ajouter les .json sous roo-modes/n5/configs/ (récursif)",
            "Type": "comment",
            "Index": 92
          },
          {
            "Context": "    L92: \n    L93: # Ajouter les .json sous roo-modes/n5/configs/ (récursif)\n>>> L94: Get-ChildItem -Path (Join-Path $RepoPath \"roo-modes/n5/configs\") -Filter \"*.json\" -Recurse | ForEach-Object {\n    L95:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)\n    L96: }",
            "Line": "Get-ChildItem -Path (Join-Path $RepoPath \"roo-modes/n5/configs\") -Filter \"*.json\" -Recurse | ForEach-Object {",
            "Type": "code",
            "Index": 93
          },
          {
            "Context": "    L88: # Ajouter les .ps1 sous roo-config (récursif)\n    L89: Get-ChildItem -Path (Join-Path $RepoPath \"roo-config\") -Filter \"*.ps1\" -Recurse | ForEach-Object {\n>>> L90:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)\n    L91: }\n    L92: ",
            "Line": "    $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)",
            "Type": "code",
            "Index": 89
          },
          {
            "Context": "    L96: }\n    L97: \n>>> L98: # Ajouter les .md sous roo-config/ (récursif)\n    L99: Get-ChildItem -Path (Join-Path $RepoPath \"roo-config\") -Filter \"*.md\" -Recurse | ForEach-Object {\n    L100:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)",
            "Line": "# Ajouter les .md sous roo-config/ (récursif)",
            "Type": "comment",
            "Index": 97
          },
          {
            "Context": "    L97: \n    L98: # Ajouter les .md sous roo-config/ (récursif)\n>>> L99: Get-ChildItem -Path (Join-Path $RepoPath \"roo-config\") -Filter \"*.md\" -Recurse | ForEach-Object {\n    L100:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)\n    L101: }",
            "Line": "Get-ChildItem -Path (Join-Path $RepoPath \"roo-config\") -Filter \"*.md\" -Recurse | ForEach-Object {",
            "Type": "code",
            "Index": 98
          },
          {
            "Context": "    L88: # Ajouter les .ps1 sous roo-config (récursif)\n    L89: Get-ChildItem -Path (Join-Path $RepoPath \"roo-config\") -Filter \"*.ps1\" -Recurse | ForEach-Object {\n>>> L90:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)\n    L91: }\n    L92: ",
            "Line": "    $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)",
            "Type": "code",
            "Index": 89
          },
          {
            "Context": "    L101: }\n    L102: \n>>> L103: # Ajouter les .md sous roo-modes/ (récursif)\n    L104: Get-ChildItem -Path (Join-Path $RepoPath \"roo-modes\") -Filter \"*.md\" -Recurse | ForEach-Object {\n    L105:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)",
            "Line": "# Ajouter les .md sous roo-modes/ (récursif)",
            "Type": "comment",
            "Index": 102
          },
          {
            "Context": "    L102: \n    L103: # Ajouter les .md sous roo-modes/ (récursif)\n>>> L104: Get-ChildItem -Path (Join-Path $RepoPath \"roo-modes\") -Filter \"*.md\" -Recurse | ForEach-Object {\n    L105:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)\n    L106: }",
            "Line": "Get-ChildItem -Path (Join-Path $RepoPath \"roo-modes\") -Filter \"*.md\" -Recurse | ForEach-Object {",
            "Type": "code",
            "Index": 103
          },
          {
            "Context": "    L88: # Ajouter les .ps1 sous roo-config (récursif)\n    L89: Get-ChildItem -Path (Join-Path $RepoPath \"roo-config\") -Filter \"*.ps1\" -Recurse | ForEach-Object {\n>>> L90:     $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)\n    L91: }\n    L92: ",
            "Line": "    $TargetFilesAndPatterns += $_.FullName.Substring($RepoPath.Length + 1)",
            "Type": "code",
            "Index": 89
          },
          {
            "Context": "    L106: }\n    L107: \n>>> L108: # Rendre la liste unique\n    L109: $UniqueTargetFiles = $TargetFilesAndPatterns | Sort-Object -Unique\n    L110: ",
            "Line": "# Rendre la liste unique",
            "Type": "comment",
            "Index": 107
          },
          {
            "Context": "    L107: \n    L108: # Rendre la liste unique\n>>> L109: $UniqueTargetFiles = $TargetFilesAndPatterns | Sort-Object -Unique\n    L110: \n    L111: Log-Message \"Liste des fichiers cibles potentiels construite.\"",
            "Line": "$UniqueTargetFiles = $TargetFilesAndPatterns | Sort-Object -Unique",
            "Type": "code",
            "Index": 108
          },
          {
            "Context": "    L109: $UniqueTargetFiles = $TargetFilesAndPatterns | Sort-Object -Unique\n    L110: \n>>> L111: Log-Message \"Liste des fichiers cibles potentiels construite.\"\n    L112: \n    L113: $FilesModifiedByPull = @()",
            "Line": "Log-Message \"Liste des fichiers cibles potentiels construite.\"",
            "Type": "code",
            "Index": 110
          },
          {
            "Context": "    L111: Log-Message \"Liste des fichiers cibles potentiels construite.\"\n    L112: \n>>> L113: $FilesModifiedByPull = @()\n    L114: Try {\n    L115:     Log-Message \"Détection des fichiers modifiés par le pull (HEAD vs HEAD@{1})...\"",
            "Line": "$FilesModifiedByPull = @()",
            "Type": "code",
            "Index": 112
          },
          {
            "Context": "    L26: Log-Message \"Étape 1: Préparation et Vérification de l'Environnement Git...\"\n    L27: $StashApplied = $false\n>>> L28: Try {\n    L29:     Log-Message \"Vérification du statut Git avant pull...\"\n    L30:     $GitStatus = git status --porcelain",
            "Line": "Try {",
            "Type": "control",
            "Index": 27
          },
          {
            "Context": "    L113: $FilesModifiedByPull = @()\n    L114: Try {\n>>> L115:     Log-Message \"Détection des fichiers modifiés par le pull (HEAD vs HEAD@{1})...\"\n    L116:     if ($HeadBeforePull) {\n    L117:         $FilesModifiedByPull = git diff --name-only $HeadBeforePull HEAD | ForEach-Object { $_ -replace '/', '\\' } # Normaliser les slashes pour Windows",
            "Line": "    Log-Message \"Détection des fichiers modifiés par le pull (HEAD vs HEAD@{1})...\"",
            "Type": "code",
            "Index": 114
          },
          {
            "Context": "    L114: Try {\n    L115:     Log-Message \"Détection des fichiers modifiés par le pull (HEAD vs HEAD@{1})...\"\n>>> L116:     if ($HeadBeforePull) {\n    L117:         $FilesModifiedByPull = git diff --name-only $HeadBeforePull HEAD | ForEach-Object { $_ -replace '/', '\\' } # Normaliser les slashes pour Windows\n    L118:     } else {",
            "Line": "    if ($HeadBeforePull) {",
            "Type": "control",
            "Index": 115
          },
          {
            "Context": "    L115:     Log-Message \"Détection des fichiers modifiés par le pull (HEAD vs HEAD@{1})...\"\n    L116:     if ($HeadBeforePull) {\n>>> L117:         $FilesModifiedByPull = git diff --name-only $HeadBeforePull HEAD | ForEach-Object { $_ -replace '/', '\\' } # Normaliser les slashes pour Windows\n    L118:     } else {\n    L119:         Log-Message \"Impossible de déterminer HEAD avant le pull, synchronisation de tous les fichiers cibles.\" \"ALERTE\"",
            "Line": "        $FilesModifiedByPull = git diff --name-only $HeadBeforePull HEAD | ForEach-Object { $_ -replace '/', '\\' } # Normaliser les slashes pour Windows",
            "Type": "code",
            "Index": 116
          },
          {
            "Context": "    L117:         $FilesModifiedByPull = git diff --name-only $HeadBeforePull HEAD | ForEach-Object { $_ -replace '/', '\\' } # Normaliser les slashes pour Windows\n    L118:     } else {\n>>> L119:         Log-Message \"Impossible de déterminer HEAD avant le pull, synchronisation de tous les fichiers cibles.\" \"ALERTE\"\n    L120:         # En cas d'échec de la détection (ex: premier pull), on pourrait choisir de synchroniser tous les $UniqueTargetFiles\n    L121:         # Pour l'instant, on continue avec une liste vide, ce qui signifie que seuls les fichiers explicitement listés et existants seront copiés.",
            "Line": "        Log-Message \"Impossible de déterminer HEAD avant le pull, synchronisation de tous les fichiers cibles.\" \"ALERTE\"",
            "Type": "code",
            "Index": 118
          },
          {
            "Context": "    L118:     } else {\n    L119:         Log-Message \"Impossible de déterminer HEAD avant le pull, synchronisation de tous les fichiers cibles.\" \"ALERTE\"\n>>> L120:         # En cas d'échec de la détection (ex: premier pull), on pourrait choisir de synchroniser tous les $UniqueTargetFiles\n    L121:         # Pour l'instant, on continue avec une liste vide, ce qui signifie que seuls les fichiers explicitement listés et existants seront copiés.\n    L122:         # Ou, pour être plus sûr, on peut forcer la synchronisation de tous les fichiers cibles.",
            "Line": "        # En cas d'échec de la détection (ex: premier pull), on pourrait choisir de synchroniser tous les $UniqueTargetFiles",
            "Type": "comment",
            "Index": 119
          },
          {
            "Context": "    L119:         Log-Message \"Impossible de déterminer HEAD avant le pull, synchronisation de tous les fichiers cibles.\" \"ALERTE\"\n    L120:         # En cas d'échec de la détection (ex: premier pull), on pourrait choisir de synchroniser tous les $UniqueTargetFiles\n>>> L121:         # Pour l'instant, on continue avec une liste vide, ce qui signifie que seuls les fichiers explicitement listés et existants seront copiés.\n    L122:         # Ou, pour être plus sûr, on peut forcer la synchronisation de tous les fichiers cibles.\n    L123:         # $FilesModifiedByPull = $UniqueTargetFiles # Décommentez pour synchroniser tous les fichiers cibles si diff échoue",
            "Line": "        # Pour l'instant, on continue avec une liste vide, ce qui signifie que seuls les fichiers explicitement listés et existants seront copiés.",
            "Type": "comment",
            "Index": 120
          },
          {
            "Context": "    L120:         # En cas d'échec de la détection (ex: premier pull), on pourrait choisir de synchroniser tous les $UniqueTargetFiles\n    L121:         # Pour l'instant, on continue avec une liste vide, ce qui signifie que seuls les fichiers explicitement listés et existants seront copiés.\n>>> L122:         # Ou, pour être plus sûr, on peut forcer la synchronisation de tous les fichiers cibles.\n    L123:         # $FilesModifiedByPull = $UniqueTargetFiles # Décommentez pour synchroniser tous les fichiers cibles si diff échoue\n    L124:     }",
            "Line": "        # Ou, pour être plus sûr, on peut forcer la synchronisation de tous les fichiers cibles.",
            "Type": "comment",
            "Index": 121
          },
          {
            "Context": "    L121:         # Pour l'instant, on continue avec une liste vide, ce qui signifie que seuls les fichiers explicitement listés et existants seront copiés.\n    L122:         # Ou, pour être plus sûr, on peut forcer la synchronisation de tous les fichiers cibles.\n>>> L123:         # $FilesModifiedByPull = $UniqueTargetFiles # Décommentez pour synchroniser tous les fichiers cibles si diff échoue\n    L124:     }\n    L125:     Log-Message \"Fichiers modifiés par le pull : $($FilesModifiedByPull -join ', ')\"",
            "Line": "        # $FilesModifiedByPull = $UniqueTargetFiles # Décommentez pour synchroniser tous les fichiers cibles si diff échoue",
            "Type": "comment",
            "Index": 122
          },
          {
            "Context": "    L123:         # $FilesModifiedByPull = $UniqueTargetFiles # Décommentez pour synchroniser tous les fichiers cibles si diff échoue\n    L124:     }\n>>> L125:     Log-Message \"Fichiers modifiés par le pull : $($FilesModifiedByPull -join ', ')\"\n    L126: } Catch {\n    L127:     Log-Message \"Erreur lors de la détection des fichiers modifiés par git diff. Message : $($_.Exception.Message)\" \"ALERTE\"",
            "Line": "    Log-Message \"Fichiers modifiés par le pull : $($FilesModifiedByPull -join ', ')\"",
            "Type": "code",
            "Index": 124
          },
          {
            "Context": "    L37:         Log-Message \"Aucune modification locale détectée avant le pull.\"\n    L38:     }\n>>> L39: } Catch {\n    L40:     Log-Message \"Échec lors de la vérification du statut Git ou du stash. Message : $($_.Exception.Message)\" \"ERREUR\"\n    L41:     Exit 1 # Sortie avec erreur",
            "Line": "} Catch {",
            "Type": "code",
            "Index": 38
          },
          {
            "Context": "    L125:     Log-Message \"Fichiers modifiés par le pull : $($FilesModifiedByPull -join ', ')\"\n    L126: } Catch {\n>>> L127:     Log-Message \"Erreur lors de la détection des fichiers modifiés par git diff. Message : $($_.Exception.Message)\" \"ALERTE\"\n    L128:     # Continuer, mais la synchronisation pourrait ne pas être précise.\n    L129: }",
            "Line": "    Log-Message \"Erreur lors de la détection des fichiers modifiés par git diff. Message : $($_.Exception.Message)\" \"ALERTE\"",
            "Type": "code",
            "Index": 126
          },
          {
            "Context": "    L126: } Catch {\n    L127:     Log-Message \"Erreur lors de la détection des fichiers modifiés par git diff. Message : $($_.Exception.Message)\" \"ALERTE\"\n>>> L128:     # Continuer, mais la synchronisation pourrait ne pas être précise.\n    L129: }\n    L130: ",
            "Line": "    # Continuer, mais la synchronisation pourrait ne pas être précise.",
            "Type": "comment",
            "Index": 127
          },
          {
            "Context": "    L129: }\n    L130: \n>>> L131: $FilesToActuallySync = @()\n    L132: if ($FilesModifiedByPull.Count -gt 0) {\n    L133:     foreach ($modifiedFile in $FilesModifiedByPull) {",
            "Line": "$FilesToActuallySync = @()",
            "Type": "code",
            "Index": 130
          },
          {
            "Context": "    L130: \n    L131: $FilesToActuallySync = @()\n>>> L132: if ($FilesModifiedByPull.Count -gt 0) {\n    L133:     foreach ($modifiedFile in $FilesModifiedByPull) {\n    L134:         if ($UniqueTargetFiles -contains $modifiedFile) {",
            "Line": "if ($FilesModifiedByPull.Count -gt 0) {",
            "Type": "control",
            "Index": 131
          },
          {
            "Context": "    L131: $FilesToActuallySync = @()\n    L132: if ($FilesModifiedByPull.Count -gt 0) {\n>>> L133:     foreach ($modifiedFile in $FilesModifiedByPull) {\n    L134:         if ($UniqueTargetFiles -contains $modifiedFile) {\n    L135:             $FilesToActuallySync += $modifiedFile",
            "Line": "    foreach ($modifiedFile in $FilesModifiedByPull) {",
            "Type": "control",
            "Index": 132
          },
          {
            "Context": "    L132: if ($FilesModifiedByPull.Count -gt 0) {\n    L133:     foreach ($modifiedFile in $FilesModifiedByPull) {\n>>> L134:         if ($UniqueTargetFiles -contains $modifiedFile) {\n    L135:             $FilesToActuallySync += $modifiedFile\n    L136:         }",
            "Line": "        if ($UniqueTargetFiles -contains $modifiedFile) {",
            "Type": "control",
            "Index": 133
          },
          {
            "Context": "    L133:     foreach ($modifiedFile in $FilesModifiedByPull) {\n    L134:         if ($UniqueTargetFiles -contains $modifiedFile) {\n>>> L135:             $FilesToActuallySync += $modifiedFile\n    L136:         }\n    L137:     }",
            "Line": "            $FilesToActuallySync += $modifiedFile",
            "Type": "code",
            "Index": 134
          },
          {
            "Context": "    L137:     }\n    L138: } else {\n>>> L139:     # Si git diff n'a rien retourné ou a échoué, on se rabat sur une copie de tous les fichiers cibles existants\n    L140:     # Ceci est une mesure de sécurité, mais peut être affiné.\n    L141:     Log-Message \"Aucun fichier spécifiquement modifié par le pull détecté ou diff échoué. Vérification de tous les fichiers cibles pour synchronisation.\" \"ALERTE\"",
            "Line": "    # Si git diff n'a rien retourné ou a échoué, on se rabat sur une copie de tous les fichiers cibles existants",
            "Type": "comment",
            "Index": 138
          },
          {
            "Context": "    L138: } else {\n    L139:     # Si git diff n'a rien retourné ou a échoué, on se rabat sur une copie de tous les fichiers cibles existants\n>>> L140:     # Ceci est une mesure de sécurité, mais peut être affiné.\n    L141:     Log-Message \"Aucun fichier spécifiquement modifié par le pull détecté ou diff échoué. Vérification de tous les fichiers cibles pour synchronisation.\" \"ALERTE\"\n    L142:     foreach ($targetFile in $UniqueTargetFiles) {",
            "Line": "    # Ceci est une mesure de sécurité, mais peut être affiné.",
            "Type": "comment",
            "Index": 139
          },
          {
            "Context": "    L139:     # Si git diff n'a rien retourné ou a échoué, on se rabat sur une copie de tous les fichiers cibles existants\n    L140:     # Ceci est une mesure de sécurité, mais peut être affiné.\n>>> L141:     Log-Message \"Aucun fichier spécifiquement modifié par le pull détecté ou diff échoué. Vérification de tous les fichiers cibles pour synchronisation.\" \"ALERTE\"\n    L142:     foreach ($targetFile in $UniqueTargetFiles) {\n    L143:         if (Test-Path (Join-Path $RepoPath $targetFile)) {",
            "Line": "    Log-Message \"Aucun fichier spécifiquement modifié par le pull détecté ou diff échoué. Vérification de tous les fichiers cibles pour synchronisation.\" \"ALERTE\"",
            "Type": "code",
            "Index": 140
          },
          {
            "Context": "    L140:     # Ceci est une mesure de sécurité, mais peut être affiné.\n    L141:     Log-Message \"Aucun fichier spécifiquement modifié par le pull détecté ou diff échoué. Vérification de tous les fichiers cibles pour synchronisation.\" \"ALERTE\"\n>>> L142:     foreach ($targetFile in $UniqueTargetFiles) {\n    L143:         if (Test-Path (Join-Path $RepoPath $targetFile)) {\n    L144:             $FilesToActuallySync += $targetFile",
            "Line": "    foreach ($targetFile in $UniqueTargetFiles) {",
            "Type": "control",
            "Index": 141
          },
          {
            "Context": "    L141:     Log-Message \"Aucun fichier spécifiquement modifié par le pull détecté ou diff échoué. Vérification de tous les fichiers cibles pour synchronisation.\" \"ALERTE\"\n    L142:     foreach ($targetFile in $UniqueTargetFiles) {\n>>> L143:         if (Test-Path (Join-Path $RepoPath $targetFile)) {\n    L144:             $FilesToActuallySync += $targetFile\n    L145:         }",
            "Line": "        if (Test-Path (Join-Path $RepoPath $targetFile)) {",
            "Type": "control",
            "Index": 142
          },
          {
            "Context": "    L142:     foreach ($targetFile in $UniqueTargetFiles) {\n    L143:         if (Test-Path (Join-Path $RepoPath $targetFile)) {\n>>> L144:             $FilesToActuallySync += $targetFile\n    L145:         }\n    L146:     }",
            "Line": "            $FilesToActuallySync += $targetFile",
            "Type": "code",
            "Index": 143
          },
          {
            "Context": "    L146:     }\n    L147: }\n>>> L148: $FilesToActuallySync = $FilesToActuallySync | Sort-Object -Unique\n    L149: Log-Message \"Fichiers identifiés pour synchronisation réelle : $($FilesToActuallySync -join ', ')\"\n    L150: ",
            "Line": "$FilesToActuallySync = $FilesToActuallySync | Sort-Object -Unique",
            "Type": "code",
            "Index": 147
          },
          {
            "Context": "    L147: }\n    L148: $FilesToActuallySync = $FilesToActuallySync | Sort-Object -Unique\n>>> L149: Log-Message \"Fichiers identifiés pour synchronisation réelle : $($FilesToActuallySync -join ', ')\"\n    L150: \n    L151: ",
            "Line": "Log-Message \"Fichiers identifiés pour synchronisation réelle : $($FilesToActuallySync -join ', ')\"",
            "Type": "code",
            "Index": 148
          },
          {
            "Context": "    L150: \n    L151: \n>>> L152: # --- Étape 4: Exécution des Opérations de Synchronisation ---\n    L153: Log-Message \"Étape 4: Exécution des Opérations de Synchronisation...\"\n    L154: $SyncedJsonFiles = @()",
            "Line": "# --- Étape 4: Exécution des Opérations de Synchronisation ---",
            "Type": "comment",
            "Index": 151
          },
          {
            "Context": "    L151: \n    L152: # --- Étape 4: Exécution des Opérations de Synchronisation ---\n>>> L153: Log-Message \"Étape 4: Exécution des Opérations de Synchronisation...\"\n    L154: $SyncedJsonFiles = @()\n    L155: ",
            "Line": "Log-Message \"Étape 4: Exécution des Opérations de Synchronisation...\"",
            "Type": "code",
            "Index": 152
          },
          {
            "Context": "    L152: # --- Étape 4: Exécution des Opérations de Synchronisation ---\n    L153: Log-Message \"Étape 4: Exécution des Opérations de Synchronisation...\"\n>>> L154: $SyncedJsonFiles = @()\n    L155: \n    L156: if ($FilesToActuallySync.Count -eq 0) {",
            "Line": "$SyncedJsonFiles = @()",
            "Type": "code",
            "Index": 153
          },
          {
            "Context": "    L154: $SyncedJsonFiles = @()\n    L155: \n>>> L156: if ($FilesToActuallySync.Count -eq 0) {\n    L157:     Log-Message \"Aucun fichier à synchroniser cette fois-ci.\"\n    L158: }",
            "Line": "if ($FilesToActuallySync.Count -eq 0) {",
            "Type": "control",
            "Index": 155
          },
          {
            "Context": "    L155: \n    L156: if ($FilesToActuallySync.Count -eq 0) {\n>>> L157:     Log-Message \"Aucun fichier à synchroniser cette fois-ci.\"\n    L158: }\n    L159: ",
            "Line": "    Log-Message \"Aucun fichier à synchroniser cette fois-ci.\"",
            "Type": "code",
            "Index": 156
          },
          {
            "Context": "    L158: }\n    L159: \n>>> L160: foreach ($FileRelPath in $FilesToActuallySync) {\n    L161:     $SourceFile = Join-Path $RepoPath $FileRelPath\n    L162:     $DestinationFile = Join-Path $RepoPath $FileRelPath # Assumer que le dépôt est l'emplacement actif",
            "Line": "foreach ($FileRelPath in $FilesToActuallySync) {",
            "Type": "control",
            "Index": 159
          },
          {
            "Context": "    L159: \n    L160: foreach ($FileRelPath in $FilesToActuallySync) {\n>>> L161:     $SourceFile = Join-Path $RepoPath $FileRelPath\n    L162:     $DestinationFile = Join-Path $RepoPath $FileRelPath # Assumer que le dépôt est l'emplacement actif\n    L163: ",
            "Line": "    $SourceFile = Join-Path $RepoPath $FileRelPath",
            "Type": "code",
            "Index": 160
          },
          {
            "Context": "    L160: foreach ($FileRelPath in $FilesToActuallySync) {\n    L161:     $SourceFile = Join-Path $RepoPath $FileRelPath\n>>> L162:     $DestinationFile = Join-Path $RepoPath $FileRelPath # Assumer que le dépôt est l'emplacement actif\n    L163: \n    L164:     if (Test-Path $SourceFile) {",
            "Line": "    $DestinationFile = Join-Path $RepoPath $FileRelPath # Assumer que le dépôt est l'emplacement actif",
            "Type": "code",
            "Index": 161
          },
          {
            "Context": "    L162:     $DestinationFile = Join-Path $RepoPath $FileRelPath # Assumer que le dépôt est l'emplacement actif\n    L163: \n>>> L164:     if (Test-Path $SourceFile) {\n    L165:         Try {\n    L166:             Copy-Item -Path $SourceFile -Destination $DestinationFile -Force",
            "Line": "    if (Test-Path $SourceFile) {",
            "Type": "control",
            "Index": 163
          },
          {
            "Context": "    L163: \n    L164:     if (Test-Path $SourceFile) {\n>>> L165:         Try {\n    L166:             Copy-Item -Path $SourceFile -Destination $DestinationFile -Force\n    L167:             Log-Message \"Synchronisé : $($FileRelPath)\"",
            "Line": "        Try {",
            "Type": "control",
            "Index": 164
          },
          {
            "Context": "    L164:     if (Test-Path $SourceFile) {\n    L165:         Try {\n>>> L166:             Copy-Item -Path $SourceFile -Destination $DestinationFile -Force\n    L167:             Log-Message \"Synchronisé : $($FileRelPath)\"\n    L168:             if ($FileRelPath.EndsWith(\".json\")) {",
            "Line": "            Copy-Item -Path $SourceFile -Destination $DestinationFile -Force",
            "Type": "code",
            "Index": 165
          },
          {
            "Context": "    L165:         Try {\n    L166:             Copy-Item -Path $SourceFile -Destination $DestinationFile -Force\n>>> L167:             Log-Message \"Synchronisé : $($FileRelPath)\"\n    L168:             if ($FileRelPath.EndsWith(\".json\")) {\n    L169:                 $SyncedJsonFiles += $DestinationFile",
            "Line": "            Log-Message \"Synchronisé : $($FileRelPath)\"",
            "Type": "code",
            "Index": 166
          },
          {
            "Context": "    L166:             Copy-Item -Path $SourceFile -Destination $DestinationFile -Force\n    L167:             Log-Message \"Synchronisé : $($FileRelPath)\"\n>>> L168:             if ($FileRelPath.EndsWith(\".json\")) {\n    L169:                 $SyncedJsonFiles += $DestinationFile\n    L170:             }",
            "Line": "            if ($FileRelPath.EndsWith(\".json\")) {",
            "Type": "control",
            "Index": 167
          },
          {
            "Context": "    L167:             Log-Message \"Synchronisé : $($FileRelPath)\"\n    L168:             if ($FileRelPath.EndsWith(\".json\")) {\n>>> L169:                 $SyncedJsonFiles += $DestinationFile\n    L170:             }\n    L171:         } Catch {",
            "Line": "                $SyncedJsonFiles += $DestinationFile",
            "Type": "code",
            "Index": 168
          },
          {
            "Context": "    L169:                 $SyncedJsonFiles += $DestinationFile\n    L170:             }\n>>> L171:         } Catch {\n    L172:             Log-Message \"Échec de la synchronisation de $($FileRelPath). Message : $($_.Exception.Message)\" \"ERREUR\"\n    L173:             # Selon la criticité, on pourrait vouloir sortir ici (Exit 1)",
            "Line": "        } Catch {",
            "Type": "code",
            "Index": 170
          },
          {
            "Context": "    L170:             }\n    L171:         } Catch {\n>>> L172:             Log-Message \"Échec de la synchronisation de $($FileRelPath). Message : $($_.Exception.Message)\" \"ERREUR\"\n    L173:             # Selon la criticité, on pourrait vouloir sortir ici (Exit 1)\n    L174:         }",
            "Line": "            Log-Message \"Échec de la synchronisation de $($FileRelPath). Message : $($_.Exception.Message)\" \"ERREUR\"",
            "Type": "code",
            "Index": 171
          },
          {
            "Context": "    L171:         } Catch {\n    L172:             Log-Message \"Échec de la synchronisation de $($FileRelPath). Message : $($_.Exception.Message)\" \"ERREUR\"\n>>> L173:             # Selon la criticité, on pourrait vouloir sortir ici (Exit 1)\n    L174:         }\n    L175:     } else {",
            "Line": "            # Selon la criticité, on pourrait vouloir sortir ici (Exit 1)",
            "Type": "comment",
            "Index": 172
          },
          {
            "Context": "    L34:         Log-Message \"Stash réussi.\"\n    L35:         $StashApplied = $true\n>>> L36:     } else {\n    L37:         Log-Message \"Aucune modification locale détectée avant le pull.\"\n    L38:     }",
            "Line": "    } else {",
            "Type": "code",
            "Index": 35
          },
          {
            "Context": "    L174:         }\n    L175:     } else {\n>>> L176:         Log-Message \"Fichier source non trouvé pour la synchronisation (peut avoir été supprimé par le pull) : $($SourceFile)\" \"ALERTE\"\n    L177:     }\n    L178: }",
            "Line": "        Log-Message \"Fichier source non trouvé pour la synchronisation (peut avoir été supprimé par le pull) : $($SourceFile)\" \"ALERTE\"",
            "Type": "code",
            "Index": 175
          },
          {
            "Context": "    L9: If (-not (Test-Path $ConflictLogDir)) {\n    L10:     New-Item -ItemType Directory -Path $ConflictLogDir -ErrorAction SilentlyContinue | Out-Null\n>>> L11: }\n    L12: \n    L13: function Log-Message {",
            "Line": "}",
            "Type": "structure",
            "Index": 10
          },
          {
            "Context": "    L178: }\n    L179: \n>>> L180: # --- Étape 5: Vérification Post-Synchronisation ---\n    L181: Log-Message \"Étape 5: Vérification Post-Synchronisation...\"\n    L182: ",
            "Line": "# --- Étape 5: Vérification Post-Synchronisation ---",
            "Type": "comment",
            "Index": 179
          },
          {
            "Context": "    L179: \n    L180: # --- Étape 5: Vérification Post-Synchronisation ---\n>>> L181: Log-Message \"Étape 5: Vérification Post-Synchronisation...\"\n    L182: \n    L183: # Vérification des fichiers JSON synchronisés",
            "Line": "Log-Message \"Étape 5: Vérification Post-Synchronisation...\"",
            "Type": "code",
            "Index": 180
          },
          {
            "Context": "    L181: Log-Message \"Étape 5: Vérification Post-Synchronisation...\"\n    L182: \n>>> L183: # Vérification des fichiers JSON synchronisés\n    L184: if ($SyncedJsonFiles.Count -gt 0) {\n    L185:     Log-Message \"Vérification des fichiers JSON synchronisés...\"",
            "Line": "# Vérification des fichiers JSON synchronisés",
            "Type": "comment",
            "Index": 182
          },
          {
            "Context": "    L182: \n    L183: # Vérification des fichiers JSON synchronisés\n>>> L184: if ($SyncedJsonFiles.Count -gt 0) {\n    L185:     Log-Message \"Vérification des fichiers JSON synchronisés...\"\n    L186:     foreach ($JsonFileFullPath in $SyncedJsonFiles) {",
            "Line": "if ($SyncedJsonFiles.Count -gt 0) {",
            "Type": "control",
            "Index": 183
          },
          {
            "Context": "    L183: # Vérification des fichiers JSON synchronisés\n    L184: if ($SyncedJsonFiles.Count -gt 0) {\n>>> L185:     Log-Message \"Vérification des fichiers JSON synchronisés...\"\n    L186:     foreach ($JsonFileFullPath in $SyncedJsonFiles) {\n    L187:         if (Test-Path $JsonFileFullPath) {",
            "Line": "    Log-Message \"Vérification des fichiers JSON synchronisés...\"",
            "Type": "code",
            "Index": 184
          },
          {
            "Context": "    L184: if ($SyncedJsonFiles.Count -gt 0) {\n    L185:     Log-Message \"Vérification des fichiers JSON synchronisés...\"\n>>> L186:     foreach ($JsonFileFullPath in $SyncedJsonFiles) {\n    L187:         if (Test-Path $JsonFileFullPath) {\n    L188:             Try {",
            "Line": "    foreach ($JsonFileFullPath in $SyncedJsonFiles) {",
            "Type": "control",
            "Index": 185
          },
          {
            "Context": "    L185:     Log-Message \"Vérification des fichiers JSON synchronisés...\"\n    L186:     foreach ($JsonFileFullPath in $SyncedJsonFiles) {\n>>> L187:         if (Test-Path $JsonFileFullPath) {\n    L188:             Try {\n    L189:                 Get-Content -Raw $JsonFileFullPath | ConvertFrom-Json | Out-Null",
            "Line": "        if (Test-Path $JsonFileFullPath) {",
            "Type": "control",
            "Index": 186
          },
          {
            "Context": "    L187:         if (Test-Path $JsonFileFullPath) {\n    L188:             Try {\n>>> L189:                 Get-Content -Raw $JsonFileFullPath | ConvertFrom-Json | Out-Null\n    L190:                 Log-Message \"Vérifié (JSON valide) : $($JsonFileFullPath.Substring($RepoPath.Length + 1))\"\n    L191:             } Catch {",
            "Line": "                Get-Content -Raw $JsonFileFullPath | ConvertFrom-Json | Out-Null",
            "Type": "code",
            "Index": 188
          },
          {
            "Context": "    L188:             Try {\n    L189:                 Get-Content -Raw $JsonFileFullPath | ConvertFrom-Json | Out-Null\n>>> L190:                 Log-Message \"Vérifié (JSON valide) : $($JsonFileFullPath.Substring($RepoPath.Length + 1))\"\n    L191:             } Catch {\n    L192:                 Log-Message \"Fichier JSON invalide après synchronisation : $($JsonFileFullPath.Substring($RepoPath.Length + 1)). Détails : $($_.Exception.Message)\" \"ERREUR\"",
            "Line": "                Log-Message \"Vérifié (JSON valide) : $($JsonFileFullPath.Substring($RepoPath.Length + 1))\"",
            "Type": "code",
            "Index": 189
          },
          {
            "Context": "    L190:                 Log-Message \"Vérifié (JSON valide) : $($JsonFileFullPath.Substring($RepoPath.Length + 1))\"\n    L191:             } Catch {\n>>> L192:                 Log-Message \"Fichier JSON invalide après synchronisation : $($JsonFileFullPath.Substring($RepoPath.Length + 1)). Détails : $($_.Exception.Message)\" \"ERREUR\"\n    L193:                 Exit 1 # Fichier JSON critique invalide\n    L194:             }",
            "Line": "                Log-Message \"Fichier JSON invalide après synchronisation : $($JsonFileFullPath.Substring($RepoPath.Length + 1)). Détails : $($_.Exception.Message)\" \"ERREUR\"",
            "Type": "code",
            "Index": 191
          },
          {
            "Context": "    L191:             } Catch {\n    L192:                 Log-Message \"Fichier JSON invalide après synchronisation : $($JsonFileFullPath.Substring($RepoPath.Length + 1)). Détails : $($_.Exception.Message)\" \"ERREUR\"\n>>> L193:                 Exit 1 # Fichier JSON critique invalide\n    L194:             }\n    L195:         }",
            "Line": "                Exit 1 # Fichier JSON critique invalide",
            "Type": "code",
            "Index": 192
          },
          {
            "Context": "    L134:         if ($UniqueTargetFiles -contains $modifiedFile) {\n    L135:             $FilesToActuallySync += $modifiedFile\n>>> L136:         }\n    L137:     }\n    L138: } else {",
            "Line": "        }",
            "Type": "structure",
            "Index": 135
          },
          {
            "Context": "    L196:     }\n    L197: } else {\n>>> L198:     Log-Message \"Aucun fichier JSON n'a été synchronisé, pas de vérification JSON nécessaire.\"\n    L199: }\n    L200: ",
            "Line": "    Log-Message \"Aucun fichier JSON n'a été synchronisé, pas de vérification JSON nécessaire.\"",
            "Type": "code",
            "Index": 197
          },
          {
            "Context": "    L9: If (-not (Test-Path $ConflictLogDir)) {\n    L10:     New-Item -ItemType Directory -Path $ConflictLogDir -ErrorAction SilentlyContinue | Out-Null\n>>> L11: }\n    L12: \n    L13: function Log-Message {",
            "Line": "}",
            "Type": "structure",
            "Index": 10
          },
          {
            "Context": "    L199: }\n    L200: \n>>> L201: # Vérification de l'existence des fichiers clés\n    L202: $CriticalFiles = @(\n    L203:     \"roo-config/settings/settings.json\",",
            "Line": "# Vérification de l'existence des fichiers clés",
            "Type": "comment",
            "Index": 200
          },
          {
            "Context": "    L200: \n    L201: # Vérification de l'existence des fichiers clés\n>>> L202: $CriticalFiles = @(\n    L203:     \"roo-config/settings/settings.json\",\n    L204:     \"roo-modes/configs/modes.json\",",
            "Line": "$CriticalFiles = @(",
            "Type": "code",
            "Index": 201
          },
          {
            "Context": "    L74: # Liste des fichiers et patterns à synchroniser (relatifs à $RepoPath)\n    L75: $TargetFilesAndPatterns = @(\n>>> L76:     \"roo-config/settings/settings.json\",\n    L77:     \"roo-config/settings/servers.json\",\n    L78:     \"roo-config/settings/modes.json\",",
            "Line": "    \"roo-config/settings/settings.json\",",
            "Type": "code",
            "Index": 75
          },
          {
            "Context": "    L79:     \"roo-config/escalation-test-config.json\",\n    L80:     \"roo-config/qwen3-profiles/qwen3-parameters.json\",\n>>> L81:     \"roo-modes/configs/modes.json\",\n    L82:     \"roo-modes/configs/new-roomodes.json\",\n    L83:     \"roo-modes/configs/standard-modes.json\",",
            "Line": "    \"roo-modes/configs/modes.json\",",
            "Type": "code",
            "Index": 80
          },
          {
            "Context": "    L82:     \"roo-modes/configs/new-roomodes.json\",\n    L83:     \"roo-modes/configs/standard-modes.json\",\n>>> L84:     \"roo-modes/configs/vscode-custom-modes.json\",\n    L85:     \"sync_log.txt\"\n    L86: )",
            "Line": "    \"roo-modes/configs/vscode-custom-modes.json\",",
            "Type": "code",
            "Index": 83
          },
          {
            "Context": "    L83:     \"roo-modes/configs/standard-modes.json\",\n    L84:     \"roo-modes/configs/vscode-custom-modes.json\",\n>>> L85:     \"sync_log.txt\"\n    L86: )\n    L87: ",
            "Line": "    \"sync_log.txt\"",
            "Type": "code",
            "Index": 84
          },
          {
            "Context": "    L205:     \"roo-modes/configs/vscode-custom-modes.json\",\n    L206:     \"sync_log.txt\"\n>>> L207:     # Ajoutez d'autres fichiers critiques ici si nécessaire\n    L208: )\n    L209: Log-Message \"Vérification de l'existence des fichiers critiques...\"",
            "Line": "    # Ajoutez d'autres fichiers critiques ici si nécessaire",
            "Type": "comment",
            "Index": 206
          },
          {
            "Context": "    L84:     \"roo-modes/configs/vscode-custom-modes.json\",\n    L85:     \"sync_log.txt\"\n>>> L86: )\n    L87: \n    L88: # Ajouter les .ps1 sous roo-config (récursif)",
            "Line": ")",
            "Type": "structure",
            "Index": 85
          },
          {
            "Context": "    L207:     # Ajoutez d'autres fichiers critiques ici si nécessaire\n    L208: )\n>>> L209: Log-Message \"Vérification de l'existence des fichiers critiques...\"\n    L210: foreach ($CriticalFileRelPath in $CriticalFiles) {\n    L211:     $FullPath = Join-Path $RepoPath $CriticalFileRelPath",
            "Line": "Log-Message \"Vérification de l'existence des fichiers critiques...\"",
            "Type": "code",
            "Index": 208
          },
          {
            "Context": "    L208: )\n    L209: Log-Message \"Vérification de l'existence des fichiers critiques...\"\n>>> L210: foreach ($CriticalFileRelPath in $CriticalFiles) {\n    L211:     $FullPath = Join-Path $RepoPath $CriticalFileRelPath\n    L212:     if (-not (Test-Path $FullPath)) {",
            "Line": "foreach ($CriticalFileRelPath in $CriticalFiles) {",
            "Type": "control",
            "Index": 209
          },
          {
            "Context": "    L209: Log-Message \"Vérification de l'existence des fichiers critiques...\"\n    L210: foreach ($CriticalFileRelPath in $CriticalFiles) {\n>>> L211:     $FullPath = Join-Path $RepoPath $CriticalFileRelPath\n    L212:     if (-not (Test-Path $FullPath)) {\n    L213:         Log-Message \"Fichier critique manquant après synchronisation : $($CriticalFileRelPath)\" \"ERREUR\"",
            "Line": "    $FullPath = Join-Path $RepoPath $CriticalFileRelPath",
            "Type": "code",
            "Index": 210
          },
          {
            "Context": "    L210: foreach ($CriticalFileRelPath in $CriticalFiles) {\n    L211:     $FullPath = Join-Path $RepoPath $CriticalFileRelPath\n>>> L212:     if (-not (Test-Path $FullPath)) {\n    L213:         Log-Message \"Fichier critique manquant après synchronisation : $($CriticalFileRelPath)\" \"ERREUR\"\n    L214:         Exit 1 # Fichier critique manquant",
            "Line": "    if (-not (Test-Path $FullPath)) {",
            "Type": "control",
            "Index": 211
          },
          {
            "Context": "    L211:     $FullPath = Join-Path $RepoPath $CriticalFileRelPath\n    L212:     if (-not (Test-Path $FullPath)) {\n>>> L213:         Log-Message \"Fichier critique manquant après synchronisation : $($CriticalFileRelPath)\" \"ERREUR\"\n    L214:         Exit 1 # Fichier critique manquant\n    L215:     } else {",
            "Line": "        Log-Message \"Fichier critique manquant après synchronisation : $($CriticalFileRelPath)\" \"ERREUR\"",
            "Type": "code",
            "Index": 212
          },
          {
            "Context": "    L212:     if (-not (Test-Path $FullPath)) {\n    L213:         Log-Message \"Fichier critique manquant après synchronisation : $($CriticalFileRelPath)\" \"ERREUR\"\n>>> L214:         Exit 1 # Fichier critique manquant\n    L215:     } else {\n    L216:         Log-Message \"Fichier critique présent : $($CriticalFileRelPath)\"",
            "Line": "        Exit 1 # Fichier critique manquant",
            "Type": "code",
            "Index": 213
          },
          {
            "Context": "    L34:         Log-Message \"Stash réussi.\"\n    L35:         $StashApplied = $true\n>>> L36:     } else {\n    L37:         Log-Message \"Aucune modification locale détectée avant le pull.\"\n    L38:     }",
            "Line": "    } else {",
            "Type": "code",
            "Index": 35
          },
          {
            "Context": "    L214:         Exit 1 # Fichier critique manquant\n    L215:     } else {\n>>> L216:         Log-Message \"Fichier critique présent : $($CriticalFileRelPath)\"\n    L217:     }\n    L218: }",
            "Line": "        Log-Message \"Fichier critique présent : $($CriticalFileRelPath)\"",
            "Type": "code",
            "Index": 215
          },
          {
            "Context": "    L9: If (-not (Test-Path $ConflictLogDir)) {\n    L10:     New-Item -ItemType Directory -Path $ConflictLogDir -ErrorAction SilentlyContinue | Out-Null\n>>> L11: }\n    L12: \n    L13: function Log-Message {",
            "Line": "}",
            "Type": "structure",
            "Index": 10
          },
          {
            "Context": "    L218: }\n    L219: \n>>> L220: # --- Étape 6: Gestion des Commits de Correction (si nécessaire) ---\n    L221: Log-Message \"Étape 6: Gestion des Commits de Correction...\"\n    L222: Try {",
            "Line": "# --- Étape 6: Gestion des Commits de Correction (si nécessaire) ---",
            "Type": "comment",
            "Index": 219
          },
          {
            "Context": "    L219: \n    L220: # --- Étape 6: Gestion des Commits de Correction (si nécessaire) ---\n>>> L221: Log-Message \"Étape 6: Gestion des Commits de Correction...\"\n    L222: Try {\n    L223:     $PostSyncStatus = git status --porcelain",
            "Line": "Log-Message \"Étape 6: Gestion des Commits de Correction...\"",
            "Type": "code",
            "Index": 220
          },
          {
            "Context": "    L26: Log-Message \"Étape 1: Préparation et Vérification de l'Environnement Git...\"\n    L27: $StashApplied = $false\n>>> L28: Try {\n    L29:     Log-Message \"Vérification du statut Git avant pull...\"\n    L30:     $GitStatus = git status --porcelain",
            "Line": "Try {",
            "Type": "control",
            "Index": 27
          },
          {
            "Context": "    L221: Log-Message \"Étape 6: Gestion des Commits de Correction...\"\n    L222: Try {\n>>> L223:     $PostSyncStatus = git status --porcelain\n    L224:     if ($PostSyncStatus) {\n    L225:         Log-Message \"Modifications détectées après synchronisation (ex: logs). Création d'un commit de correction...\" \"ALERTE\"",
            "Line": "    $PostSyncStatus = git status --porcelain",
            "Type": "code",
            "Index": 222
          },
          {
            "Context": "    L222: Try {\n    L223:     $PostSyncStatus = git status --porcelain\n>>> L224:     if ($PostSyncStatus) {\n    L225:         Log-Message \"Modifications détectées après synchronisation (ex: logs). Création d'un commit de correction...\" \"ALERTE\"\n    L226:         git add . # Ajoute tous les changements, y compris les logs. Peut être affiné.",
            "Line": "    if ($PostSyncStatus) {",
            "Type": "control",
            "Index": 223
          },
          {
            "Context": "    L223:     $PostSyncStatus = git status --porcelain\n    L224:     if ($PostSyncStatus) {\n>>> L225:         Log-Message \"Modifications détectées après synchronisation (ex: logs). Création d'un commit de correction...\" \"ALERTE\"\n    L226:         git add . # Ajoute tous les changements, y compris les logs. Peut être affiné.\n    L227:         git commit -m \"SYNC: [Automated] Mise à jour post-synchronisation (logs, etc.)\"",
            "Line": "        Log-Message \"Modifications détectées après synchronisation (ex: logs). Création d'un commit de correction...\" \"ALERTE\"",
            "Type": "code",
            "Index": 224
          },
          {
            "Context": "    L224:     if ($PostSyncStatus) {\n    L225:         Log-Message \"Modifications détectées après synchronisation (ex: logs). Création d'un commit de correction...\" \"ALERTE\"\n>>> L226:         git add . # Ajoute tous les changements, y compris les logs. Peut être affiné.\n    L227:         git commit -m \"SYNC: [Automated] Mise à jour post-synchronisation (logs, etc.)\"\n    L228:         Log-Message \"Commit de correction créé.\"",
            "Line": "        git add . # Ajoute tous les changements, y compris les logs. Peut être affiné.",
            "Type": "code",
            "Index": 225
          },
          {
            "Context": "    L225:         Log-Message \"Modifications détectées après synchronisation (ex: logs). Création d'un commit de correction...\" \"ALERTE\"\n    L226:         git add . # Ajoute tous les changements, y compris les logs. Peut être affiné.\n>>> L227:         git commit -m \"SYNC: [Automated] Mise à jour post-synchronisation (logs, etc.)\"\n    L228:         Log-Message \"Commit de correction créé.\"\n    L229: ",
            "Line": "        git commit -m \"SYNC: [Automated] Mise à jour post-synchronisation (logs, etc.)\"",
            "Type": "code",
            "Index": 226
          },
          {
            "Context": "    L226:         git add . # Ajoute tous les changements, y compris les logs. Peut être affiné.\n    L227:         git commit -m \"SYNC: [Automated] Mise à jour post-synchronisation (logs, etc.)\"\n>>> L228:         Log-Message \"Commit de correction créé.\"\n    L229: \n    L230:         Log-Message \"Tentative de push du commit de correction...\"",
            "Line": "        Log-Message \"Commit de correction créé.\"",
            "Type": "code",
            "Index": 227
          },
          {
            "Context": "    L1: # Fichier : d:/roo-extensions/sync_roo_environment.ps1\n>>> L2: \n    L3: $RepoPath = \"d:/roo-extensions\"\n    L4: $LogFile = \"d:/roo-extensions/sync_log.txt\"",
            "Line": "",
            "Type": "empty",
            "Index": 1
          },
          {
            "Context": "    L228:         Log-Message \"Commit de correction créé.\"\n    L229: \n>>> L230:         Log-Message \"Tentative de push du commit de correction...\"\n    L231:         git push origin main\n    L232:         Log-Message \"Push du commit de correction réussi.\"",
            "Line": "        Log-Message \"Tentative de push du commit de correction...\"",
            "Type": "code",
            "Index": 229
          },
          {
            "Context": "    L229: \n    L230:         Log-Message \"Tentative de push du commit de correction...\"\n>>> L231:         git push origin main\n    L232:         Log-Message \"Push du commit de correction réussi.\"\n    L233:     } else {",
            "Line": "        git push origin main",
            "Type": "code",
            "Index": 230
          },
          {
            "Context": "    L230:         Log-Message \"Tentative de push du commit de correction...\"\n    L231:         git push origin main\n>>> L232:         Log-Message \"Push du commit de correction réussi.\"\n    L233:     } else {\n    L234:         Log-Message \"Aucune modification à commiter après synchronisation.\"",
            "Line": "        Log-Message \"Push du commit de correction réussi.\"",
            "Type": "code",
            "Index": 231
          },
          {
            "Context": "    L34:         Log-Message \"Stash réussi.\"\n    L35:         $StashApplied = $true\n>>> L36:     } else {\n    L37:         Log-Message \"Aucune modification locale détectée avant le pull.\"\n    L38:     }",
            "Line": "    } else {",
            "Type": "code",
            "Index": 35
          },
          {
            "Context": "    L232:         Log-Message \"Push du commit de correction réussi.\"\n    L233:     } else {\n>>> L234:         Log-Message \"Aucune modification à commiter après synchronisation.\"\n    L235:     }\n    L236: } Catch {",
            "Line": "        Log-Message \"Aucune modification à commiter après synchronisation.\"",
            "Type": "code",
            "Index": 233
          },
          {
            "Context": "    L37:         Log-Message \"Aucune modification locale détectée avant le pull.\"\n    L38:     }\n>>> L39: } Catch {\n    L40:     Log-Message \"Échec lors de la vérification du statut Git ou du stash. Message : $($_.Exception.Message)\" \"ERREUR\"\n    L41:     Exit 1 # Sortie avec erreur",
            "Line": "} Catch {",
            "Type": "code",
            "Index": 38
          },
          {
            "Context": "    L235:     }\n    L236: } Catch {\n>>> L237:     Log-Message \"Échec lors de la gestion des commits de correction ou du push. Message : $($_.Exception.Message)\" \"ERREUR\"\n    L238:     # Ne pas quitter ici, car la synchronisation des fichiers a été effectuée localement.\n    L239:     # Le push peut être retenté manuellement.",
            "Line": "    Log-Message \"Échec lors de la gestion des commits de correction ou du push. Message : $($_.Exception.Message)\" \"ERREUR\"",
            "Type": "code",
            "Index": 236
          },
          {
            "Context": "    L236: } Catch {\n    L237:     Log-Message \"Échec lors de la gestion des commits de correction ou du push. Message : $($_.Exception.Message)\" \"ERREUR\"\n>>> L238:     # Ne pas quitter ici, car la synchronisation des fichiers a été effectuée localement.\n    L239:     # Le push peut être retenté manuellement.\n    L240: }",
            "Line": "    # Ne pas quitter ici, car la synchronisation des fichiers a été effectuée localement.",
            "Type": "comment",
            "Index": 237
          },
          {
            "Context": "    L237:     Log-Message \"Échec lors de la gestion des commits de correction ou du push. Message : $($_.Exception.Message)\" \"ERREUR\"\n    L238:     # Ne pas quitter ici, car la synchronisation des fichiers a été effectuée localement.\n>>> L239:     # Le push peut être retenté manuellement.\n    L240: }\n    L241: ",
            "Line": "    # Le push peut être retenté manuellement.",
            "Type": "comment",
            "Index": 238
          },
          {
            "Context": "    L9: If (-not (Test-Path $ConflictLogDir)) {\n    L10:     New-Item -ItemType Directory -Path $ConflictLogDir -ErrorAction SilentlyContinue | Out-Null\n>>> L11: }\n    L12: \n    L13: function Log-Message {",
            "Line": "}",
            "Type": "structure",
            "Index": 10
          },
          {
            "Context": "    L1: # Fichier : d:/roo-extensions/sync_roo_environment.ps1\n>>> L2: \n    L3: $RepoPath = \"d:/roo-extensions\"\n    L4: $LogFile = \"d:/roo-extensions/sync_log.txt\"",
            "Line": "",
            "Type": "empty",
            "Index": 1
          },
          {
            "Context": "    L240: }\n    L241: \n>>> L242: # --- Étape 7: Nettoyage et Rapport Final ---\n    L243: Log-Message \"Étape 7: Nettoyage et Rapport Final...\"\n    L244: if ($StashApplied) {",
            "Line": "# --- Étape 7: Nettoyage et Rapport Final ---",
            "Type": "comment",
            "Index": 241
          },
          {
            "Context": "    L241: \n    L242: # --- Étape 7: Nettoyage et Rapport Final ---\n>>> L243: Log-Message \"Étape 7: Nettoyage et Rapport Final...\"\n    L244: if ($StashApplied) {\n    L245:     Log-Message \"Restauration du stash...\"",
            "Line": "Log-Message \"Étape 7: Nettoyage et Rapport Final...\"",
            "Type": "code",
            "Index": 242
          },
          {
            "Context": "    L245:     Log-Message \"Restauration du stash...\"\n    L246:     Try {\n>>> L247:         git stash pop\n    L248:         Log-Message \"Stash restauré avec succès.\"\n    L249:     } Catch {",
            "Line": "        git stash pop",
            "Type": "code",
            "Index": 246
          },
          {
            "Context": "    L248:         Log-Message \"Stash restauré avec succès.\"\n    L249:     } Catch {\n>>> L250:         Log-Message \"Échec de la restauration du stash. Des conflits peuvent exister. Message : $($_.Exception.Message). Résolution manuelle requise.\" \"ALERTE\"\n    L251:         # Documenter les conflits de stash pop si nécessaire dans un fichier de conflit dédié\n    L252:         $ConflictLogFile = Join-Path $ConflictLogDir \"stash_pop_conflicts_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"",
            "Line": "        Log-Message \"Échec de la restauration du stash. Des conflits peuvent exister. Message : $($_.Exception.Message). Résolution manuelle requise.\" \"ALERTE\"",
            "Type": "code",
            "Index": 249
          },
          {
            "Context": "    L249:     } Catch {\n    L250:         Log-Message \"Échec de la restauration du stash. Des conflits peuvent exister. Message : $($_.Exception.Message). Résolution manuelle requise.\" \"ALERTE\"\n>>> L251:         # Documenter les conflits de stash pop si nécessaire dans un fichier de conflit dédié\n    L252:         $ConflictLogFile = Join-Path $ConflictLogDir \"stash_pop_conflicts_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"\n    L253:         Add-Content -Path $ConflictLogFile -Value \"--- Conflit Git détecté lors du stash pop - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---\"",
            "Line": "        # Documenter les conflits de stash pop si nécessaire dans un fichier de conflit dédié",
            "Type": "comment",
            "Index": 250
          },
          {
            "Context": "    L250:         Log-Message \"Échec de la restauration du stash. Des conflits peuvent exister. Message : $($_.Exception.Message). Résolution manuelle requise.\" \"ALERTE\"\n    L251:         # Documenter les conflits de stash pop si nécessaire dans un fichier de conflit dédié\n>>> L252:         $ConflictLogFile = Join-Path $ConflictLogDir \"stash_pop_conflicts_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"\n    L253:         Add-Content -Path $ConflictLogFile -Value \"--- Conflit Git détecté lors du stash pop - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---\"\n    L254:         Add-Content -Path $ConflictLogFile -Value \"$($_.Exception.Message)\"",
            "Line": "        $ConflictLogFile = Join-Path $ConflictLogDir \"stash_pop_conflicts_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"",
            "Type": "code",
            "Index": 251
          },
          {
            "Context": "    L251:         # Documenter les conflits de stash pop si nécessaire dans un fichier de conflit dédié\n    L252:         $ConflictLogFile = Join-Path $ConflictLogDir \"stash_pop_conflicts_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"\n>>> L253:         Add-Content -Path $ConflictLogFile -Value \"--- Conflit Git détecté lors du stash pop - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---\"\n    L254:         Add-Content -Path $ConflictLogFile -Value \"$($_.Exception.Message)\"\n    L255:         (git status) | Out-String | Add-Content -Path $ConflictLogFile",
            "Line": "        Add-Content -Path $ConflictLogFile -Value \"--- Conflit Git détecté lors du stash pop - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---\"",
            "Type": "code",
            "Index": 252
          },
          {
            "Context": "    L252:         $ConflictLogFile = Join-Path $ConflictLogDir \"stash_pop_conflicts_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"\n    L253:         Add-Content -Path $ConflictLogFile -Value \"--- Conflit Git détecté lors du stash pop - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---\"\n>>> L254:         Add-Content -Path $ConflictLogFile -Value \"$($_.Exception.Message)\"\n    L255:         (git status) | Out-String | Add-Content -Path $ConflictLogFile\n    L256:         Add-Content -Path $ConflictLogFile -Value \"--- FIN DU CONFLIT STASH POP ---\"",
            "Line": "        Add-Content -Path $ConflictLogFile -Value \"$($_.Exception.Message)\"",
            "Type": "code",
            "Index": 253
          },
          {
            "Context": "    L60:         Add-Content -Path $ConflictLogFile -Value \"Branche : main\" # Assumer main, ajuster si nécessaire\n    L61:         Add-Content -Path $ConflictLogFile -Value \"Statut avant abort :\"\n>>> L62:         (git status) | Out-String | Add-Content -Path $ConflictLogFile\n    L63:         Add-Content -Path $ConflictLogFile -Value \"--- FIN DU CONFLIT ---\"\n    L64:         Log-Message \"Conflit de fusion annulé. Voir $($ConflictLogFile) pour les détails. Synchronisation interrompue.\" \"ERREUR\"",
            "Line": "        (git status) | Out-String | Add-Content -Path $ConflictLogFile",
            "Type": "code",
            "Index": 61
          },
          {
            "Context": "    L254:         Add-Content -Path $ConflictLogFile -Value \"$($_.Exception.Message)\"\n    L255:         (git status) | Out-String | Add-Content -Path $ConflictLogFile\n>>> L256:         Add-Content -Path $ConflictLogFile -Value \"--- FIN DU CONFLIT STASH POP ---\"\n    L257:         Log-Message \"Détails du conflit de stash pop enregistrés dans $ConflictLogFile\" \"ALERTE\"\n    L258:     }",
            "Line": "        Add-Content -Path $ConflictLogFile -Value \"--- FIN DU CONFLIT STASH POP ---\"",
            "Type": "code",
            "Index": 255
          },
          {
            "Context": "    L255:         (git status) | Out-String | Add-Content -Path $ConflictLogFile\n    L256:         Add-Content -Path $ConflictLogFile -Value \"--- FIN DU CONFLIT STASH POP ---\"\n>>> L257:         Log-Message \"Détails du conflit de stash pop enregistrés dans $ConflictLogFile\" \"ALERTE\"\n    L258:     }\n    L259: }",
            "Line": "        Log-Message \"Détails du conflit de stash pop enregistrés dans $ConflictLogFile\" \"ALERTE\"",
            "Type": "code",
            "Index": 256
          },
          {
            "Context": "    L36:     } else {\n    L37:         Log-Message \"Aucune modification locale détectée avant le pull.\"\n>>> L38:     }\n    L39: } Catch {\n    L40:     Log-Message \"Échec lors de la vérification du statut Git ou du stash. Message : $($_.Exception.Message)\" \"ERREUR\"",
            "Line": "    }",
            "Type": "structure",
            "Index": 37
          },
          {
            "Context": "    L9: If (-not (Test-Path $ConflictLogDir)) {\n    L10:     New-Item -ItemType Directory -Path $ConflictLogDir -ErrorAction SilentlyContinue | Out-Null\n>>> L11: }\n    L12: \n    L13: function Log-Message {",
            "Line": "}",
            "Type": "structure",
            "Index": 10
          },
          {
            "Context": "    L1: # Fichier : d:/roo-extensions/sync_roo_environment.ps1\n>>> L2: \n    L3: $RepoPath = \"d:/roo-extensions\"\n    L4: $LogFile = \"d:/roo-extensions/sync_log.txt\"",
            "Line": "",
            "Type": "empty",
            "Index": 1
          }
        ]
      },
      "Index": 5
    },
    {
      "Lines": 305,
      "Size": 15097,
      "File": "stash7-version.ps1",
      "Comparison": {
        "CommonLines": 123,
        "UniqueInCurrent": 122,
        "UniqueInStash": 182,
        "UniqueAnalysis": [
          {
            "Context": "    L18: }\n    L19: \n>>> L20: # Vérifier si Git est disponible\n    L21: Log-Message \"Vérification de la disponibilité de la commande git...\"\n    L22: $GitPath = Get-Command git -ErrorAction SilentlyContinue",
            "Line": "# Vérifier si Git est disponible",
            "Type": "comment",
            "Index": 19
          },
          {
            "Context": "    L19: \n    L20: # Vérifier si Git est disponible\n>>> L21: Log-Message \"Vérification de la disponibilité de la commande git...\"\n    L22: $GitPath = Get-Command git -ErrorAction SilentlyContinue\n    L23: if (-not $GitPath) {",
            "Line": "Log-Message \"Vérification de la disponibilité de la commande git...\"",
            "Type": "code",
            "Index": 20
          },
          {
            "Context": "    L20: # Vérifier si Git est disponible\n    L21: Log-Message \"Vérification de la disponibilité de la commande git...\"\n>>> L22: $GitPath = Get-Command git -ErrorAction SilentlyContinue\n    L23: if (-not $GitPath) {\n    L24:     Log-Message \"ERREUR: La commande 'git' n'a pas été trouvée. Veuillez vous assurer que Git est installé et dans le PATH.\" \"ERREUR\"",
            "Line": "$GitPath = Get-Command git -ErrorAction SilentlyContinue",
            "Type": "code",
            "Index": 21
          },
          {
            "Context": "    L21: Log-Message \"Vérification de la disponibilité de la commande git...\"\n    L22: $GitPath = Get-Command git -ErrorAction SilentlyContinue\n>>> L23: if (-not $GitPath) {\n    L24:     Log-Message \"ERREUR: La commande 'git' n'a pas été trouvée. Veuillez vous assurer que Git est installé et dans le PATH.\" \"ERREUR\"\n    L25:     Exit 1",
            "Line": "if (-not $GitPath) {",
            "Type": "control",
            "Index": 22
          },
          {
            "Context": "    L22: $GitPath = Get-Command git -ErrorAction SilentlyContinue\n    L23: if (-not $GitPath) {\n>>> L24:     Log-Message \"ERREUR: La commande 'git' n'a pas été trouvée. Veuillez vous assurer que Git est installé et dans le PATH.\" \"ERREUR\"\n    L25:     Exit 1\n    L26: }",
            "Line": "    Log-Message \"ERREUR: La commande 'git' n'a pas été trouvée. Veuillez vous assurer que Git est installé et dans le PATH.\" \"ERREUR\"",
            "Type": "code",
            "Index": 23
          },
          {
            "Context": "    L23: if (-not $GitPath) {\n    L24:     Log-Message \"ERREUR: La commande 'git' n'a pas été trouvée. Veuillez vous assurer que Git est installé et dans le PATH.\" \"ERREUR\"\n>>> L25:     Exit 1\n    L26: }\n    L27: Log-Message \"Commande 'git' trouvée : $($GitPath.Source)\"",
            "Line": "    Exit 1",
            "Type": "code",
            "Index": 24
          },
          {
            "Context": "    L25:     Exit 1\n    L26: }\n>>> L27: Log-Message \"Commande 'git' trouvée : $($GitPath.Source)\"\n    L28: Set-Location $RepoPath\n    L29: ",
            "Line": "Log-Message \"Commande 'git' trouvée : $($GitPath.Source)\"",
            "Type": "code",
            "Index": 26
          },
          {
            "Context": "    L45: }\n    L46: \n>>> L47: Log-Message \"Capture de l'état HEAD avant pull...\"\n    L48: $HeadBeforePull = git rev-parse HEAD\n    L49: if (-not $HeadBeforePull -or ($LASTEXITCODE -ne 0)) {",
            "Line": "Log-Message \"Capture de l'état HEAD avant pull...\"",
            "Type": "code",
            "Index": 46
          },
          {
            "Context": "    L46: \n    L47: Log-Message \"Capture de l'état HEAD avant pull...\"\n>>> L48: $HeadBeforePull = git rev-parse HEAD\n    L49: if (-not $HeadBeforePull -or ($LASTEXITCODE -ne 0)) {\n    L50:     Log-Message \"Impossible de récupérer le SHA de HEAD avant pull. Annulation.\" \"ERREUR\"",
            "Line": "$HeadBeforePull = git rev-parse HEAD",
            "Type": "code",
            "Index": 47
          },
          {
            "Context": "    L47: Log-Message \"Capture de l'état HEAD avant pull...\"\n    L48: $HeadBeforePull = git rev-parse HEAD\n>>> L49: if (-not $HeadBeforePull -or ($LASTEXITCODE -ne 0)) {\n    L50:     Log-Message \"Impossible de récupérer le SHA de HEAD avant pull. Annulation.\" \"ERREUR\"\n    L51:     # Tenter de restaurer le stash si appliqué",
            "Line": "if (-not $HeadBeforePull -or ($LASTEXITCODE -ne 0)) {",
            "Type": "control",
            "Index": 48
          },
          {
            "Context": "    L48: $HeadBeforePull = git rev-parse HEAD\n    L49: if (-not $HeadBeforePull -or ($LASTEXITCODE -ne 0)) {\n>>> L50:     Log-Message \"Impossible de récupérer le SHA de HEAD avant pull. Annulation.\" \"ERREUR\"\n    L51:     # Tenter de restaurer le stash si appliqué\n    L52:     if ($StashApplied) {",
            "Line": "    Log-Message \"Impossible de récupérer le SHA de HEAD avant pull. Annulation.\" \"ERREUR\"",
            "Type": "code",
            "Index": 49
          },
          {
            "Context": "    L49: if (-not $HeadBeforePull -or ($LASTEXITCODE -ne 0)) {\n    L50:     Log-Message \"Impossible de récupérer le SHA de HEAD avant pull. Annulation.\" \"ERREUR\"\n>>> L51:     # Tenter de restaurer le stash si appliqué\n    L52:     if ($StashApplied) {\n    L53:         Log-Message \"Tentative de restauration du stash avant de quitter...\"",
            "Line": "    # Tenter de restaurer le stash si appliqué",
            "Type": "comment",
            "Index": 50
          },
          {
            "Context": "    L51:     # Tenter de restaurer le stash si appliqué\n    L52:     if ($StashApplied) {\n>>> L53:         Log-Message \"Tentative de restauration du stash avant de quitter...\"\n    L54:         Try { git stash pop -ErrorAction SilentlyContinue } Catch {}\n    L55:     }",
            "Line": "        Log-Message \"Tentative de restauration du stash avant de quitter...\"",
            "Type": "code",
            "Index": 52
          },
          {
            "Context": "    L52:     if ($StashApplied) {\n    L53:         Log-Message \"Tentative de restauration du stash avant de quitter...\"\n>>> L54:         Try { git stash pop -ErrorAction SilentlyContinue } Catch {}\n    L55:     }\n    L56:     Exit 1",
            "Line": "        Try { git stash pop -ErrorAction SilentlyContinue } Catch {}",
            "Type": "control",
            "Index": 53
          },
          {
            "Context": "    L23: if (-not $GitPath) {\n    L24:     Log-Message \"ERREUR: La commande 'git' n'a pas été trouvée. Veuillez vous assurer que Git est installé et dans le PATH.\" \"ERREUR\"\n>>> L25:     Exit 1\n    L26: }\n    L27: Log-Message \"Commande 'git' trouvée : $($GitPath.Source)\"",
            "Line": "    Exit 1",
            "Type": "code",
            "Index": 24
          },
          {
            "Context": "    L56:     Exit 1\n    L57: }\n>>> L58: Log-Message \"SHA de HEAD avant pull: $HeadBeforePull\"\n    L59: \n    L60: # Étape 2: Mise à Jour du Dépôt Local (git pull)",
            "Line": "Log-Message \"SHA de HEAD avant pull: $HeadBeforePull\"",
            "Type": "code",
            "Index": 57
          },
          {
            "Context": "    L60: # Étape 2: Mise à Jour du Dépôt Local (git pull)\n    L61: Log-Message \"Exécution de git pull origin main...\"\n>>> L62: $PullAttemptOutput = \"\" # Pour stocker la sortie en cas d'erreur\n    L63: Try {\n    L64:     $GitPullResult = Invoke-Expression \"git pull origin main 2>&1\" # Capturer stdout et stderr",
            "Line": "$PullAttemptOutput = \"\" # Pour stocker la sortie en cas d'erreur",
            "Type": "code",
            "Index": 61
          },
          {
            "Context": "    L62: $PullAttemptOutput = \"\" # Pour stocker la sortie en cas d'erreur\n    L63: Try {\n>>> L64:     $GitPullResult = Invoke-Expression \"git pull origin main 2>&1\" # Capturer stdout et stderr\n    L65:     $PullAttemptOutput = $GitPullResult | Out-String # Convertir en une seule chaîne\n    L66: ",
            "Line": "    $GitPullResult = Invoke-Expression \"git pull origin main 2>&1\" # Capturer stdout et stderr",
            "Type": "code",
            "Index": 63
          },
          {
            "Context": "    L63: Try {\n    L64:     $GitPullResult = Invoke-Expression \"git pull origin main 2>&1\" # Capturer stdout et stderr\n>>> L65:     $PullAttemptOutput = $GitPullResult | Out-String # Convertir en une seule chaîne\n    L66: \n    L67:     if ($LASTEXITCODE -ne 0) {",
            "Line": "    $PullAttemptOutput = $GitPullResult | Out-String # Convertir en une seule chaîne",
            "Type": "code",
            "Index": 64
          },
          {
            "Context": "    L65:     $PullAttemptOutput = $GitPullResult | Out-String # Convertir en une seule chaîne\n    L66: \n>>> L67:     if ($LASTEXITCODE -ne 0) {\n    L68:         throw \"Git pull a échoué avec le code $LASTEXITCODE.\"\n    L69:     }",
            "Line": "    if ($LASTEXITCODE -ne 0) {",
            "Type": "control",
            "Index": 66
          },
          {
            "Context": "    L66: \n    L67:     if ($LASTEXITCODE -ne 0) {\n>>> L68:         throw \"Git pull a échoué avec le code $LASTEXITCODE.\"\n    L69:     }\n    L70:     Log-Message \"Git pull réussi.\"",
            "Line": "        throw \"Git pull a échoué avec le code $LASTEXITCODE.\"",
            "Type": "code",
            "Index": 67
          },
          {
            "Context": "    L69:     }\n    L70:     Log-Message \"Git pull réussi.\"\n>>> L71:     if ($PullAttemptOutput -and $PullAttemptOutput.Trim().Length -gt 0) { Log-Message \"Sortie de Git Pull: $($PullAttemptOutput.Trim())\" }\n    L72: \n    L73: } Catch {",
            "Line": "    if ($PullAttemptOutput -and $PullAttemptOutput.Trim().Length -gt 0) { Log-Message \"Sortie de Git Pull: $($PullAttemptOutput.Trim())\" }",
            "Type": "control",
            "Index": 70
          },
          {
            "Context": "    L72: \n    L73: } Catch {\n>>> L74:     $ErrorMessageFromException = $_.Exception.Message\n    L75:     \n    L76:     if ($PullAttemptOutput -like \"*merge conflict*\") {",
            "Line": "    $ErrorMessageFromException = $_.Exception.Message",
            "Type": "code",
            "Index": 73
          },
          {
            "Context": "    L74:     $ErrorMessageFromException = $_.Exception.Message\n    L75:     \n>>> L76:     if ($PullAttemptOutput -like \"*merge conflict*\") {\n    L77:         Log-Message \"Conflit de fusion détecté (basé sur la sortie de git pull). Annulation de la fusion...\" \"ALERTE\"\n    L78:         git merge --abort # Tenter d'annuler",
            "Line": "    if ($PullAttemptOutput -like \"*merge conflict*\") {",
            "Type": "control",
            "Index": 75
          },
          {
            "Context": "    L75:     \n    L76:     if ($PullAttemptOutput -like \"*merge conflict*\") {\n>>> L77:         Log-Message \"Conflit de fusion détecté (basé sur la sortie de git pull). Annulation de la fusion...\" \"ALERTE\"\n    L78:         git merge --abort # Tenter d'annuler\n    L79:         $ConflictLogFile = Join-Path $ConflictLogDir \"sync_conflicts_pull_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"",
            "Line": "        Log-Message \"Conflit de fusion détecté (basé sur la sortie de git pull). Annulation de la fusion...\" \"ALERTE\"",
            "Type": "code",
            "Index": 76
          },
          {
            "Context": "    L76:     if ($PullAttemptOutput -like \"*merge conflict*\") {\n    L77:         Log-Message \"Conflit de fusion détecté (basé sur la sortie de git pull). Annulation de la fusion...\" \"ALERTE\"\n>>> L78:         git merge --abort # Tenter d'annuler\n    L79:         $ConflictLogFile = Join-Path $ConflictLogDir \"sync_conflicts_pull_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"\n    L80:         Add-Content -Path $ConflictLogFile -Value \"--- Conflit Git détecté lors du pull - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---\"",
            "Line": "        git merge --abort # Tenter d'annuler",
            "Type": "code",
            "Index": 77
          },
          {
            "Context": "    L77:         Log-Message \"Conflit de fusion détecté (basé sur la sortie de git pull). Annulation de la fusion...\" \"ALERTE\"\n    L78:         git merge --abort # Tenter d'annuler\n>>> L79:         $ConflictLogFile = Join-Path $ConflictLogDir \"sync_conflicts_pull_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"\n    L80:         Add-Content -Path $ConflictLogFile -Value \"--- Conflit Git détecté lors du pull - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---\"\n    L81:         Add-Content -Path $ConflictLogFile -Value \"Dépôt : $RepoPath\"",
            "Line": "        $ConflictLogFile = Join-Path $ConflictLogDir \"sync_conflicts_pull_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"",
            "Type": "code",
            "Index": 78
          },
          {
            "Context": "    L81:         Add-Content -Path $ConflictLogFile -Value \"Dépôt : $RepoPath\"\n    L82:         Add-Content -Path $ConflictLogFile -Value \"Branche : main\"\n>>> L83:         Add-Content -Path $ConflictLogFile -Value \"Sortie de git pull ayant causé l'erreur : $($PullAttemptOutput.Trim())\"\n    L84:         Add-Content -Path $ConflictLogFile -Value \"Statut après tentative d'abort :\"\n    L85:         (git status) | Out-String | Add-Content -Path $ConflictLogFile",
            "Line": "        Add-Content -Path $ConflictLogFile -Value \"Sortie de git pull ayant causé l'erreur : $($PullAttemptOutput.Trim())\"",
            "Type": "code",
            "Index": 82
          },
          {
            "Context": "    L82:         Add-Content -Path $ConflictLogFile -Value \"Branche : main\"\n    L83:         Add-Content -Path $ConflictLogFile -Value \"Sortie de git pull ayant causé l'erreur : $($PullAttemptOutput.Trim())\"\n>>> L84:         Add-Content -Path $ConflictLogFile -Value \"Statut après tentative d'abort :\"\n    L85:         (git status) | Out-String | Add-Content -Path $ConflictLogFile\n    L86:         Add-Content -Path $ConflictLogFile -Value \"--- FIN DU CONFLIT ---\"",
            "Line": "        Add-Content -Path $ConflictLogFile -Value \"Statut après tentative d'abort :\"",
            "Type": "code",
            "Index": 83
          },
          {
            "Context": "    L87:         Log-Message \"Conflit de fusion annulé. Voir $($ConflictLogFile) pour les détails. Synchronisation interrompue.\" \"ERREUR\"\n    L88:     } else {\n>>> L89:         Log-Message \"Échec du git pull. Message d'exception: $($ErrorMessageFromException). Sortie de la commande: $($PullAttemptOutput.Trim()). Annulation de la synchronisation.\" \"ERREUR\"\n    L90:     }\n    L91:     # Tenter de restaurer le stash si appliqué",
            "Line": "        Log-Message \"Échec du git pull. Message d'exception: $($ErrorMessageFromException). Sortie de la commande: $($PullAttemptOutput.Trim()). Annulation de la synchronisation.\" \"ERREUR\"",
            "Type": "code",
            "Index": 88
          },
          {
            "Context": "    L49: if (-not $HeadBeforePull -or ($LASTEXITCODE -ne 0)) {\n    L50:     Log-Message \"Impossible de récupérer le SHA de HEAD avant pull. Annulation.\" \"ERREUR\"\n>>> L51:     # Tenter de restaurer le stash si appliqué\n    L52:     if ($StashApplied) {\n    L53:         Log-Message \"Tentative de restauration du stash avant de quitter...\"",
            "Line": "    # Tenter de restaurer le stash si appliqué",
            "Type": "comment",
            "Index": 50
          },
          {
            "Context": "    L50:     Log-Message \"Impossible de récupérer le SHA de HEAD avant pull. Annulation.\" \"ERREUR\"\n    L51:     # Tenter de restaurer le stash si appliqué\n>>> L52:     if ($StashApplied) {\n    L53:         Log-Message \"Tentative de restauration du stash avant de quitter...\"\n    L54:         Try { git stash pop -ErrorAction SilentlyContinue } Catch {}",
            "Line": "    if ($StashApplied) {",
            "Type": "control",
            "Index": 51
          },
          {
            "Context": "    L51:     # Tenter de restaurer le stash si appliqué\n    L52:     if ($StashApplied) {\n>>> L53:         Log-Message \"Tentative de restauration du stash avant de quitter...\"\n    L54:         Try { git stash pop -ErrorAction SilentlyContinue } Catch {}\n    L55:     }",
            "Line": "        Log-Message \"Tentative de restauration du stash avant de quitter...\"",
            "Type": "code",
            "Index": 52
          },
          {
            "Context": "    L52:     if ($StashApplied) {\n    L53:         Log-Message \"Tentative de restauration du stash avant de quitter...\"\n>>> L54:         Try { git stash pop -ErrorAction SilentlyContinue } Catch {}\n    L55:     }\n    L56:     Exit 1",
            "Line": "        Try { git stash pop -ErrorAction SilentlyContinue } Catch {}",
            "Type": "control",
            "Index": 53
          },
          {
            "Context": "    L97: }\n    L98: \n>>> L99: # Étape 3: Analyse des Nouveautés\n    L100: Log-Message \"Analyse des nouveautés...\"\n    L101: ",
            "Line": "# Étape 3: Analyse des Nouveautés",
            "Type": "comment",
            "Index": 98
          },
          {
            "Context": "    L98: \n    L99: # Étape 3: Analyse des Nouveautés\n>>> L100: Log-Message \"Analyse des nouveautés...\"\n    L101: \n    L102: $HeadAfterPull = git rev-parse HEAD",
            "Line": "Log-Message \"Analyse des nouveautés...\"",
            "Type": "code",
            "Index": 99
          },
          {
            "Context": "    L100: Log-Message \"Analyse des nouveautés...\"\n    L101: \n>>> L102: $HeadAfterPull = git rev-parse HEAD\n    L103: if (-not $HeadAfterPull -or ($LASTEXITCODE -ne 0)) {\n    L104:     Log-Message \"Impossible de récupérer le SHA de HEAD après pull. Annulation.\" \"ERREUR\"",
            "Line": "$HeadAfterPull = git rev-parse HEAD",
            "Type": "code",
            "Index": 101
          },
          {
            "Context": "    L101: \n    L102: $HeadAfterPull = git rev-parse HEAD\n>>> L103: if (-not $HeadAfterPull -or ($LASTEXITCODE -ne 0)) {\n    L104:     Log-Message \"Impossible de récupérer le SHA de HEAD après pull. Annulation.\" \"ERREUR\"\n    L105:     if ($StashApplied) { Try { git stash pop -ErrorAction SilentlyContinue } Catch {} }",
            "Line": "if (-not $HeadAfterPull -or ($LASTEXITCODE -ne 0)) {",
            "Type": "control",
            "Index": 102
          },
          {
            "Context": "    L102: $HeadAfterPull = git rev-parse HEAD\n    L103: if (-not $HeadAfterPull -or ($LASTEXITCODE -ne 0)) {\n>>> L104:     Log-Message \"Impossible de récupérer le SHA de HEAD après pull. Annulation.\" \"ERREUR\"\n    L105:     if ($StashApplied) { Try { git stash pop -ErrorAction SilentlyContinue } Catch {} }\n    L106:     Exit 1",
            "Line": "    Log-Message \"Impossible de récupérer le SHA de HEAD après pull. Annulation.\" \"ERREUR\"",
            "Type": "code",
            "Index": 103
          },
          {
            "Context": "    L103: if (-not $HeadAfterPull -or ($LASTEXITCODE -ne 0)) {\n    L104:     Log-Message \"Impossible de récupérer le SHA de HEAD après pull. Annulation.\" \"ERREUR\"\n>>> L105:     if ($StashApplied) { Try { git stash pop -ErrorAction SilentlyContinue } Catch {} }\n    L106:     Exit 1\n    L107: }",
            "Line": "    if ($StashApplied) { Try { git stash pop -ErrorAction SilentlyContinue } Catch {} }",
            "Type": "control",
            "Index": 104
          },
          {
            "Context": "    L23: if (-not $GitPath) {\n    L24:     Log-Message \"ERREUR: La commande 'git' n'a pas été trouvée. Veuillez vous assurer que Git est installé et dans le PATH.\" \"ERREUR\"\n>>> L25:     Exit 1\n    L26: }\n    L27: Log-Message \"Commande 'git' trouvée : $($GitPath.Source)\"",
            "Line": "    Exit 1",
            "Type": "code",
            "Index": 24
          },
          {
            "Context": "    L106:     Exit 1\n    L107: }\n>>> L108: Log-Message \"SHA de HEAD après pull: $HeadAfterPull\"\n    L109: \n    L110: $FilesChangedByPull = @()",
            "Line": "Log-Message \"SHA de HEAD après pull: $HeadAfterPull\"",
            "Type": "code",
            "Index": 107
          },
          {
            "Context": "    L108: Log-Message \"SHA de HEAD après pull: $HeadAfterPull\"\n    L109: \n>>> L110: $FilesChangedByPull = @()\n    L111: if ($HeadBeforePull -ne $HeadAfterPull) {\n    L112:     Log-Message \"HEAD a changé. Récupération des fichiers modifiés entre $HeadBeforePull et $HeadAfterPull...\"",
            "Line": "$FilesChangedByPull = @()",
            "Type": "code",
            "Index": 109
          },
          {
            "Context": "    L109: \n    L110: $FilesChangedByPull = @()\n>>> L111: if ($HeadBeforePull -ne $HeadAfterPull) {\n    L112:     Log-Message \"HEAD a changé. Récupération des fichiers modifiés entre $HeadBeforePull et $HeadAfterPull...\"\n    L113:     $FilesChangedByPull = git diff --name-only $HeadBeforePull $HeadAfterPull | ForEach-Object { $_.Replace('\\', '/') }",
            "Line": "if ($HeadBeforePull -ne $HeadAfterPull) {",
            "Type": "control",
            "Index": 110
          },
          {
            "Context": "    L110: $FilesChangedByPull = @()\n    L111: if ($HeadBeforePull -ne $HeadAfterPull) {\n>>> L112:     Log-Message \"HEAD a changé. Récupération des fichiers modifiés entre $HeadBeforePull et $HeadAfterPull...\"\n    L113:     $FilesChangedByPull = git diff --name-only $HeadBeforePull $HeadAfterPull | ForEach-Object { $_.Replace('\\', '/') }\n    L114:     if ($LASTEXITCODE -ne 0) {",
            "Line": "    Log-Message \"HEAD a changé. Récupération des fichiers modifiés entre $HeadBeforePull et $HeadAfterPull...\"",
            "Type": "code",
            "Index": 111
          },
          {
            "Context": "    L111: if ($HeadBeforePull -ne $HeadAfterPull) {\n    L112:     Log-Message \"HEAD a changé. Récupération des fichiers modifiés entre $HeadBeforePull et $HeadAfterPull...\"\n>>> L113:     $FilesChangedByPull = git diff --name-only $HeadBeforePull $HeadAfterPull | ForEach-Object { $_.Replace('\\', '/') }\n    L114:     if ($LASTEXITCODE -ne 0) {\n    L115:         Log-Message \"Erreur lors de la récupération des fichiers modifiés via git diff. Annulation.\" \"ERREUR\"",
            "Line": "    $FilesChangedByPull = git diff --name-only $HeadBeforePull $HeadAfterPull | ForEach-Object { $_.Replace('\\', '/') }",
            "Type": "code",
            "Index": 112
          },
          {
            "Context": "    L65:     $PullAttemptOutput = $GitPullResult | Out-String # Convertir en une seule chaîne\n    L66: \n>>> L67:     if ($LASTEXITCODE -ne 0) {\n    L68:         throw \"Git pull a échoué avec le code $LASTEXITCODE.\"\n    L69:     }",
            "Line": "    if ($LASTEXITCODE -ne 0) {",
            "Type": "control",
            "Index": 66
          },
          {
            "Context": "    L113:     $FilesChangedByPull = git diff --name-only $HeadBeforePull $HeadAfterPull | ForEach-Object { $_.Replace('\\', '/') }\n    L114:     if ($LASTEXITCODE -ne 0) {\n>>> L115:         Log-Message \"Erreur lors de la récupération des fichiers modifiés via git diff. Annulation.\" \"ERREUR\"\n    L116:         if ($StashApplied) { Try { git stash pop -ErrorAction SilentlyContinue } Catch {} }\n    L117:         Exit 1",
            "Line": "        Log-Message \"Erreur lors de la récupération des fichiers modifiés via git diff. Annulation.\" \"ERREUR\"",
            "Type": "code",
            "Index": 114
          },
          {
            "Context": "    L114:     if ($LASTEXITCODE -ne 0) {\n    L115:         Log-Message \"Erreur lors de la récupération des fichiers modifiés via git diff. Annulation.\" \"ERREUR\"\n>>> L116:         if ($StashApplied) { Try { git stash pop -ErrorAction SilentlyContinue } Catch {} }\n    L117:         Exit 1\n    L118:     }",
            "Line": "        if ($StashApplied) { Try { git stash pop -ErrorAction SilentlyContinue } Catch {} }",
            "Type": "control",
            "Index": 115
          },
          {
            "Context": "    L115:         Log-Message \"Erreur lors de la récupération des fichiers modifiés via git diff. Annulation.\" \"ERREUR\"\n    L116:         if ($StashApplied) { Try { git stash pop -ErrorAction SilentlyContinue } Catch {} }\n>>> L117:         Exit 1\n    L118:     }\n    L119:     if ($FilesChangedByPull.Count -gt 0) {",
            "Line": "        Exit 1",
            "Type": "code",
            "Index": 116
          },
          {
            "Context": "    L117:         Exit 1\n    L118:     }\n>>> L119:     if ($FilesChangedByPull.Count -gt 0) {\n    L120:         Log-Message \"Fichiers modifiés par le pull: $($FilesChangedByPull -join ', ')\"\n    L121:     } else {",
            "Line": "    if ($FilesChangedByPull.Count -gt 0) {",
            "Type": "control",
            "Index": 118
          },
          {
            "Context": "    L118:     }\n    L119:     if ($FilesChangedByPull.Count -gt 0) {\n>>> L120:         Log-Message \"Fichiers modifiés par le pull: $($FilesChangedByPull -join ', ')\"\n    L121:     } else {\n    L122:         Log-Message \"Git diff n'a retourné aucun fichier modifié, bien que HEAD ait changé (possible fusion fast-forward sans modifs directes).\"",
            "Line": "        Log-Message \"Fichiers modifiés par le pull: $($FilesChangedByPull -join ', ')\"",
            "Type": "code",
            "Index": 119
          },
          {
            "Context": "    L120:         Log-Message \"Fichiers modifiés par le pull: $($FilesChangedByPull -join ', ')\"\n    L121:     } else {\n>>> L122:         Log-Message \"Git diff n'a retourné aucun fichier modifié, bien que HEAD ait changé (possible fusion fast-forward sans modifs directes).\"\n    L123:     }\n    L124: } else {",
            "Line": "        Log-Message \"Git diff n'a retourné aucun fichier modifié, bien que HEAD ait changé (possible fusion fast-forward sans modifs directes).\"",
            "Type": "code",
            "Index": 121
          },
          {
            "Context": "    L123:     }\n    L124: } else {\n>>> L125:     Log-Message \"Aucune modification récupérée par git pull (HEAD n'a pas changé de $HeadBeforePull).\"\n    L126: }\n    L127: ",
            "Line": "    Log-Message \"Aucune modification récupérée par git pull (HEAD n'a pas changé de $HeadBeforePull).\"",
            "Type": "code",
            "Index": 124
          },
          {
            "Context": "    L126: }\n    L127: \n>>> L128: # Construction dynamique de la liste des fichiers éligibles à la synchronisation\n    L129: $AllEligibleFilesForSync = [System.Collections.Generic.List[string]]::new()\n    L130: ",
            "Line": "# Construction dynamique de la liste des fichiers éligibles à la synchronisation",
            "Type": "comment",
            "Index": 127
          },
          {
            "Context": "    L127: \n    L128: # Construction dynamique de la liste des fichiers éligibles à la synchronisation\n>>> L129: $AllEligibleFilesForSync = [System.Collections.Generic.List[string]]::new()\n    L130: \n    L131: # Fichiers JSON spécifiques",
            "Line": "$AllEligibleFilesForSync = [System.Collections.Generic.List[string]]::new()",
            "Type": "code",
            "Index": 128
          },
          {
            "Context": "    L129: $AllEligibleFilesForSync = [System.Collections.Generic.List[string]]::new()\n    L130: \n>>> L131: # Fichiers JSON spécifiques\n    L132: $SpecificJsonFiles = @(\n    L133:     \"roo-config/settings/settings.json\",",
            "Line": "# Fichiers JSON spécifiques",
            "Type": "comment",
            "Index": 130
          },
          {
            "Context": "    L130: \n    L131: # Fichiers JSON spécifiques\n>>> L132: $SpecificJsonFiles = @(\n    L133:     \"roo-config/settings/settings.json\",\n    L134:     \"roo-config/settings/servers.json\",",
            "Line": "$SpecificJsonFiles = @(",
            "Type": "code",
            "Index": 131
          },
          {
            "Context": "    L137:     \"roo-config/qwen3-profiles/qwen3-parameters.json\",\n    L138:     \"roo-modes/configs/modes.json\",\n>>> L139:     \"roo-modes/configs/new-roomodes.json\",\n    L140:     \"roo-modes/configs/standard-modes.json\",\n    L141:     \"roo-modes/configs/vscode-custom-modes.json\"",
            "Line": "    \"roo-modes/configs/new-roomodes.json\",",
            "Type": "code",
            "Index": 138
          },
          {
            "Context": "    L141:     \"roo-modes/configs/vscode-custom-modes.json\"\n    L142: )\n>>> L143: $SpecificJsonFiles | ForEach-Object { $AllEligibleFilesForSync.Add($_) }\n    L144: \n    L145: # .ps1 sous roo-config/ (récursif)",
            "Line": "$SpecificJsonFiles | ForEach-Object { $AllEligibleFilesForSync.Add($_) }",
            "Type": "code",
            "Index": 142
          },
          {
            "Context": "    L143: $SpecificJsonFiles | ForEach-Object { $AllEligibleFilesForSync.Add($_) }\n    L144: \n>>> L145: # .ps1 sous roo-config/ (récursif)\n    L146: $BaseDirForPs1 = Join-Path $RepoPath \"roo-config\"\n    L147: if(Test-Path $BaseDirForPs1) {",
            "Line": "# .ps1 sous roo-config/ (récursif)",
            "Type": "comment",
            "Index": 144
          },
          {
            "Context": "    L144: \n    L145: # .ps1 sous roo-config/ (récursif)\n>>> L146: $BaseDirForPs1 = Join-Path $RepoPath \"roo-config\"\n    L147: if(Test-Path $BaseDirForPs1) {\n    L148:     Get-ChildItem -Path $BaseDirForPs1 -Filter *.ps1 -Recurse -File | ForEach-Object {",
            "Line": "$BaseDirForPs1 = Join-Path $RepoPath \"roo-config\"",
            "Type": "code",
            "Index": 145
          },
          {
            "Context": "    L145: # .ps1 sous roo-config/ (récursif)\n    L146: $BaseDirForPs1 = Join-Path $RepoPath \"roo-config\"\n>>> L147: if(Test-Path $BaseDirForPs1) {\n    L148:     Get-ChildItem -Path $BaseDirForPs1 -Filter *.ps1 -Recurse -File | ForEach-Object {\n    L149:         $AllEligibleFilesForSync.Add((Resolve-Path -Path $_.FullName -Relative -BasePath $RepoPath).TrimStart(\".\\\").Replace('\\', '/'))",
            "Line": "if(Test-Path $BaseDirForPs1) {",
            "Type": "control",
            "Index": 146
          },
          {
            "Context": "    L146: $BaseDirForPs1 = Join-Path $RepoPath \"roo-config\"\n    L147: if(Test-Path $BaseDirForPs1) {\n>>> L148:     Get-ChildItem -Path $BaseDirForPs1 -Filter *.ps1 -Recurse -File | ForEach-Object {\n    L149:         $AllEligibleFilesForSync.Add((Resolve-Path -Path $_.FullName -Relative -BasePath $RepoPath).TrimStart(\".\\\").Replace('\\', '/'))\n    L150:     }",
            "Line": "    Get-ChildItem -Path $BaseDirForPs1 -Filter *.ps1 -Recurse -File | ForEach-Object {",
            "Type": "code",
            "Index": 147
          },
          {
            "Context": "    L147: if(Test-Path $BaseDirForPs1) {\n    L148:     Get-ChildItem -Path $BaseDirForPs1 -Filter *.ps1 -Recurse -File | ForEach-Object {\n>>> L149:         $AllEligibleFilesForSync.Add((Resolve-Path -Path $_.FullName -Relative -BasePath $RepoPath).TrimStart(\".\\\").Replace('\\', '/'))\n    L150:     }\n    L151: }",
            "Line": "        $AllEligibleFilesForSync.Add((Resolve-Path -Path $_.FullName -Relative -BasePath $RepoPath).TrimStart(\".\\\").Replace('\\', '/'))",
            "Type": "code",
            "Index": 148
          },
          {
            "Context": "    L151: }\n    L152: \n>>> L153: # .json sous roo-modes/n5/configs/ (non récursif)\n    L154: $BaseDirForN5Json = Join-Path $RepoPath \"roo-modes/n5/configs\"\n    L155: if(Test-Path $BaseDirForN5Json) {",
            "Line": "# .json sous roo-modes/n5/configs/ (non récursif)",
            "Type": "comment",
            "Index": 152
          },
          {
            "Context": "    L152: \n    L153: # .json sous roo-modes/n5/configs/ (non récursif)\n>>> L154: $BaseDirForN5Json = Join-Path $RepoPath \"roo-modes/n5/configs\"\n    L155: if(Test-Path $BaseDirForN5Json) {\n    L156:     Get-ChildItem -Path $BaseDirForN5Json -Filter *.json -File | ForEach-Object {",
            "Line": "$BaseDirForN5Json = Join-Path $RepoPath \"roo-modes/n5/configs\"",
            "Type": "code",
            "Index": 153
          },
          {
            "Context": "    L153: # .json sous roo-modes/n5/configs/ (non récursif)\n    L154: $BaseDirForN5Json = Join-Path $RepoPath \"roo-modes/n5/configs\"\n>>> L155: if(Test-Path $BaseDirForN5Json) {\n    L156:     Get-ChildItem -Path $BaseDirForN5Json -Filter *.json -File | ForEach-Object {\n    L157:         $AllEligibleFilesForSync.Add((Resolve-Path -Path $_.FullName -Relative -BasePath $RepoPath).TrimStart(\".\\\").Replace('\\', '/'))",
            "Line": "if(Test-Path $BaseDirForN5Json) {",
            "Type": "control",
            "Index": 154
          },
          {
            "Context": "    L154: $BaseDirForN5Json = Join-Path $RepoPath \"roo-modes/n5/configs\"\n    L155: if(Test-Path $BaseDirForN5Json) {\n>>> L156:     Get-ChildItem -Path $BaseDirForN5Json -Filter *.json -File | ForEach-Object {\n    L157:         $AllEligibleFilesForSync.Add((Resolve-Path -Path $_.FullName -Relative -BasePath $RepoPath).TrimStart(\".\\\").Replace('\\', '/'))\n    L158:     }",
            "Line": "    Get-ChildItem -Path $BaseDirForN5Json -Filter *.json -File | ForEach-Object {",
            "Type": "code",
            "Index": 155
          },
          {
            "Context": "    L147: if(Test-Path $BaseDirForPs1) {\n    L148:     Get-ChildItem -Path $BaseDirForPs1 -Filter *.ps1 -Recurse -File | ForEach-Object {\n>>> L149:         $AllEligibleFilesForSync.Add((Resolve-Path -Path $_.FullName -Relative -BasePath $RepoPath).TrimStart(\".\\\").Replace('\\', '/'))\n    L150:     }\n    L151: }",
            "Line": "        $AllEligibleFilesForSync.Add((Resolve-Path -Path $_.FullName -Relative -BasePath $RepoPath).TrimStart(\".\\\").Replace('\\', '/'))",
            "Type": "code",
            "Index": 148
          },
          {
            "Context": "    L40:         Log-Message \"Échec du stash. Annulation de la synchronisation. Message : $($_.Exception.Message)\" \"ERREUR\"\n    L41:         Exit 1 # Sortie avec erreur\n>>> L42:     }\n    L43: } else {\n    L44:     $StashApplied = $false",
            "Line": "    }",
            "Type": "structure",
            "Index": 41
          },
          {
            "Context": "    L159: }\n    L160: \n>>> L161: # .md sous roo-config/ (récursif)\n    L162: $BaseDirForConfigMd = Join-Path $RepoPath \"roo-config\"\n    L163: if(Test-Path $BaseDirForConfigMd) {",
            "Line": "# .md sous roo-config/ (récursif)",
            "Type": "comment",
            "Index": 160
          },
          {
            "Context": "    L160: \n    L161: # .md sous roo-config/ (récursif)\n>>> L162: $BaseDirForConfigMd = Join-Path $RepoPath \"roo-config\"\n    L163: if(Test-Path $BaseDirForConfigMd) {\n    L164:     Get-ChildItem -Path $BaseDirForConfigMd -Filter *.md -Recurse -File | ForEach-Object {",
            "Line": "$BaseDirForConfigMd = Join-Path $RepoPath \"roo-config\"",
            "Type": "code",
            "Index": 161
          },
          {
            "Context": "    L161: # .md sous roo-config/ (récursif)\n    L162: $BaseDirForConfigMd = Join-Path $RepoPath \"roo-config\"\n>>> L163: if(Test-Path $BaseDirForConfigMd) {\n    L164:     Get-ChildItem -Path $BaseDirForConfigMd -Filter *.md -Recurse -File | ForEach-Object {\n    L165:         $AllEligibleFilesForSync.Add((Resolve-Path -Path $_.FullName -Relative -BasePath $RepoPath).TrimStart(\".\\\").Replace('\\', '/'))",
            "Line": "if(Test-Path $BaseDirForConfigMd) {",
            "Type": "control",
            "Index": 162
          },
          {
            "Context": "    L162: $BaseDirForConfigMd = Join-Path $RepoPath \"roo-config\"\n    L163: if(Test-Path $BaseDirForConfigMd) {\n>>> L164:     Get-ChildItem -Path $BaseDirForConfigMd -Filter *.md -Recurse -File | ForEach-Object {\n    L165:         $AllEligibleFilesForSync.Add((Resolve-Path -Path $_.FullName -Relative -BasePath $RepoPath).TrimStart(\".\\\").Replace('\\', '/'))\n    L166:     }",
            "Line": "    Get-ChildItem -Path $BaseDirForConfigMd -Filter *.md -Recurse -File | ForEach-Object {",
            "Type": "code",
            "Index": 163
          },
          {
            "Context": "    L147: if(Test-Path $BaseDirForPs1) {\n    L148:     Get-ChildItem -Path $BaseDirForPs1 -Filter *.ps1 -Recurse -File | ForEach-Object {\n>>> L149:         $AllEligibleFilesForSync.Add((Resolve-Path -Path $_.FullName -Relative -BasePath $RepoPath).TrimStart(\".\\\").Replace('\\', '/'))\n    L150:     }\n    L151: }",
            "Line": "        $AllEligibleFilesForSync.Add((Resolve-Path -Path $_.FullName -Relative -BasePath $RepoPath).TrimStart(\".\\\").Replace('\\', '/'))",
            "Type": "code",
            "Index": 148
          },
          {
            "Context": "    L40:         Log-Message \"Échec du stash. Annulation de la synchronisation. Message : $($_.Exception.Message)\" \"ERREUR\"\n    L41:         Exit 1 # Sortie avec erreur\n>>> L42:     }\n    L43: } else {\n    L44:     $StashApplied = $false",
            "Line": "    }",
            "Type": "structure",
            "Index": 41
          },
          {
            "Context": "    L8: If (-not (Test-Path $ConflictLogDir)) {\n    L9:     New-Item -ItemType Directory -Path $ConflictLogDir | Out-Null\n>>> L10: }\n    L11: \n    L12: function Log-Message {",
            "Line": "}",
            "Type": "structure",
            "Index": 9
          },
          {
            "Context": "    L167: }\n    L168: \n>>> L169: # .md sous roo-modes/ (récursif)\n    L170: $BaseDirForModesMd = Join-Path $RepoPath \"roo-modes\"\n    L171: if(Test-Path $BaseDirForModesMd) {",
            "Line": "# .md sous roo-modes/ (récursif)",
            "Type": "comment",
            "Index": 168
          },
          {
            "Context": "    L168: \n    L169: # .md sous roo-modes/ (récursif)\n>>> L170: $BaseDirForModesMd = Join-Path $RepoPath \"roo-modes\"\n    L171: if(Test-Path $BaseDirForModesMd) {\n    L172:     Get-ChildItem -Path $BaseDirForModesMd -Filter *.md -Recurse -File | ForEach-Object {",
            "Line": "$BaseDirForModesMd = Join-Path $RepoPath \"roo-modes\"",
            "Type": "code",
            "Index": 169
          },
          {
            "Context": "    L169: # .md sous roo-modes/ (récursif)\n    L170: $BaseDirForModesMd = Join-Path $RepoPath \"roo-modes\"\n>>> L171: if(Test-Path $BaseDirForModesMd) {\n    L172:     Get-ChildItem -Path $BaseDirForModesMd -Filter *.md -Recurse -File | ForEach-Object {\n    L173:         $AllEligibleFilesForSync.Add((Resolve-Path -Path $_.FullName -Relative -BasePath $RepoPath).TrimStart(\".\\\").Replace('\\', '/'))",
            "Line": "if(Test-Path $BaseDirForModesMd) {",
            "Type": "control",
            "Index": 170
          },
          {
            "Context": "    L170: $BaseDirForModesMd = Join-Path $RepoPath \"roo-modes\"\n    L171: if(Test-Path $BaseDirForModesMd) {\n>>> L172:     Get-ChildItem -Path $BaseDirForModesMd -Filter *.md -Recurse -File | ForEach-Object {\n    L173:         $AllEligibleFilesForSync.Add((Resolve-Path -Path $_.FullName -Relative -BasePath $RepoPath).TrimStart(\".\\\").Replace('\\', '/'))\n    L174:     }",
            "Line": "    Get-ChildItem -Path $BaseDirForModesMd -Filter *.md -Recurse -File | ForEach-Object {",
            "Type": "code",
            "Index": 171
          },
          {
            "Context": "    L147: if(Test-Path $BaseDirForPs1) {\n    L148:     Get-ChildItem -Path $BaseDirForPs1 -Filter *.ps1 -Recurse -File | ForEach-Object {\n>>> L149:         $AllEligibleFilesForSync.Add((Resolve-Path -Path $_.FullName -Relative -BasePath $RepoPath).TrimStart(\".\\\").Replace('\\', '/'))\n    L150:     }\n    L151: }",
            "Line": "        $AllEligibleFilesForSync.Add((Resolve-Path -Path $_.FullName -Relative -BasePath $RepoPath).TrimStart(\".\\\").Replace('\\', '/'))",
            "Type": "code",
            "Index": 148
          },
          {
            "Context": "    L40:         Log-Message \"Échec du stash. Annulation de la synchronisation. Message : $($_.Exception.Message)\" \"ERREUR\"\n    L41:         Exit 1 # Sortie avec erreur\n>>> L42:     }\n    L43: } else {\n    L44:     $StashApplied = $false",
            "Line": "    }",
            "Type": "structure",
            "Index": 41
          },
          {
            "Context": "    L8: If (-not (Test-Path $ConflictLogDir)) {\n    L9:     New-Item -ItemType Directory -Path $ConflictLogDir | Out-Null\n>>> L10: }\n    L11: \n    L12: function Log-Message {",
            "Line": "}",
            "Type": "structure",
            "Index": 9
          },
          {
            "Context": "    L175: }\n    L176: \n>>> L177: $UniqueEligibleFiles = $AllEligibleFilesForSync | Select-Object -Unique\n    L178: Log-Message \"Nombre total de fichiers éligibles uniques pour la synchronisation : $($UniqueEligibleFiles.Count)\"\n    L179: ",
            "Line": "$UniqueEligibleFiles = $AllEligibleFilesForSync | Select-Object -Unique",
            "Type": "code",
            "Index": 176
          },
          {
            "Context": "    L176: \n    L177: $UniqueEligibleFiles = $AllEligibleFilesForSync | Select-Object -Unique\n>>> L178: Log-Message \"Nombre total de fichiers éligibles uniques pour la synchronisation : $($UniqueEligibleFiles.Count)\"\n    L179: \n    L180: # Étape 4: Exécution des Opérations de Synchronisation",
            "Line": "Log-Message \"Nombre total de fichiers éligibles uniques pour la synchronisation : $($UniqueEligibleFiles.Count)\"",
            "Type": "code",
            "Index": 177
          },
          {
            "Context": "    L178: Log-Message \"Nombre total de fichiers éligibles uniques pour la synchronisation : $($UniqueEligibleFiles.Count)\"\n    L179: \n>>> L180: # Étape 4: Exécution des Opérations de Synchronisation\n    L181: Log-Message \"Exécution des opérations de synchronisation...\"\n    L182: $FilesActuallySynced = [System.Collections.Generic.List[string]]::new()",
            "Line": "# Étape 4: Exécution des Opérations de Synchronisation",
            "Type": "comment",
            "Index": 179
          },
          {
            "Context": "    L179: \n    L180: # Étape 4: Exécution des Opérations de Synchronisation\n>>> L181: Log-Message \"Exécution des opérations de synchronisation...\"\n    L182: $FilesActuallySynced = [System.Collections.Generic.List[string]]::new()\n    L183: ",
            "Line": "Log-Message \"Exécution des opérations de synchronisation...\"",
            "Type": "code",
            "Index": 180
          },
          {
            "Context": "    L180: # Étape 4: Exécution des Opérations de Synchronisation\n    L181: Log-Message \"Exécution des opérations de synchronisation...\"\n>>> L182: $FilesActuallySynced = [System.Collections.Generic.List[string]]::new()\n    L183: \n    L184: if ($FilesChangedByPull.Count -eq 0 -and $HeadBeforePull -eq $HeadAfterPull) {",
            "Line": "$FilesActuallySynced = [System.Collections.Generic.List[string]]::new()",
            "Type": "code",
            "Index": 181
          },
          {
            "Context": "    L182: $FilesActuallySynced = [System.Collections.Generic.List[string]]::new()\n    L183: \n>>> L184: if ($FilesChangedByPull.Count -eq 0 -and $HeadBeforePull -eq $HeadAfterPull) {\n    L185:     Log-Message \"Aucun fichier n'a été modifié par le pull et HEAD n'a pas changé. Aucune synchronisation de fichier n'est nécessaire.\"\n    L186: } else {",
            "Line": "if ($FilesChangedByPull.Count -eq 0 -and $HeadBeforePull -eq $HeadAfterPull) {",
            "Type": "control",
            "Index": 183
          },
          {
            "Context": "    L183: \n    L184: if ($FilesChangedByPull.Count -eq 0 -and $HeadBeforePull -eq $HeadAfterPull) {\n>>> L185:     Log-Message \"Aucun fichier n'a été modifié par le pull et HEAD n'a pas changé. Aucune synchronisation de fichier n'est nécessaire.\"\n    L186: } else {\n    L187:     # Si HEAD a changé mais FilesChangedByPull est vide (ex: fast-forward sans modifs directes),",
            "Line": "    Log-Message \"Aucun fichier n'a été modifié par le pull et HEAD n'a pas changé. Aucune synchronisation de fichier n'est nécessaire.\"",
            "Type": "code",
            "Index": 184
          },
          {
            "Context": "    L185:     Log-Message \"Aucun fichier n'a été modifié par le pull et HEAD n'a pas changé. Aucune synchronisation de fichier n'est nécessaire.\"\n    L186: } else {\n>>> L187:     # Si HEAD a changé mais FilesChangedByPull est vide (ex: fast-forward sans modifs directes),\n    L188:     # ou si des fichiers ont été modifiés, on procède.\n    L189:     # On ne synchronise que les fichiers qui sont à la fois modifiés ET éligibles.",
            "Line": "    # Si HEAD a changé mais FilesChangedByPull est vide (ex: fast-forward sans modifs directes),",
            "Type": "comment",
            "Index": 186
          },
          {
            "Context": "    L186: } else {\n    L187:     # Si HEAD a changé mais FilesChangedByPull est vide (ex: fast-forward sans modifs directes),\n>>> L188:     # ou si des fichiers ont été modifiés, on procède.\n    L189:     # On ne synchronise que les fichiers qui sont à la fois modifiés ET éligibles.\n    L190:     $FilesToConsiderForSync = $FilesChangedByPull | Where-Object { $UniqueEligibleFiles -contains $_ } | Select-Object -Unique",
            "Line": "    # ou si des fichiers ont été modifiés, on procède.",
            "Type": "comment",
            "Index": 187
          },
          {
            "Context": "    L187:     # Si HEAD a changé mais FilesChangedByPull est vide (ex: fast-forward sans modifs directes),\n    L188:     # ou si des fichiers ont été modifiés, on procède.\n>>> L189:     # On ne synchronise que les fichiers qui sont à la fois modifiés ET éligibles.\n    L190:     $FilesToConsiderForSync = $FilesChangedByPull | Where-Object { $UniqueEligibleFiles -contains $_ } | Select-Object -Unique\n    L191:     ",
            "Line": "    # On ne synchronise que les fichiers qui sont à la fois modifiés ET éligibles.",
            "Type": "comment",
            "Index": 188
          },
          {
            "Context": "    L188:     # ou si des fichiers ont été modifiés, on procède.\n    L189:     # On ne synchronise que les fichiers qui sont à la fois modifiés ET éligibles.\n>>> L190:     $FilesToConsiderForSync = $FilesChangedByPull | Where-Object { $UniqueEligibleFiles -contains $_ } | Select-Object -Unique\n    L191:     \n    L192:     if ($FilesToConsiderForSync.Count -eq 0) {",
            "Line": "    $FilesToConsiderForSync = $FilesChangedByPull | Where-Object { $UniqueEligibleFiles -contains $_ } | Select-Object -Unique",
            "Type": "code",
            "Index": 189
          },
          {
            "Context": "    L73: } Catch {\n    L74:     $ErrorMessageFromException = $_.Exception.Message\n>>> L75:     \n    L76:     if ($PullAttemptOutput -like \"*merge conflict*\") {\n    L77:         Log-Message \"Conflit de fusion détecté (basé sur la sortie de git pull). Annulation de la fusion...\" \"ALERTE\"",
            "Line": "    ",
            "Type": "empty",
            "Index": 74
          },
          {
            "Context": "    L190:     $FilesToConsiderForSync = $FilesChangedByPull | Where-Object { $UniqueEligibleFiles -contains $_ } | Select-Object -Unique\n    L191:     \n>>> L192:     if ($FilesToConsiderForSync.Count -eq 0) {\n    L193:         if ($FilesChangedByPull.Count -gt 0) {\n    L194:              Log-Message \"Les fichiers modifiés par le pull ($($FilesChangedByPull -join ', ')) ne sont pas dans la liste des fichiers éligibles. Aucune synchronisation de fichier.\"",
            "Line": "    if ($FilesToConsiderForSync.Count -eq 0) {",
            "Type": "control",
            "Index": 191
          },
          {
            "Context": "    L191:     \n    L192:     if ($FilesToConsiderForSync.Count -eq 0) {\n>>> L193:         if ($FilesChangedByPull.Count -gt 0) {\n    L194:              Log-Message \"Les fichiers modifiés par le pull ($($FilesChangedByPull -join ', ')) ne sont pas dans la liste des fichiers éligibles. Aucune synchronisation de fichier.\"\n    L195:         } else {",
            "Line": "        if ($FilesChangedByPull.Count -gt 0) {",
            "Type": "control",
            "Index": 192
          },
          {
            "Context": "    L192:     if ($FilesToConsiderForSync.Count -eq 0) {\n    L193:         if ($FilesChangedByPull.Count -gt 0) {\n>>> L194:              Log-Message \"Les fichiers modifiés par le pull ($($FilesChangedByPull -join ', ')) ne sont pas dans la liste des fichiers éligibles. Aucune synchronisation de fichier.\"\n    L195:         } else {\n    L196:              Log-Message \"Aucun fichier modifié par le pull n'est éligible pour la synchronisation.\"",
            "Line": "             Log-Message \"Les fichiers modifiés par le pull ($($FilesChangedByPull -join ', ')) ne sont pas dans la liste des fichiers éligibles. Aucune synchronisation de fichier.\"",
            "Type": "code",
            "Index": 193
          },
          {
            "Context": "    L194:              Log-Message \"Les fichiers modifiés par le pull ($($FilesChangedByPull -join ', ')) ne sont pas dans la liste des fichiers éligibles. Aucune synchronisation de fichier.\"\n    L195:         } else {\n>>> L196:              Log-Message \"Aucun fichier modifié par le pull n'est éligible pour la synchronisation.\"\n    L197:         }\n    L198:     } else {",
            "Line": "             Log-Message \"Aucun fichier modifié par le pull n'est éligible pour la synchronisation.\"",
            "Type": "code",
            "Index": 195
          },
          {
            "Context": "    L197:         }\n    L198:     } else {\n>>> L199:         Log-Message \"Fichiers à synchroniser (modifiés par pull ET éligibles) ($($FilesToConsiderForSync.Count)): $($FilesToConsiderForSync -join ', ')\"\n    L200:         foreach ($FileRelativePath in $FilesToConsiderForSync) {\n    L201:             $SourceFile = Join-Path $RepoPath $FileRelativePath",
            "Line": "        Log-Message \"Fichiers à synchroniser (modifiés par pull ET éligibles) ($($FilesToConsiderForSync.Count)): $($FilesToConsiderForSync -join ', ')\"",
            "Type": "code",
            "Index": 198
          },
          {
            "Context": "    L198:     } else {\n    L199:         Log-Message \"Fichiers à synchroniser (modifiés par pull ET éligibles) ($($FilesToConsiderForSync.Count)): $($FilesToConsiderForSync -join ', ')\"\n>>> L200:         foreach ($FileRelativePath in $FilesToConsiderForSync) {\n    L201:             $SourceFile = Join-Path $RepoPath $FileRelativePath\n    L202:             $DestinationFile = Join-Path $RepoPath $FileRelativePath",
            "Line": "        foreach ($FileRelativePath in $FilesToConsiderForSync) {",
            "Type": "control",
            "Index": 199
          },
          {
            "Context": "    L199:         Log-Message \"Fichiers à synchroniser (modifiés par pull ET éligibles) ($($FilesToConsiderForSync.Count)): $($FilesToConsiderForSync -join ', ')\"\n    L200:         foreach ($FileRelativePath in $FilesToConsiderForSync) {\n>>> L201:             $SourceFile = Join-Path $RepoPath $FileRelativePath\n    L202:             $DestinationFile = Join-Path $RepoPath $FileRelativePath\n    L203: ",
            "Line": "            $SourceFile = Join-Path $RepoPath $FileRelativePath",
            "Type": "code",
            "Index": 200
          },
          {
            "Context": "    L200:         foreach ($FileRelativePath in $FilesToConsiderForSync) {\n    L201:             $SourceFile = Join-Path $RepoPath $FileRelativePath\n>>> L202:             $DestinationFile = Join-Path $RepoPath $FileRelativePath\n    L203: \n    L204:             if (Test-Path $SourceFile) {",
            "Line": "            $DestinationFile = Join-Path $RepoPath $FileRelativePath",
            "Type": "code",
            "Index": 201
          },
          {
            "Context": "    L202:             $DestinationFile = Join-Path $RepoPath $FileRelativePath\n    L203: \n>>> L204:             if (Test-Path $SourceFile) {\n    L205:                 Try {\n    L206:                     Copy-Item -Path $SourceFile -Destination $DestinationFile -Force -ErrorAction Stop",
            "Line": "            if (Test-Path $SourceFile) {",
            "Type": "control",
            "Index": 203
          },
          {
            "Context": "    L203: \n    L204:             if (Test-Path $SourceFile) {\n>>> L205:                 Try {\n    L206:                     Copy-Item -Path $SourceFile -Destination $DestinationFile -Force -ErrorAction Stop\n    L207:                     Log-Message \"Synchronisé : $($FileRelativePath)\"",
            "Line": "                Try {",
            "Type": "control",
            "Index": 204
          },
          {
            "Context": "    L204:             if (Test-Path $SourceFile) {\n    L205:                 Try {\n>>> L206:                     Copy-Item -Path $SourceFile -Destination $DestinationFile -Force -ErrorAction Stop\n    L207:                     Log-Message \"Synchronisé : $($FileRelativePath)\"\n    L208:                     $FilesActuallySynced.Add($FileRelativePath)",
            "Line": "                    Copy-Item -Path $SourceFile -Destination $DestinationFile -Force -ErrorAction Stop",
            "Type": "code",
            "Index": 205
          },
          {
            "Context": "    L205:                 Try {\n    L206:                     Copy-Item -Path $SourceFile -Destination $DestinationFile -Force -ErrorAction Stop\n>>> L207:                     Log-Message \"Synchronisé : $($FileRelativePath)\"\n    L208:                     $FilesActuallySynced.Add($FileRelativePath)\n    L209:                 } Catch {",
            "Line": "                    Log-Message \"Synchronisé : $($FileRelativePath)\"",
            "Type": "code",
            "Index": 206
          },
          {
            "Context": "    L206:                     Copy-Item -Path $SourceFile -Destination $DestinationFile -Force -ErrorAction Stop\n    L207:                     Log-Message \"Synchronisé : $($FileRelativePath)\"\n>>> L208:                     $FilesActuallySynced.Add($FileRelativePath)\n    L209:                 } Catch {\n    L210:                     Log-Message \"Échec de la synchronisation de $($FileRelativePath). Message : $($_.Exception.Message)\" \"ERREUR\"",
            "Line": "                    $FilesActuallySynced.Add($FileRelativePath)",
            "Type": "code",
            "Index": 207
          },
          {
            "Context": "    L207:                     Log-Message \"Synchronisé : $($FileRelativePath)\"\n    L208:                     $FilesActuallySynced.Add($FileRelativePath)\n>>> L209:                 } Catch {\n    L210:                     Log-Message \"Échec de la synchronisation de $($FileRelativePath). Message : $($_.Exception.Message)\" \"ERREUR\"\n    L211:                     if ($StashApplied) { Try { git stash pop -ErrorAction SilentlyContinue } Catch {} }",
            "Line": "                } Catch {",
            "Type": "code",
            "Index": 208
          },
          {
            "Context": "    L208:                     $FilesActuallySynced.Add($FileRelativePath)\n    L209:                 } Catch {\n>>> L210:                     Log-Message \"Échec de la synchronisation de $($FileRelativePath). Message : $($_.Exception.Message)\" \"ERREUR\"\n    L211:                     if ($StashApplied) { Try { git stash pop -ErrorAction SilentlyContinue } Catch {} }\n    L212:                     Exit 1",
            "Line": "                    Log-Message \"Échec de la synchronisation de $($FileRelativePath). Message : $($_.Exception.Message)\" \"ERREUR\"",
            "Type": "code",
            "Index": 209
          },
          {
            "Context": "    L209:                 } Catch {\n    L210:                     Log-Message \"Échec de la synchronisation de $($FileRelativePath). Message : $($_.Exception.Message)\" \"ERREUR\"\n>>> L211:                     if ($StashApplied) { Try { git stash pop -ErrorAction SilentlyContinue } Catch {} }\n    L212:                     Exit 1\n    L213:                 }",
            "Line": "                    if ($StashApplied) { Try { git stash pop -ErrorAction SilentlyContinue } Catch {} }",
            "Type": "control",
            "Index": 210
          },
          {
            "Context": "    L210:                     Log-Message \"Échec de la synchronisation de $($FileRelativePath). Message : $($_.Exception.Message)\" \"ERREUR\"\n    L211:                     if ($StashApplied) { Try { git stash pop -ErrorAction SilentlyContinue } Catch {} }\n>>> L212:                     Exit 1\n    L213:                 }\n    L214:             } else {",
            "Line": "                    Exit 1",
            "Type": "code",
            "Index": 211
          },
          {
            "Context": "    L212:                     Exit 1\n    L213:                 }\n>>> L214:             } else {\n    L215:                 Log-Message \"Le fichier source $($FileRelativePath) (listé par git diff) n'existe pas dans le dépôt après pull. Ignoré.\" \"ALERTE\"\n    L216:             }",
            "Line": "            } else {",
            "Type": "code",
            "Index": 213
          },
          {
            "Context": "    L213:                 }\n    L214:             } else {\n>>> L215:                 Log-Message \"Le fichier source $($FileRelativePath) (listé par git diff) n'existe pas dans le dépôt après pull. Ignoré.\" \"ALERTE\"\n    L216:             }\n    L217:         }",
            "Line": "                Log-Message \"Le fichier source $($FileRelativePath) (listé par git diff) n'existe pas dans le dépôt après pull. Ignoré.\" \"ALERTE\"",
            "Type": "code",
            "Index": 214
          },
          {
            "Context": "    L40:         Log-Message \"Échec du stash. Annulation de la synchronisation. Message : $($_.Exception.Message)\" \"ERREUR\"\n    L41:         Exit 1 # Sortie avec erreur\n>>> L42:     }\n    L43: } else {\n    L44:     $StashApplied = $false",
            "Line": "    }",
            "Type": "structure",
            "Index": 41
          },
          {
            "Context": "    L8: If (-not (Test-Path $ConflictLogDir)) {\n    L9:     New-Item -ItemType Directory -Path $ConflictLogDir | Out-Null\n>>> L10: }\n    L11: \n    L12: function Log-Message {",
            "Line": "}",
            "Type": "structure",
            "Index": 9
          },
          {
            "Context": "    L219: }\n    L220: \n>>> L221: # Étape 5: Vérification Post-Synchronisation\n    L222: Log-Message \"Vérification post-synchronisation...\"\n    L223: ",
            "Line": "# Étape 5: Vérification Post-Synchronisation",
            "Type": "comment",
            "Index": 220
          },
          {
            "Context": "    L220: \n    L221: # Étape 5: Vérification Post-Synchronisation\n>>> L222: Log-Message \"Vérification post-synchronisation...\"\n    L223: \n    L224: # 5.1 Vérification de l'intégrité des fichiers JSON synchronisés",
            "Line": "Log-Message \"Vérification post-synchronisation...\"",
            "Type": "code",
            "Index": 221
          },
          {
            "Context": "    L222: Log-Message \"Vérification post-synchronisation...\"\n    L223: \n>>> L224: # 5.1 Vérification de l'intégrité des fichiers JSON synchronisés\n    L225: $JsonFilesToValidate = $FilesActuallySynced | Where-Object { $_ -like \"*.json\" } | Select-Object -Unique\n    L226: ",
            "Line": "# 5.1 Vérification de l'intégrité des fichiers JSON synchronisés",
            "Type": "comment",
            "Index": 223
          },
          {
            "Context": "    L223: \n    L224: # 5.1 Vérification de l'intégrité des fichiers JSON synchronisés\n>>> L225: $JsonFilesToValidate = $FilesActuallySynced | Where-Object { $_ -like \"*.json\" } | Select-Object -Unique\n    L226: \n    L227: if ($JsonFilesToValidate.Count -eq 0) {",
            "Line": "$JsonFilesToValidate = $FilesActuallySynced | Where-Object { $_ -like \"*.json\" } | Select-Object -Unique",
            "Type": "code",
            "Index": 224
          },
          {
            "Context": "    L1: # Fichier : d:/roo-extensions/sync_roo_environment.ps1\n>>> L2: \n    L3: $RepoPath = \"d:/roo-extensions\"\n    L4: $LogFile = \"d:/roo-extensions/sync_log.txt\"",
            "Line": "",
            "Type": "empty",
            "Index": 1
          },
          {
            "Context": "    L226: \n    L227: if ($JsonFilesToValidate.Count -eq 0) {\n>>> L228:     Log-Message \"Aucun fichier JSON n'a été synchronisé, pas de validation JSON nécessaire.\"\n    L229: } else {\n    L230:     Log-Message \"Fichiers JSON synchronisés à valider ($($JsonFilesToValidate.Count)): $($JsonFilesToValidate -join ', ')\"",
            "Line": "    Log-Message \"Aucun fichier JSON n'a été synchronisé, pas de validation JSON nécessaire.\"",
            "Type": "code",
            "Index": 227
          },
          {
            "Context": "    L41:         Exit 1 # Sortie avec erreur\n    L42:     }\n>>> L43: } else {\n    L44:     $StashApplied = $false\n    L45: }",
            "Line": "} else {",
            "Type": "code",
            "Index": 42
          },
          {
            "Context": "    L228:     Log-Message \"Aucun fichier JSON n'a été synchronisé, pas de validation JSON nécessaire.\"\n    L229: } else {\n>>> L230:     Log-Message \"Fichiers JSON synchronisés à valider ($($JsonFilesToValidate.Count)): $($JsonFilesToValidate -join ', ')\"\n    L231:     foreach ($JsonFileRelativePath in $JsonFilesToValidate) {\n    L232:         $FullPath = Join-Path $RepoPath $JsonFileRelativePath",
            "Line": "    Log-Message \"Fichiers JSON synchronisés à valider ($($JsonFilesToValidate.Count)): $($JsonFilesToValidate -join ', ')\"",
            "Type": "code",
            "Index": 229
          },
          {
            "Context": "    L229: } else {\n    L230:     Log-Message \"Fichiers JSON synchronisés à valider ($($JsonFilesToValidate.Count)): $($JsonFilesToValidate -join ', ')\"\n>>> L231:     foreach ($JsonFileRelativePath in $JsonFilesToValidate) {\n    L232:         $FullPath = Join-Path $RepoPath $JsonFileRelativePath\n    L233:         Try {",
            "Line": "    foreach ($JsonFileRelativePath in $JsonFilesToValidate) {",
            "Type": "control",
            "Index": 230
          },
          {
            "Context": "    L230:     Log-Message \"Fichiers JSON synchronisés à valider ($($JsonFilesToValidate.Count)): $($JsonFilesToValidate -join ', ')\"\n    L231:     foreach ($JsonFileRelativePath in $JsonFilesToValidate) {\n>>> L232:         $FullPath = Join-Path $RepoPath $JsonFileRelativePath\n    L233:         Try {\n    L234:             Get-Content -Raw $FullPath | ConvertFrom-Json -ErrorAction Stop | Out-Null",
            "Line": "        $FullPath = Join-Path $RepoPath $JsonFileRelativePath",
            "Type": "code",
            "Index": 231
          },
          {
            "Context": "    L231:     foreach ($JsonFileRelativePath in $JsonFilesToValidate) {\n    L232:         $FullPath = Join-Path $RepoPath $JsonFileRelativePath\n>>> L233:         Try {\n    L234:             Get-Content -Raw $FullPath | ConvertFrom-Json -ErrorAction Stop | Out-Null\n    L235:             Log-Message \"Vérifié (JSON valide) : $($JsonFileRelativePath)\"",
            "Line": "        Try {",
            "Type": "control",
            "Index": 232
          },
          {
            "Context": "    L232:         $FullPath = Join-Path $RepoPath $JsonFileRelativePath\n    L233:         Try {\n>>> L234:             Get-Content -Raw $FullPath | ConvertFrom-Json -ErrorAction Stop | Out-Null\n    L235:             Log-Message \"Vérifié (JSON valide) : $($JsonFileRelativePath)\"\n    L236:         } Catch {",
            "Line": "            Get-Content -Raw $FullPath | ConvertFrom-Json -ErrorAction Stop | Out-Null",
            "Type": "code",
            "Index": 233
          },
          {
            "Context": "    L233:         Try {\n    L234:             Get-Content -Raw $FullPath | ConvertFrom-Json -ErrorAction Stop | Out-Null\n>>> L235:             Log-Message \"Vérifié (JSON valide) : $($JsonFileRelativePath)\"\n    L236:         } Catch {\n    L237:             Log-Message \"ERREUR: Fichier JSON $($JsonFileRelativePath) invalide après synchronisation. Détails : $($_.Exception.Message)\" \"ERREUR\"",
            "Line": "            Log-Message \"Vérifié (JSON valide) : $($JsonFileRelativePath)\"",
            "Type": "code",
            "Index": 234
          },
          {
            "Context": "    L234:             Get-Content -Raw $FullPath | ConvertFrom-Json -ErrorAction Stop | Out-Null\n    L235:             Log-Message \"Vérifié (JSON valide) : $($JsonFileRelativePath)\"\n>>> L236:         } Catch {\n    L237:             Log-Message \"ERREUR: Fichier JSON $($JsonFileRelativePath) invalide après synchronisation. Détails : $($_.Exception.Message)\" \"ERREUR\"\n    L238:             if ($StashApplied) { Try { git stash pop -ErrorAction SilentlyContinue } Catch {} }",
            "Line": "        } Catch {",
            "Type": "code",
            "Index": 235
          },
          {
            "Context": "    L235:             Log-Message \"Vérifié (JSON valide) : $($JsonFileRelativePath)\"\n    L236:         } Catch {\n>>> L237:             Log-Message \"ERREUR: Fichier JSON $($JsonFileRelativePath) invalide après synchronisation. Détails : $($_.Exception.Message)\" \"ERREUR\"\n    L238:             if ($StashApplied) { Try { git stash pop -ErrorAction SilentlyContinue } Catch {} }\n    L239:             Exit 1",
            "Line": "            Log-Message \"ERREUR: Fichier JSON $($JsonFileRelativePath) invalide après synchronisation. Détails : $($_.Exception.Message)\" \"ERREUR\"",
            "Type": "code",
            "Index": 236
          },
          {
            "Context": "    L236:         } Catch {\n    L237:             Log-Message \"ERREUR: Fichier JSON $($JsonFileRelativePath) invalide après synchronisation. Détails : $($_.Exception.Message)\" \"ERREUR\"\n>>> L238:             if ($StashApplied) { Try { git stash pop -ErrorAction SilentlyContinue } Catch {} }\n    L239:             Exit 1\n    L240:         }",
            "Line": "            if ($StashApplied) { Try { git stash pop -ErrorAction SilentlyContinue } Catch {} }",
            "Type": "control",
            "Index": 237
          },
          {
            "Context": "    L237:             Log-Message \"ERREUR: Fichier JSON $($JsonFileRelativePath) invalide après synchronisation. Détails : $($_.Exception.Message)\" \"ERREUR\"\n    L238:             if ($StashApplied) { Try { git stash pop -ErrorAction SilentlyContinue } Catch {} }\n>>> L239:             Exit 1\n    L240:         }\n    L241:     }",
            "Line": "            Exit 1",
            "Type": "code",
            "Index": 238
          },
          {
            "Context": "    L242: }\n    L243: \n>>> L244: # 5.2 Vérification de l'existence des fichiers JSON critiques (ceux de $SpecificJsonFiles)\n    L245: Log-Message \"Vérification de l'existence des fichiers JSON critiques...\"\n    L246: $MissingCriticalFiles = @()",
            "Line": "# 5.2 Vérification de l'existence des fichiers JSON critiques (ceux de $SpecificJsonFiles)",
            "Type": "comment",
            "Index": 243
          },
          {
            "Context": "    L243: \n    L244: # 5.2 Vérification de l'existence des fichiers JSON critiques (ceux de $SpecificJsonFiles)\n>>> L245: Log-Message \"Vérification de l'existence des fichiers JSON critiques...\"\n    L246: $MissingCriticalFiles = @()\n    L247: foreach ($CriticalJsonFileRelPath in $SpecificJsonFiles) { # Utiliser la liste originale des JSON critiques",
            "Line": "Log-Message \"Vérification de l'existence des fichiers JSON critiques...\"",
            "Type": "code",
            "Index": 244
          },
          {
            "Context": "    L244: # 5.2 Vérification de l'existence des fichiers JSON critiques (ceux de $SpecificJsonFiles)\n    L245: Log-Message \"Vérification de l'existence des fichiers JSON critiques...\"\n>>> L246: $MissingCriticalFiles = @()\n    L247: foreach ($CriticalJsonFileRelPath in $SpecificJsonFiles) { # Utiliser la liste originale des JSON critiques\n    L248:     $FullPath = Join-Path $RepoPath $CriticalJsonFileRelPath",
            "Line": "$MissingCriticalFiles = @()",
            "Type": "code",
            "Index": 245
          },
          {
            "Context": "    L245: Log-Message \"Vérification de l'existence des fichiers JSON critiques...\"\n    L246: $MissingCriticalFiles = @()\n>>> L247: foreach ($CriticalJsonFileRelPath in $SpecificJsonFiles) { # Utiliser la liste originale des JSON critiques\n    L248:     $FullPath = Join-Path $RepoPath $CriticalJsonFileRelPath\n    L249:     if (-not (Test-Path $FullPath)) {",
            "Line": "foreach ($CriticalJsonFileRelPath in $SpecificJsonFiles) { # Utiliser la liste originale des JSON critiques",
            "Type": "control",
            "Index": 246
          },
          {
            "Context": "    L246: $MissingCriticalFiles = @()\n    L247: foreach ($CriticalJsonFileRelPath in $SpecificJsonFiles) { # Utiliser la liste originale des JSON critiques\n>>> L248:     $FullPath = Join-Path $RepoPath $CriticalJsonFileRelPath\n    L249:     if (-not (Test-Path $FullPath)) {\n    L250:         Log-Message \"ERREUR: Fichier JSON critique MANQUANT après synchronisation : $($CriticalJsonFileRelPath)\" \"ERREUR\"",
            "Line": "    $FullPath = Join-Path $RepoPath $CriticalJsonFileRelPath",
            "Type": "code",
            "Index": 247
          },
          {
            "Context": "    L247: foreach ($CriticalJsonFileRelPath in $SpecificJsonFiles) { # Utiliser la liste originale des JSON critiques\n    L248:     $FullPath = Join-Path $RepoPath $CriticalJsonFileRelPath\n>>> L249:     if (-not (Test-Path $FullPath)) {\n    L250:         Log-Message \"ERREUR: Fichier JSON critique MANQUANT après synchronisation : $($CriticalJsonFileRelPath)\" \"ERREUR\"\n    L251:         $MissingCriticalFiles += $CriticalJsonFileRelPath",
            "Line": "    if (-not (Test-Path $FullPath)) {",
            "Type": "control",
            "Index": 248
          },
          {
            "Context": "    L248:     $FullPath = Join-Path $RepoPath $CriticalJsonFileRelPath\n    L249:     if (-not (Test-Path $FullPath)) {\n>>> L250:         Log-Message \"ERREUR: Fichier JSON critique MANQUANT après synchronisation : $($CriticalJsonFileRelPath)\" \"ERREUR\"\n    L251:         $MissingCriticalFiles += $CriticalJsonFileRelPath\n    L252:     } else {",
            "Line": "        Log-Message \"ERREUR: Fichier JSON critique MANQUANT après synchronisation : $($CriticalJsonFileRelPath)\" \"ERREUR\"",
            "Type": "code",
            "Index": 249
          },
          {
            "Context": "    L249:     if (-not (Test-Path $FullPath)) {\n    L250:         Log-Message \"ERREUR: Fichier JSON critique MANQUANT après synchronisation : $($CriticalJsonFileRelPath)\" \"ERREUR\"\n>>> L251:         $MissingCriticalFiles += $CriticalJsonFileRelPath\n    L252:     } else {\n    L253:         Log-Message \"Présent (fichier critique) : $($CriticalJsonFileRelPath)\"",
            "Line": "        $MissingCriticalFiles += $CriticalJsonFileRelPath",
            "Type": "code",
            "Index": 250
          },
          {
            "Context": "    L86:         Add-Content -Path $ConflictLogFile -Value \"--- FIN DU CONFLIT ---\"\n    L87:         Log-Message \"Conflit de fusion annulé. Voir $($ConflictLogFile) pour les détails. Synchronisation interrompue.\" \"ERREUR\"\n>>> L88:     } else {\n    L89:         Log-Message \"Échec du git pull. Message d'exception: $($ErrorMessageFromException). Sortie de la commande: $($PullAttemptOutput.Trim()). Annulation de la synchronisation.\" \"ERREUR\"\n    L90:     }",
            "Line": "    } else {",
            "Type": "code",
            "Index": 87
          },
          {
            "Context": "    L251:         $MissingCriticalFiles += $CriticalJsonFileRelPath\n    L252:     } else {\n>>> L253:         Log-Message \"Présent (fichier critique) : $($CriticalJsonFileRelPath)\"\n    L254:     }\n    L255: }",
            "Line": "        Log-Message \"Présent (fichier critique) : $($CriticalJsonFileRelPath)\"",
            "Type": "code",
            "Index": 252
          },
          {
            "Context": "    L40:         Log-Message \"Échec du stash. Annulation de la synchronisation. Message : $($_.Exception.Message)\" \"ERREUR\"\n    L41:         Exit 1 # Sortie avec erreur\n>>> L42:     }\n    L43: } else {\n    L44:     $StashApplied = $false",
            "Line": "    }",
            "Type": "structure",
            "Index": 41
          },
          {
            "Context": "    L8: If (-not (Test-Path $ConflictLogDir)) {\n    L9:     New-Item -ItemType Directory -Path $ConflictLogDir | Out-Null\n>>> L10: }\n    L11: \n    L12: function Log-Message {",
            "Line": "}",
            "Type": "structure",
            "Index": 9
          },
          {
            "Context": "    L1: # Fichier : d:/roo-extensions/sync_roo_environment.ps1\n>>> L2: \n    L3: $RepoPath = \"d:/roo-extensions\"\n    L4: $LogFile = \"d:/roo-extensions/sync_log.txt\"",
            "Line": "",
            "Type": "empty",
            "Index": 1
          },
          {
            "Context": "    L255: }\n    L256: \n>>> L257: if ($MissingCriticalFiles.Count -gt 0) {\n    L258:     Log-Message \"Au moins un fichier JSON critique est manquant ($($MissingCriticalFiles -join ', ')). Synchronisation considérée comme échouée.\" \"ERREUR\"\n    L259:     if ($StashApplied) { Try { git stash pop -ErrorAction SilentlyContinue } Catch {} }",
            "Line": "if ($MissingCriticalFiles.Count -gt 0) {",
            "Type": "control",
            "Index": 256
          },
          {
            "Context": "    L256: \n    L257: if ($MissingCriticalFiles.Count -gt 0) {\n>>> L258:     Log-Message \"Au moins un fichier JSON critique est manquant ($($MissingCriticalFiles -join ', ')). Synchronisation considérée comme échouée.\" \"ERREUR\"\n    L259:     if ($StashApplied) { Try { git stash pop -ErrorAction SilentlyContinue } Catch {} }\n    L260:     Exit 1",
            "Line": "    Log-Message \"Au moins un fichier JSON critique est manquant ($($MissingCriticalFiles -join ', ')). Synchronisation considérée comme échouée.\" \"ERREUR\"",
            "Type": "code",
            "Index": 257
          },
          {
            "Context": "    L103: if (-not $HeadAfterPull -or ($LASTEXITCODE -ne 0)) {\n    L104:     Log-Message \"Impossible de récupérer le SHA de HEAD après pull. Annulation.\" \"ERREUR\"\n>>> L105:     if ($StashApplied) { Try { git stash pop -ErrorAction SilentlyContinue } Catch {} }\n    L106:     Exit 1\n    L107: }",
            "Line": "    if ($StashApplied) { Try { git stash pop -ErrorAction SilentlyContinue } Catch {} }",
            "Type": "control",
            "Index": 104
          },
          {
            "Context": "    L23: if (-not $GitPath) {\n    L24:     Log-Message \"ERREUR: La commande 'git' n'a pas été trouvée. Veuillez vous assurer que Git est installé et dans le PATH.\" \"ERREUR\"\n>>> L25:     Exit 1\n    L26: }\n    L27: Log-Message \"Commande 'git' trouvée : $($GitPath.Source)\"",
            "Line": "    Exit 1",
            "Type": "code",
            "Index": 24
          },
          {
            "Context": "    L8: If (-not (Test-Path $ConflictLogDir)) {\n    L9:     New-Item -ItemType Directory -Path $ConflictLogDir | Out-Null\n>>> L10: }\n    L11: \n    L12: function Log-Message {",
            "Line": "}",
            "Type": "structure",
            "Index": 9
          },
          {
            "Context": "    L1: # Fichier : d:/roo-extensions/sync_roo_environment.ps1\n>>> L2: \n    L3: $RepoPath = \"d:/roo-extensions\"\n    L4: $LogFile = \"d:/roo-extensions/sync_log.txt\"",
            "Line": "",
            "Type": "empty",
            "Index": 1
          },
          {
            "Context": "    L261: }\n    L262: \n>>> L263: # Étape 6: Gestion des Commits de Correction (si nécessaire)\n    L264: Log-Message \"Vérification des modifications pour commit de correction...\"\n    L265: $PostSyncStatus = git status --porcelain",
            "Line": "# Étape 6: Gestion des Commits de Correction (si nécessaire)",
            "Type": "comment",
            "Index": 262
          },
          {
            "Context": "    L262: \n    L263: # Étape 6: Gestion des Commits de Correction (si nécessaire)\n>>> L264: Log-Message \"Vérification des modifications pour commit de correction...\"\n    L265: $PostSyncStatus = git status --porcelain\n    L266: if ($PostSyncStatus) {",
            "Line": "Log-Message \"Vérification des modifications pour commit de correction...\"",
            "Type": "code",
            "Index": 263
          },
          {
            "Context": "    L265: $PostSyncStatus = git status --porcelain\n    L266: if ($PostSyncStatus) {\n>>> L267:     Log-Message \"Modifications détectées après synchronisation (ex: logs). Création d'un commit de correction...\"\n    L268:     git add .\n    L269:     git commit -m \"SYNC: [Automated] Synchronisation des paramètres Roo post-pull\" # Message ajusté",
            "Line": "    Log-Message \"Modifications détectées après synchronisation (ex: logs). Création d'un commit de correction...\"",
            "Type": "code",
            "Index": 266
          },
          {
            "Context": "    L266: if ($PostSyncStatus) {\n    L267:     Log-Message \"Modifications détectées après synchronisation (ex: logs). Création d'un commit de correction...\"\n>>> L268:     git add .\n    L269:     git commit -m \"SYNC: [Automated] Synchronisation des paramètres Roo post-pull\" # Message ajusté\n    L270:     Log-Message \"Commit de correction créé.\"",
            "Line": "    git add .",
            "Type": "code",
            "Index": 267
          },
          {
            "Context": "    L267:     Log-Message \"Modifications détectées après synchronisation (ex: logs). Création d'un commit de correction...\"\n    L268:     git add .\n>>> L269:     git commit -m \"SYNC: [Automated] Synchronisation des paramètres Roo post-pull\" # Message ajusté\n    L270:     Log-Message \"Commit de correction créé.\"\n    L271: ",
            "Line": "    git commit -m \"SYNC: [Automated] Synchronisation des paramètres Roo post-pull\" # Message ajusté",
            "Type": "code",
            "Index": 268
          },
          {
            "Context": "    L268:     git add .\n    L269:     git commit -m \"SYNC: [Automated] Synchronisation des paramètres Roo post-pull\" # Message ajusté\n>>> L270:     Log-Message \"Commit de correction créé.\"\n    L271: \n    L272:     Log-Message \"Tentative de push du commit de correction...\"",
            "Line": "    Log-Message \"Commit de correction créé.\"",
            "Type": "code",
            "Index": 269
          },
          {
            "Context": "    L1: # Fichier : d:/roo-extensions/sync_roo_environment.ps1\n>>> L2: \n    L3: $RepoPath = \"d:/roo-extensions\"\n    L4: $LogFile = \"d:/roo-extensions/sync_log.txt\"",
            "Line": "",
            "Type": "empty",
            "Index": 1
          },
          {
            "Context": "    L270:     Log-Message \"Commit de correction créé.\"\n    L271: \n>>> L272:     Log-Message \"Tentative de push du commit de correction...\"\n    L273:     Try {\n    L274:         git push origin main -ErrorAction Stop",
            "Line": "    Log-Message \"Tentative de push du commit de correction...\"",
            "Type": "code",
            "Index": 271
          },
          {
            "Context": "    L273:     Try {\n    L274:         git push origin main -ErrorAction Stop\n>>> L275:         Log-Message \"Push du commit de correction réussi.\"\n    L276:     } Catch {\n    L277:         Log-Message \"Échec du push du commit de correction. Message : $($_.Exception.Message)\" \"ERREUR\"",
            "Line": "        Log-Message \"Push du commit de correction réussi.\"",
            "Type": "code",
            "Index": 274
          },
          {
            "Context": "    L275:         Log-Message \"Push du commit de correction réussi.\"\n    L276:     } Catch {\n>>> L277:         Log-Message \"Échec du push du commit de correction. Message : $($_.Exception.Message)\" \"ERREUR\"\n    L278:     }\n    L279: } else {",
            "Line": "        Log-Message \"Échec du push du commit de correction. Message : $($_.Exception.Message)\" \"ERREUR\"",
            "Type": "code",
            "Index": 276
          },
          {
            "Context": "    L40:         Log-Message \"Échec du stash. Annulation de la synchronisation. Message : $($_.Exception.Message)\" \"ERREUR\"\n    L41:         Exit 1 # Sortie avec erreur\n>>> L42:     }\n    L43: } else {\n    L44:     $StashApplied = $false",
            "Line": "    }",
            "Type": "structure",
            "Index": 41
          },
          {
            "Context": "    L41:         Exit 1 # Sortie avec erreur\n    L42:     }\n>>> L43: } else {\n    L44:     $StashApplied = $false\n    L45: }",
            "Line": "} else {",
            "Type": "code",
            "Index": 42
          },
          {
            "Context": "    L8: If (-not (Test-Path $ConflictLogDir)) {\n    L9:     New-Item -ItemType Directory -Path $ConflictLogDir | Out-Null\n>>> L10: }\n    L11: \n    L12: function Log-Message {",
            "Line": "}",
            "Type": "structure",
            "Index": 9
          },
          {
            "Context": "    L1: # Fichier : d:/roo-extensions/sync_roo_environment.ps1\n>>> L2: \n    L3: $RepoPath = \"d:/roo-extensions\"\n    L4: $LogFile = \"d:/roo-extensions/sync_log.txt\"",
            "Line": "",
            "Type": "empty",
            "Index": 1
          },
          {
            "Context": "    L288:         Log-Message \"Stash restauré avec succès.\"\n    L289:     } Catch {\n>>> L290:         $StashPopErrorMessage = $_.Exception.Message\n    L291:         Log-Message \"Échec de la restauration du stash. Des conflits peuvent exister. Message : $($StashPopErrorMessage)\" \"ALERTE\"\n    L292:         # Documenter les conflits de stash pop",
            "Line": "        $StashPopErrorMessage = $_.Exception.Message",
            "Type": "code",
            "Index": 289
          },
          {
            "Context": "    L289:     } Catch {\n    L290:         $StashPopErrorMessage = $_.Exception.Message\n>>> L291:         Log-Message \"Échec de la restauration du stash. Des conflits peuvent exister. Message : $($StashPopErrorMessage)\" \"ALERTE\"\n    L292:         # Documenter les conflits de stash pop\n    L293:         $StashConflictLogFile = Join-Path $ConflictLogDir \"sync_conflicts_stash_pop_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"",
            "Line": "        Log-Message \"Échec de la restauration du stash. Des conflits peuvent exister. Message : $($StashPopErrorMessage)\" \"ALERTE\"",
            "Type": "code",
            "Index": 290
          },
          {
            "Context": "    L290:         $StashPopErrorMessage = $_.Exception.Message\n    L291:         Log-Message \"Échec de la restauration du stash. Des conflits peuvent exister. Message : $($StashPopErrorMessage)\" \"ALERTE\"\n>>> L292:         # Documenter les conflits de stash pop\n    L293:         $StashConflictLogFile = Join-Path $ConflictLogDir \"sync_conflicts_stash_pop_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"\n    L294:         Add-Content -Path $StashConflictLogFile -Value \"--- Conflit Git détecté lors du stash pop - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---\"",
            "Line": "        # Documenter les conflits de stash pop",
            "Type": "comment",
            "Index": 291
          },
          {
            "Context": "    L291:         Log-Message \"Échec de la restauration du stash. Des conflits peuvent exister. Message : $($StashPopErrorMessage)\" \"ALERTE\"\n    L292:         # Documenter les conflits de stash pop\n>>> L293:         $StashConflictLogFile = Join-Path $ConflictLogDir \"sync_conflicts_stash_pop_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"\n    L294:         Add-Content -Path $StashConflictLogFile -Value \"--- Conflit Git détecté lors du stash pop - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---\"\n    L295:         Add-Content -Path $StashConflictLogFile -Value \"Dépôt : $RepoPath\"",
            "Line": "        $StashConflictLogFile = Join-Path $ConflictLogDir \"sync_conflicts_stash_pop_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"",
            "Type": "code",
            "Index": 292
          },
          {
            "Context": "    L293:         $StashConflictLogFile = Join-Path $ConflictLogDir \"sync_conflicts_stash_pop_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"\n    L294:         Add-Content -Path $StashConflictLogFile -Value \"--- Conflit Git détecté lors du stash pop - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---\"\n>>> L295:         Add-Content -Path $StashConflictLogFile -Value \"Dépôt : $RepoPath\"\n    L296:         Add-Content -Path $StashConflictLogFile -Value \"Message d'erreur : $StashPopErrorMessage\"\n    L297:         Add-Content -Path $StashConflictLogFile -Value \"Statut Git après tentative de pop :\"",
            "Line": "        Add-Content -Path $StashConflictLogFile -Value \"Dépôt : $RepoPath\"",
            "Type": "code",
            "Index": 294
          },
          {
            "Context": "    L294:         Add-Content -Path $StashConflictLogFile -Value \"--- Conflit Git détecté lors du stash pop - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---\"\n    L295:         Add-Content -Path $StashConflictLogFile -Value \"Dépôt : $RepoPath\"\n>>> L296:         Add-Content -Path $StashConflictLogFile -Value \"Message d'erreur : $StashPopErrorMessage\"\n    L297:         Add-Content -Path $StashConflictLogFile -Value \"Statut Git après tentative de pop :\"\n    L298:         (git status --porcelain) | Out-String | Add-Content -Path $StashConflictLogFile # Utiliser --porcelain pour un statut plus concis",
            "Line": "        Add-Content -Path $StashConflictLogFile -Value \"Message d'erreur : $StashPopErrorMessage\"",
            "Type": "code",
            "Index": 295
          },
          {
            "Context": "    L295:         Add-Content -Path $StashConflictLogFile -Value \"Dépôt : $RepoPath\"\n    L296:         Add-Content -Path $StashConflictLogFile -Value \"Message d'erreur : $StashPopErrorMessage\"\n>>> L297:         Add-Content -Path $StashConflictLogFile -Value \"Statut Git après tentative de pop :\"\n    L298:         (git status --porcelain) | Out-String | Add-Content -Path $StashConflictLogFile # Utiliser --porcelain pour un statut plus concis\n    L299:         (git diff --name-status --diff-filter=U) | Out-String | Add-Content -Path $StashConflictLogFile # Lister les fichiers en conflit",
            "Line": "        Add-Content -Path $StashConflictLogFile -Value \"Statut Git après tentative de pop :\"",
            "Type": "code",
            "Index": 296
          },
          {
            "Context": "    L296:         Add-Content -Path $StashConflictLogFile -Value \"Message d'erreur : $StashPopErrorMessage\"\n    L297:         Add-Content -Path $StashConflictLogFile -Value \"Statut Git après tentative de pop :\"\n>>> L298:         (git status --porcelain) | Out-String | Add-Content -Path $StashConflictLogFile # Utiliser --porcelain pour un statut plus concis\n    L299:         (git diff --name-status --diff-filter=U) | Out-String | Add-Content -Path $StashConflictLogFile # Lister les fichiers en conflit\n    L300:         Add-Content -Path $StashConflictLogFile -Value \"--- FIN DU CONFLIT STASH POP ---\"",
            "Line": "        (git status --porcelain) | Out-String | Add-Content -Path $StashConflictLogFile # Utiliser --porcelain pour un statut plus concis",
            "Type": "code",
            "Index": 297
          },
          {
            "Context": "    L297:         Add-Content -Path $StashConflictLogFile -Value \"Statut Git après tentative de pop :\"\n    L298:         (git status --porcelain) | Out-String | Add-Content -Path $StashConflictLogFile # Utiliser --porcelain pour un statut plus concis\n>>> L299:         (git diff --name-status --diff-filter=U) | Out-String | Add-Content -Path $StashConflictLogFile # Lister les fichiers en conflit\n    L300:         Add-Content -Path $StashConflictLogFile -Value \"--- FIN DU CONFLIT STASH POP ---\"\n    L301:         Log-Message \"Détails du conflit de stash pop enregistrés dans $($StashConflictLogFile). Résolution manuelle requise.\" \"ERREUR\"",
            "Line": "        (git diff --name-status --diff-filter=U) | Out-String | Add-Content -Path $StashConflictLogFile # Lister les fichiers en conflit",
            "Type": "code",
            "Index": 298
          },
          {
            "Context": "    L298:         (git status --porcelain) | Out-String | Add-Content -Path $StashConflictLogFile # Utiliser --porcelain pour un statut plus concis\n    L299:         (git diff --name-status --diff-filter=U) | Out-String | Add-Content -Path $StashConflictLogFile # Lister les fichiers en conflit\n>>> L300:         Add-Content -Path $StashConflictLogFile -Value \"--- FIN DU CONFLIT STASH POP ---\"\n    L301:         Log-Message \"Détails du conflit de stash pop enregistrés dans $($StashConflictLogFile). Résolution manuelle requise.\" \"ERREUR\"\n    L302:     }",
            "Line": "        Add-Content -Path $StashConflictLogFile -Value \"--- FIN DU CONFLIT STASH POP ---\"",
            "Type": "code",
            "Index": 299
          },
          {
            "Context": "    L299:         (git diff --name-status --diff-filter=U) | Out-String | Add-Content -Path $StashConflictLogFile # Lister les fichiers en conflit\n    L300:         Add-Content -Path $StashConflictLogFile -Value \"--- FIN DU CONFLIT STASH POP ---\"\n>>> L301:         Log-Message \"Détails du conflit de stash pop enregistrés dans $($StashConflictLogFile). Résolution manuelle requise.\" \"ERREUR\"\n    L302:     }\n    L303: }",
            "Line": "        Log-Message \"Détails du conflit de stash pop enregistrés dans $($StashConflictLogFile). Résolution manuelle requise.\" \"ERREUR\"",
            "Type": "code",
            "Index": 300
          },
          {
            "Context": "    L40:         Log-Message \"Échec du stash. Annulation de la synchronisation. Message : $($_.Exception.Message)\" \"ERREUR\"\n    L41:         Exit 1 # Sortie avec erreur\n>>> L42:     }\n    L43: } else {\n    L44:     $StashApplied = $false",
            "Line": "    }",
            "Type": "structure",
            "Index": 41
          },
          {
            "Context": "    L8: If (-not (Test-Path $ConflictLogDir)) {\n    L9:     New-Item -ItemType Directory -Path $ConflictLogDir | Out-Null\n>>> L10: }\n    L11: \n    L12: function Log-Message {",
            "Line": "}",
            "Type": "structure",
            "Index": 9
          },
          {
            "Context": "    L1: # Fichier : d:/roo-extensions/sync_roo_environment.ps1\n>>> L2: \n    L3: $RepoPath = \"d:/roo-extensions\"\n    L4: $LogFile = \"d:/roo-extensions/sync_log.txt\"",
            "Line": "",
            "Type": "empty",
            "Index": 1
          }
        ]
      },
      "Index": 7
    },
    {
      "Lines": 171,
      "Size": 7335,
      "File": "stash8-version.ps1",
      "Comparison": {
        "CommonLines": 98,
        "UniqueInCurrent": 147,
        "UniqueInStash": 73,
        "UniqueAnalysis": [
          {
            "Context": "    L22: # Étape 1: Préparation et Vérification de l'Environnement Git\n    L23: Log-Message \"Vérification du statut Git avant pull...\"\n>>> L24: $GitStatus = (& git status --porcelain 2>&1)\n    L25: if ($GitStatus) {\n    L26:     Log-Message \"Modifications locales détectées. Tentative de stash...\" \"ALERTE\"",
            "Line": "$GitStatus = (& git status --porcelain 2>&1)",
            "Type": "code",
            "Index": 23
          },
          {
            "Context": "    L26:     Log-Message \"Modifications locales détectées. Tentative de stash...\" \"ALERTE\"\n    L27:     Try {\n>>> L28:         $StashOutput = (& git stash push -m \"Automated stash before sync pull\" 2>&1)\n    L29:         if ($LASTEXITCODE -ne 0) {\n    L30:             throw \"Git stash failed: $StashOutput\"",
            "Line": "        $StashOutput = (& git stash push -m \"Automated stash before sync pull\" 2>&1)",
            "Type": "code",
            "Index": 27
          },
          {
            "Context": "    L27:     Try {\n    L28:         $StashOutput = (& git stash push -m \"Automated stash before sync pull\" 2>&1)\n>>> L29:         if ($LASTEXITCODE -ne 0) {\n    L30:             throw \"Git stash failed: $StashOutput\"\n    L31:         }",
            "Line": "        if ($LASTEXITCODE -ne 0) {",
            "Type": "control",
            "Index": 28
          },
          {
            "Context": "    L28:         $StashOutput = (& git stash push -m \"Automated stash before sync pull\" 2>&1)\n    L29:         if ($LASTEXITCODE -ne 0) {\n>>> L30:             throw \"Git stash failed: $StashOutput\"\n    L31:         }\n    L32:         Log-Message \"Stash réussi.\"",
            "Line": "            throw \"Git stash failed: $StashOutput\"",
            "Type": "code",
            "Index": 29
          },
          {
            "Context": "    L41: \n    L42: # Étape 2: Mise à Jour du Dépôt Local (git pull)\n>>> L43: Log-Message \"Exécution de git pull...\"\n    L44: Try {\n    L45:     $PullOutput = (& git pull origin main 2>&1)",
            "Line": "Log-Message \"Exécution de git pull...\"",
            "Type": "code",
            "Index": 42
          },
          {
            "Context": "    L43: Log-Message \"Exécution de git pull...\"\n    L44: Try {\n>>> L45:     $PullOutput = (& git pull origin main 2>&1)\n    L46:     if ($LASTEXITCODE -ne 0) {\n    L47:         throw \"Git pull failed: $PullOutput\"",
            "Line": "    $PullOutput = (& git pull origin main 2>&1)",
            "Type": "code",
            "Index": 44
          },
          {
            "Context": "    L44: Try {\n    L45:     $PullOutput = (& git pull origin main 2>&1)\n>>> L46:     if ($LASTEXITCODE -ne 0) {\n    L47:         throw \"Git pull failed: $PullOutput\"\n    L48:     }",
            "Line": "    if ($LASTEXITCODE -ne 0) {",
            "Type": "control",
            "Index": 45
          },
          {
            "Context": "    L45:     $PullOutput = (& git pull origin main 2>&1)\n    L46:     if ($LASTEXITCODE -ne 0) {\n>>> L47:         throw \"Git pull failed: $PullOutput\"\n    L48:     }\n    L49:     Log-Message \"Git pull réussi. L'environnement local est maintenant synchronisé avec le dépôt.\"",
            "Line": "        throw \"Git pull failed: $PullOutput\"",
            "Type": "code",
            "Index": 46
          },
          {
            "Context": "    L47:         throw \"Git pull failed: $PullOutput\"\n    L48:     }\n>>> L49:     Log-Message \"Git pull réussi. L'environnement local est maintenant synchronisé avec le dépôt.\"\n    L50: } Catch {\n    L51:     $ErrorMessage = $_.Exception.Message",
            "Line": "    Log-Message \"Git pull réussi. L'environnement local est maintenant synchronisé avec le dépôt.\"",
            "Type": "code",
            "Index": 48
          },
          {
            "Context": "    L52:     if ($ErrorMessage -like \"*merge conflict*\") {\n    L53:         Log-Message \"Conflit de fusion détecté. Annulation de la fusion...\" \"ALERTE\"\n>>> L54:         & git merge --abort\n    L55:         $ConflictLogFile = Join-Path $ConflictLogDir \"sync_conflicts_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"\n    L56:         Add-Content -Path $ConflictLogFile -Value \"--- Conflit Git détecté lors du pull - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---\"",
            "Line": "        & git merge --abort",
            "Type": "code",
            "Index": 53
          },
          {
            "Context": "    L58:         Add-Content -Path $ConflictLogFile -Value \"Branche : main\"\n    L59:         Add-Content -Path $ConflictLogFile -Value \"Statut avant abort :\"\n>>> L60:         (& git status 2>&1) | Out-String | Add-Content -Path $ConflictLogFile\n    L61:         Add-Content -Path $ConflictLogFile -Value \"--- FIN DU CONFLIT ---\"\n    L62:         Log-Message \"Conflit de fusion annulé. Voir $($ConflictLogFile) pour les détails. Synchronisation interrompue.\" \"ERREUR\"",
            "Line": "        (& git status 2>&1) | Out-String | Add-Content -Path $ConflictLogFile",
            "Type": "code",
            "Index": 59
          },
          {
            "Context": "    L67: }\n    L68: \n>>> L69: # Étape 3 & 4: Analyse des Nouveautés et Exécution des Opérations de Synchronisation\n    L70: # Ces étapes sont maintenant implicitement gérées par le 'git pull' si le dépôt est l'emplacement actif.\n    L71: # La section de copie de fichiers est supprimée.",
            "Line": "# Étape 3 & 4: Analyse des Nouveautés et Exécution des Opérations de Synchronisation",
            "Type": "comment",
            "Index": 68
          },
          {
            "Context": "    L68: \n    L69: # Étape 3 & 4: Analyse des Nouveautés et Exécution des Opérations de Synchronisation\n>>> L70: # Ces étapes sont maintenant implicitement gérées par le 'git pull' si le dépôt est l'emplacement actif.\n    L71: # La section de copie de fichiers est supprimée.\n    L72: Log-Message \"Le 'git pull' a mis à jour les fichiers directement dans le répertoire de travail.\"",
            "Line": "# Ces étapes sont maintenant implicitement gérées par le 'git pull' si le dépôt est l'emplacement actif.",
            "Type": "comment",
            "Index": 69
          },
          {
            "Context": "    L69: # Étape 3 & 4: Analyse des Nouveautés et Exécution des Opérations de Synchronisation\n    L70: # Ces étapes sont maintenant implicitement gérées par le 'git pull' si le dépôt est l'emplacement actif.\n>>> L71: # La section de copie de fichiers est supprimée.\n    L72: Log-Message \"Le 'git pull' a mis à jour les fichiers directement dans le répertoire de travail.\"\n    L73: ",
            "Line": "# La section de copie de fichiers est supprimée.",
            "Type": "comment",
            "Index": 70
          },
          {
            "Context": "    L70: # Ces étapes sont maintenant implicitement gérées par le 'git pull' si le dépôt est l'emplacement actif.\n    L71: # La section de copie de fichiers est supprimée.\n>>> L72: Log-Message \"Le 'git pull' a mis à jour les fichiers directement dans le répertoire de travail.\"\n    L73: \n    L74: $JsonFiles = @(",
            "Line": "Log-Message \"Le 'git pull' a mis à jour les fichiers directement dans le répertoire de travail.\"",
            "Type": "code",
            "Index": 71
          },
          {
            "Context": "    L72: Log-Message \"Le 'git pull' a mis à jour les fichiers directement dans le répertoire de travail.\"\n    L73: \n>>> L74: $JsonFiles = @(\n    L75:     \"roo-config/settings/settings.json\",\n    L76:     \"roo-config/settings/servers.json\",",
            "Line": "$JsonFiles = @(",
            "Type": "code",
            "Index": 73
          },
          {
            "Context": "    L79:     \"roo-config/qwen3-profiles/qwen3-parameters.json\",\n    L80:     \"roo-modes/configs/modes.json\",\n>>> L81:     \"roo-modes/configs/new-roomodes.json\",\n    L82:     \"roo-modes/configs/standard-modes.json\",\n    L83:     \"roo-modes/configs/vscode-custom-modes.json\",",
            "Line": "    \"roo-modes/configs/new-roomodes.json\",",
            "Type": "code",
            "Index": 80
          },
          {
            "Context": "    L81:     \"roo-modes/configs/new-roomodes.json\",\n    L82:     \"roo-modes/configs/standard-modes.json\",\n>>> L83:     \"roo-modes/configs/vscode-custom-modes.json\",\n    L84:     \"roo-modes/n5/configs/architect-large-optimized-v2.json\",\n    L85:     \"roo-modes/n5/configs/architect-large-optimized.json\",",
            "Line": "    \"roo-modes/configs/vscode-custom-modes.json\",",
            "Type": "code",
            "Index": 82
          },
          {
            "Context": "    L82:     \"roo-modes/configs/standard-modes.json\",\n    L83:     \"roo-modes/configs/vscode-custom-modes.json\",\n>>> L84:     \"roo-modes/n5/configs/architect-large-optimized-v2.json\",\n    L85:     \"roo-modes/n5/configs/architect-large-optimized.json\",\n    L86:     \"roo-modes/n5/configs/architect-large-original.json\",",
            "Line": "    \"roo-modes/n5/configs/architect-large-optimized-v2.json\",",
            "Type": "code",
            "Index": 83
          },
          {
            "Context": "    L83:     \"roo-modes/configs/vscode-custom-modes.json\",\n    L84:     \"roo-modes/n5/configs/architect-large-optimized-v2.json\",\n>>> L85:     \"roo-modes/n5/configs/architect-large-optimized.json\",\n    L86:     \"roo-modes/n5/configs/architect-large-original.json\",\n    L87:     \"roo-modes/n5/configs/architect-large.json\",",
            "Line": "    \"roo-modes/n5/configs/architect-large-optimized.json\",",
            "Type": "code",
            "Index": 84
          },
          {
            "Context": "    L84:     \"roo-modes/n5/configs/architect-large-optimized-v2.json\",\n    L85:     \"roo-modes/n5/configs/architect-large-optimized.json\",\n>>> L86:     \"roo-modes/n5/configs/architect-large-original.json\",\n    L87:     \"roo-modes/n5/configs/architect-large.json\",\n    L88:     \"roo-modes/n5/configs/architect-medium.json\",",
            "Line": "    \"roo-modes/n5/configs/architect-large-original.json\",",
            "Type": "code",
            "Index": 85
          },
          {
            "Context": "    L85:     \"roo-modes/n5/configs/architect-large-optimized.json\",\n    L86:     \"roo-modes/n5/configs/architect-large-original.json\",\n>>> L87:     \"roo-modes/n5/configs/architect-large.json\",\n    L88:     \"roo-modes/n5/configs/architect-medium.json\",\n    L89:     \"roo-modes/n5/configs/ask-large.json\",",
            "Line": "    \"roo-modes/n5/configs/architect-large.json\",",
            "Type": "code",
            "Index": 86
          },
          {
            "Context": "    L86:     \"roo-modes/n5/configs/architect-large-original.json\",\n    L87:     \"roo-modes/n5/configs/architect-large.json\",\n>>> L88:     \"roo-modes/n5/configs/architect-medium.json\",\n    L89:     \"roo-modes/n5/configs/ask-large.json\",\n    L90:     \"roo-modes/n5/configs/ask-medium.json\",",
            "Line": "    \"roo-modes/n5/configs/architect-medium.json\",",
            "Type": "code",
            "Index": 87
          },
          {
            "Context": "    L87:     \"roo-modes/n5/configs/architect-large.json\",\n    L88:     \"roo-modes/n5/configs/architect-medium.json\",\n>>> L89:     \"roo-modes/n5/configs/ask-large.json\",\n    L90:     \"roo-modes/n5/configs/ask-medium.json\",\n    L91:     \"roo-modes/n5/configs/custom-n5-modes.json\",",
            "Line": "    \"roo-modes/n5/configs/ask-large.json\",",
            "Type": "code",
            "Index": 88
          },
          {
            "Context": "    L88:     \"roo-modes/n5/configs/architect-medium.json\",\n    L89:     \"roo-modes/n5/configs/ask-large.json\",\n>>> L90:     \"roo-modes/n5/configs/ask-medium.json\",\n    L91:     \"roo-modes/n5/configs/custom-n5-modes.json\",\n    L92:     \"roo-modes/n5/configs/debug-large.json\",",
            "Line": "    \"roo-modes/n5/configs/ask-medium.json\",",
            "Type": "code",
            "Index": 89
          },
          {
            "Context": "    L89:     \"roo-modes/n5/configs/ask-large.json\",\n    L90:     \"roo-modes/n5/configs/ask-medium.json\",\n>>> L91:     \"roo-modes/n5/configs/custom-n5-modes.json\",\n    L92:     \"roo-modes/n5/configs/debug-large.json\",\n    L93:     \"roo-modes/n5/configs/debug-medium.json\",",
            "Line": "    \"roo-modes/n5/configs/custom-n5-modes.json\",",
            "Type": "code",
            "Index": 90
          },
          {
            "Context": "    L90:     \"roo-modes/n5/configs/ask-medium.json\",\n    L91:     \"roo-modes/n5/configs/custom-n5-modes.json\",\n>>> L92:     \"roo-modes/n5/configs/debug-large.json\",\n    L93:     \"roo-modes/n5/configs/debug-medium.json\",\n    L94:     \"roo-modes/n5/configs/large-modes.json\",",
            "Line": "    \"roo-modes/n5/configs/debug-large.json\",",
            "Type": "code",
            "Index": 91
          },
          {
            "Context": "    L91:     \"roo-modes/n5/configs/custom-n5-modes.json\",\n    L92:     \"roo-modes/n5/configs/debug-large.json\",\n>>> L93:     \"roo-modes/n5/configs/debug-medium.json\",\n    L94:     \"roo-modes/n5/configs/large-modes.json\",\n    L95:     \"roo-modes/n5/configs/medium-modes-fixed.json\",",
            "Line": "    \"roo-modes/n5/configs/debug-medium.json\",",
            "Type": "code",
            "Index": 92
          },
          {
            "Context": "    L92:     \"roo-modes/n5/configs/debug-large.json\",\n    L93:     \"roo-modes/n5/configs/debug-medium.json\",\n>>> L94:     \"roo-modes/n5/configs/large-modes.json\",\n    L95:     \"roo-modes/n5/configs/medium-modes-fixed.json\",\n    L96:     \"roo-modes/n5/configs/medium-modes.json\",",
            "Line": "    \"roo-modes/n5/configs/large-modes.json\",",
            "Type": "code",
            "Index": 93
          },
          {
            "Context": "    L93:     \"roo-modes/n5/configs/debug-medium.json\",\n    L94:     \"roo-modes/n5/configs/large-modes.json\",\n>>> L95:     \"roo-modes/n5/configs/medium-modes-fixed.json\",\n    L96:     \"roo-modes/n5/configs/medium-modes.json\",\n    L97:     \"roo-modes/n5/configs/micro-modes.json\",",
            "Line": "    \"roo-modes/n5/configs/medium-modes-fixed.json\",",
            "Type": "code",
            "Index": 94
          },
          {
            "Context": "    L94:     \"roo-modes/n5/configs/large-modes.json\",\n    L95:     \"roo-modes/n5/configs/medium-modes-fixed.json\",\n>>> L96:     \"roo-modes/n5/configs/medium-modes.json\",\n    L97:     \"roo-modes/n5/configs/micro-modes.json\",\n    L98:     \"roo-modes/n5/configs/mini-modes-fixed.json\",",
            "Line": "    \"roo-modes/n5/configs/medium-modes.json\",",
            "Type": "code",
            "Index": 95
          },
          {
            "Context": "    L95:     \"roo-modes/n5/configs/medium-modes-fixed.json\",\n    L96:     \"roo-modes/n5/configs/medium-modes.json\",\n>>> L97:     \"roo-modes/n5/configs/micro-modes.json\",\n    L98:     \"roo-modes/n5/configs/mini-modes-fixed.json\",\n    L99:     \"roo-modes/n5/configs/mini-modes.json\",",
            "Line": "    \"roo-modes/n5/configs/micro-modes.json\",",
            "Type": "code",
            "Index": 96
          },
          {
            "Context": "    L96:     \"roo-modes/n5/configs/medium-modes.json\",\n    L97:     \"roo-modes/n5/configs/micro-modes.json\",\n>>> L98:     \"roo-modes/n5/configs/mini-modes-fixed.json\",\n    L99:     \"roo-modes/n5/configs/mini-modes.json\",\n    L100:     \"roo-modes/n5/configs/n5-modes-roo-compatible-local.json\",",
            "Line": "    \"roo-modes/n5/configs/mini-modes-fixed.json\",",
            "Type": "code",
            "Index": 97
          },
          {
            "Context": "    L97:     \"roo-modes/n5/configs/micro-modes.json\",\n    L98:     \"roo-modes/n5/configs/mini-modes-fixed.json\",\n>>> L99:     \"roo-modes/n5/configs/mini-modes.json\",\n    L100:     \"roo-modes/n5/configs/n5-modes-roo-compatible-local.json\",\n    L101:     \"roo-modes/n5/configs/n5-modes-roo-compatible-modified.json\",",
            "Line": "    \"roo-modes/n5/configs/mini-modes.json\",",
            "Type": "code",
            "Index": 98
          },
          {
            "Context": "    L98:     \"roo-modes/n5/configs/mini-modes-fixed.json\",\n    L99:     \"roo-modes/n5/configs/mini-modes.json\",\n>>> L100:     \"roo-modes/n5/configs/n5-modes-roo-compatible-local.json\",\n    L101:     \"roo-modes/n5/configs/n5-modes-roo-compatible-modified.json\",\n    L102:     \"roo-modes/n5/configs/n5-modes-roo-compatible.json\",",
            "Line": "    \"roo-modes/n5/configs/n5-modes-roo-compatible-local.json\",",
            "Type": "code",
            "Index": 99
          },
          {
            "Context": "    L99:     \"roo-modes/n5/configs/mini-modes.json\",\n    L100:     \"roo-modes/n5/configs/n5-modes-roo-compatible-local.json\",\n>>> L101:     \"roo-modes/n5/configs/n5-modes-roo-compatible-modified.json\",\n    L102:     \"roo-modes/n5/configs/n5-modes-roo-compatible.json\",\n    L103:     \"roo-modes/n5/configs/oracle-modes-fixed.json\",",
            "Line": "    \"roo-modes/n5/configs/n5-modes-roo-compatible-modified.json\",",
            "Type": "code",
            "Index": 100
          },
          {
            "Context": "    L100:     \"roo-modes/n5/configs/n5-modes-roo-compatible-local.json\",\n    L101:     \"roo-modes/n5/configs/n5-modes-roo-compatible-modified.json\",\n>>> L102:     \"roo-modes/n5/configs/n5-modes-roo-compatible.json\",\n    L103:     \"roo-modes/n5/configs/oracle-modes-fixed.json\",\n    L104:     \"roo-modes/n5/configs/oracle-modes.json\",",
            "Line": "    \"roo-modes/n5/configs/n5-modes-roo-compatible.json\",",
            "Type": "code",
            "Index": 101
          },
          {
            "Context": "    L101:     \"roo-modes/n5/configs/n5-modes-roo-compatible-modified.json\",\n    L102:     \"roo-modes/n5/configs/n5-modes-roo-compatible.json\",\n>>> L103:     \"roo-modes/n5/configs/oracle-modes-fixed.json\",\n    L104:     \"roo-modes/n5/configs/oracle-modes.json\",\n    L105:     \"roo-modes/n5/configs/orchestrator-large.json\",",
            "Line": "    \"roo-modes/n5/configs/oracle-modes-fixed.json\",",
            "Type": "code",
            "Index": 102
          },
          {
            "Context": "    L102:     \"roo-modes/n5/configs/n5-modes-roo-compatible.json\",\n    L103:     \"roo-modes/n5/configs/oracle-modes-fixed.json\",\n>>> L104:     \"roo-modes/n5/configs/oracle-modes.json\",\n    L105:     \"roo-modes/n5/configs/orchestrator-large.json\",\n    L106:     \"roo-modes/n5/configs/orchestrator-medium.json\"",
            "Line": "    \"roo-modes/n5/configs/oracle-modes.json\",",
            "Type": "code",
            "Index": 103
          },
          {
            "Context": "    L103:     \"roo-modes/n5/configs/oracle-modes-fixed.json\",\n    L104:     \"roo-modes/n5/configs/oracle-modes.json\",\n>>> L105:     \"roo-modes/n5/configs/orchestrator-large.json\",\n    L106:     \"roo-modes/n5/configs/orchestrator-medium.json\"\n    L107: )",
            "Line": "    \"roo-modes/n5/configs/orchestrator-large.json\",",
            "Type": "code",
            "Index": 104
          },
          {
            "Context": "    L104:     \"roo-modes/n5/configs/oracle-modes.json\",\n    L105:     \"roo-modes/n5/configs/orchestrator-large.json\",\n>>> L106:     \"roo-modes/n5/configs/orchestrator-medium.json\"\n    L107: )\n    L108: ",
            "Line": "    \"roo-modes/n5/configs/orchestrator-medium.json\"",
            "Type": "code",
            "Index": 105
          },
          {
            "Context": "    L107: )\n    L108: \n>>> L109: # Étape 5: Vérification Post-Synchronisation\n    L110: Log-Message \"Vérification post-synchronisation (validation JSON)...\"\n    L111: ",
            "Line": "# Étape 5: Vérification Post-Synchronisation",
            "Type": "comment",
            "Index": 108
          },
          {
            "Context": "    L108: \n    L109: # Étape 5: Vérification Post-Synchronisation\n>>> L110: Log-Message \"Vérification post-synchronisation (validation JSON)...\"\n    L111: \n    L112: foreach ($JsonFile in $JsonFiles) {",
            "Line": "Log-Message \"Vérification post-synchronisation (validation JSON)...\"",
            "Type": "code",
            "Index": 109
          },
          {
            "Context": "    L110: Log-Message \"Vérification post-synchronisation (validation JSON)...\"\n    L111: \n>>> L112: foreach ($JsonFile in $JsonFiles) {\n    L113:     $FullPath = Join-Path $RepoPath $JsonFile\n    L114:     if (Test-Path $FullPath) {",
            "Line": "foreach ($JsonFile in $JsonFiles) {",
            "Type": "control",
            "Index": 111
          },
          {
            "Context": "    L111: \n    L112: foreach ($JsonFile in $JsonFiles) {\n>>> L113:     $FullPath = Join-Path $RepoPath $JsonFile\n    L114:     if (Test-Path $FullPath) {\n    L115:         Try {",
            "Line": "    $FullPath = Join-Path $RepoPath $JsonFile",
            "Type": "code",
            "Index": 112
          },
          {
            "Context": "    L112: foreach ($JsonFile in $JsonFiles) {\n    L113:     $FullPath = Join-Path $RepoPath $JsonFile\n>>> L114:     if (Test-Path $FullPath) {\n    L115:         Try {\n    L116:             Get-Content -Raw $FullPath | ConvertFrom-Json | Out-Null",
            "Line": "    if (Test-Path $FullPath) {",
            "Type": "control",
            "Index": 113
          },
          {
            "Context": "    L113:     $FullPath = Join-Path $RepoPath $JsonFile\n    L114:     if (Test-Path $FullPath) {\n>>> L115:         Try {\n    L116:             Get-Content -Raw $FullPath | ConvertFrom-Json | Out-Null\n    L117:             Log-Message \"Vérifié (JSON valide) : $($JsonFile)\"",
            "Line": "        Try {",
            "Type": "control",
            "Index": 114
          },
          {
            "Context": "    L114:     if (Test-Path $FullPath) {\n    L115:         Try {\n>>> L116:             Get-Content -Raw $FullPath | ConvertFrom-Json | Out-Null\n    L117:             Log-Message \"Vérifié (JSON valide) : $($JsonFile)\"\n    L118:         } Catch {",
            "Line": "            Get-Content -Raw $FullPath | ConvertFrom-Json | Out-Null",
            "Type": "code",
            "Index": 115
          },
          {
            "Context": "    L115:         Try {\n    L116:             Get-Content -Raw $FullPath | ConvertFrom-Json | Out-Null\n>>> L117:             Log-Message \"Vérifié (JSON valide) : $($JsonFile)\"\n    L118:         } Catch {\n    L119:             Log-Message \"ERREUR: Fichier JSON invalide après synchronisation : $($JsonFile). Détails : $($_.Exception.Message)\" \"ERREUR\"",
            "Line": "            Log-Message \"Vérifié (JSON valide) : $($JsonFile)\"",
            "Type": "code",
            "Index": 116
          },
          {
            "Context": "    L116:             Get-Content -Raw $FullPath | ConvertFrom-Json | Out-Null\n    L117:             Log-Message \"Vérifié (JSON valide) : $($JsonFile)\"\n>>> L118:         } Catch {\n    L119:             Log-Message \"ERREUR: Fichier JSON invalide après synchronisation : $($JsonFile). Détails : $($_.Exception.Message)\" \"ERREUR\"\n    L120:             Exit 1",
            "Line": "        } Catch {",
            "Type": "code",
            "Index": 117
          },
          {
            "Context": "    L117:             Log-Message \"Vérifié (JSON valide) : $($JsonFile)\"\n    L118:         } Catch {\n>>> L119:             Log-Message \"ERREUR: Fichier JSON invalide après synchronisation : $($JsonFile). Détails : $($_.Exception.Message)\" \"ERREUR\"\n    L120:             Exit 1\n    L121:         }",
            "Line": "            Log-Message \"ERREUR: Fichier JSON invalide après synchronisation : $($JsonFile). Détails : $($_.Exception.Message)\" \"ERREUR\"",
            "Type": "code",
            "Index": 118
          },
          {
            "Context": "    L118:         } Catch {\n    L119:             Log-Message \"ERREUR: Fichier JSON invalide après synchronisation : $($JsonFile). Détails : $($_.Exception.Message)\" \"ERREUR\"\n>>> L120:             Exit 1\n    L121:         }\n    L122:     }",
            "Line": "            Exit 1",
            "Type": "code",
            "Index": 119
          },
          {
            "Context": "    L123: }\n    L124: \n>>> L125: # Étape 6: Gestion des Commits de Correction (si nécessaire)\n    L126: Log-Message \"Vérification des modifications pour commit de correction (ex: logs)...\"\n    L127: $PostSyncStatus = (& git status --porcelain 2>&1)",
            "Line": "# Étape 6: Gestion des Commits de Correction (si nécessaire)",
            "Type": "comment",
            "Index": 124
          },
          {
            "Context": "    L125: # Étape 6: Gestion des Commits de Correction (si nécessaire)\n    L126: Log-Message \"Vérification des modifications pour commit de correction (ex: logs)...\"\n>>> L127: $PostSyncStatus = (& git status --porcelain 2>&1)\n    L128: if ($PostSyncStatus) {\n    L129:     Log-Message \"Modifications détectées après synchronisation. Création d'un commit de correction...\"",
            "Line": "$PostSyncStatus = (& git status --porcelain 2>&1)",
            "Type": "code",
            "Index": 126
          },
          {
            "Context": "    L127: $PostSyncStatus = (& git status --porcelain 2>&1)\n    L128: if ($PostSyncStatus) {\n>>> L129:     Log-Message \"Modifications détectées après synchronisation. Création d'un commit de correction...\"\n    L130:     & git add .\n    L131:     $CommitOutput = (& git commit -m \"SYNC: [Automated] Synchronisation des paramètres Roo post-pull\" 2>&1)",
            "Line": "    Log-Message \"Modifications détectées après synchronisation. Création d'un commit de correction...\"",
            "Type": "code",
            "Index": 128
          },
          {
            "Context": "    L128: if ($PostSyncStatus) {\n    L129:     Log-Message \"Modifications détectées après synchronisation. Création d'un commit de correction...\"\n>>> L130:     & git add .\n    L131:     $CommitOutput = (& git commit -m \"SYNC: [Automated] Synchronisation des paramètres Roo post-pull\" 2>&1)\n    L132:     if ($LASTEXITCODE -ne 0) {",
            "Line": "    & git add .",
            "Type": "code",
            "Index": 129
          },
          {
            "Context": "    L129:     Log-Message \"Modifications détectées après synchronisation. Création d'un commit de correction...\"\n    L130:     & git add .\n>>> L131:     $CommitOutput = (& git commit -m \"SYNC: [Automated] Synchronisation des paramètres Roo post-pull\" 2>&1)\n    L132:     if ($LASTEXITCODE -ne 0) {\n    L133:         Log-Message \"Échec du commit. Message : $($CommitOutput)\" \"ERREUR\"",
            "Line": "    $CommitOutput = (& git commit -m \"SYNC: [Automated] Synchronisation des paramètres Roo post-pull\" 2>&1)",
            "Type": "code",
            "Index": 130
          },
          {
            "Context": "    L44: Try {\n    L45:     $PullOutput = (& git pull origin main 2>&1)\n>>> L46:     if ($LASTEXITCODE -ne 0) {\n    L47:         throw \"Git pull failed: $PullOutput\"\n    L48:     }",
            "Line": "    if ($LASTEXITCODE -ne 0) {",
            "Type": "control",
            "Index": 45
          },
          {
            "Context": "    L131:     $CommitOutput = (& git commit -m \"SYNC: [Automated] Synchronisation des paramètres Roo post-pull\" 2>&1)\n    L132:     if ($LASTEXITCODE -ne 0) {\n>>> L133:         Log-Message \"Échec du commit. Message : $($CommitOutput)\" \"ERREUR\"\n    L134:         # Ne pas quitter ici, car la synchronisation des fichiers a été effectuée localement.\n    L135:         # Le commit peut être retenté manuellement.",
            "Line": "        Log-Message \"Échec du commit. Message : $($CommitOutput)\" \"ERREUR\"",
            "Type": "code",
            "Index": 132
          },
          {
            "Context": "    L133:         Log-Message \"Échec du commit. Message : $($CommitOutput)\" \"ERREUR\"\n    L134:         # Ne pas quitter ici, car la synchronisation des fichiers a été effectuée localement.\n>>> L135:         # Le commit peut être retenté manuellement.\n    L136:     } else {\n    L137:         Log-Message \"Commit de correction créé.\"",
            "Line": "        # Le commit peut être retenté manuellement.",
            "Type": "comment",
            "Index": 134
          },
          {
            "Context": "    L135:         # Le commit peut être retenté manuellement.\n    L136:     } else {\n>>> L137:         Log-Message \"Commit de correction créé.\"\n    L138:     }\n    L139: ",
            "Line": "        Log-Message \"Commit de correction créé.\"",
            "Type": "code",
            "Index": 136
          },
          {
            "Context": "    L138:     }\n    L139: \n>>> L140:     Log-Message \"Tentative de push du commit de correction...\"\n    L141:     Try {\n    L142:         $PushOutput = (& git push origin main 2>&1)",
            "Line": "    Log-Message \"Tentative de push du commit de correction...\"",
            "Type": "code",
            "Index": 139
          },
          {
            "Context": "    L140:     Log-Message \"Tentative de push du commit de correction...\"\n    L141:     Try {\n>>> L142:         $PushOutput = (& git push origin main 2>&1)\n    L143:         if ($LASTEXITCODE -ne 0) {\n    L144:             throw \"Git push failed: $PushOutput\"",
            "Line": "        $PushOutput = (& git push origin main 2>&1)",
            "Type": "code",
            "Index": 141
          },
          {
            "Context": "    L27:     Try {\n    L28:         $StashOutput = (& git stash push -m \"Automated stash before sync pull\" 2>&1)\n>>> L29:         if ($LASTEXITCODE -ne 0) {\n    L30:             throw \"Git stash failed: $StashOutput\"\n    L31:         }",
            "Line": "        if ($LASTEXITCODE -ne 0) {",
            "Type": "control",
            "Index": 28
          },
          {
            "Context": "    L142:         $PushOutput = (& git push origin main 2>&1)\n    L143:         if ($LASTEXITCODE -ne 0) {\n>>> L144:             throw \"Git push failed: $PushOutput\"\n    L145:         }\n    L146:         Log-Message \"Push du commit de correction réussi.\"",
            "Line": "            throw \"Git push failed: $PushOutput\"",
            "Type": "code",
            "Index": 143
          },
          {
            "Context": "    L144:             throw \"Git push failed: $PushOutput\"\n    L145:         }\n>>> L146:         Log-Message \"Push du commit de correction réussi.\"\n    L147:     } Catch {\n    L148:         Log-Message \"Échec du push du commit de correction. Message : $($_.Exception.Message)\" \"ERREUR\"",
            "Line": "        Log-Message \"Push du commit de correction réussi.\"",
            "Type": "code",
            "Index": 145
          },
          {
            "Context": "    L146:         Log-Message \"Push du commit de correction réussi.\"\n    L147:     } Catch {\n>>> L148:         Log-Message \"Échec du push du commit de correction. Message : $($_.Exception.Message)\" \"ERREUR\"\n    L149:         # Ne pas quitter ici, car la synchronisation des fichiers a été effectuée localement.\n    L150:         # Le push peut être retenté manuellement.",
            "Line": "        Log-Message \"Échec du push du commit de correction. Message : $($_.Exception.Message)\" \"ERREUR\"",
            "Type": "code",
            "Index": 147
          },
          {
            "Context": "    L132:     if ($LASTEXITCODE -ne 0) {\n    L133:         Log-Message \"Échec du commit. Message : $($CommitOutput)\" \"ERREUR\"\n>>> L134:         # Ne pas quitter ici, car la synchronisation des fichiers a été effectuée localement.\n    L135:         # Le commit peut être retenté manuellement.\n    L136:     } else {",
            "Line": "        # Ne pas quitter ici, car la synchronisation des fichiers a été effectuée localement.",
            "Type": "comment",
            "Index": 133
          },
          {
            "Context": "    L158:     Log-Message \"Restauration du stash...\"\n    L159:     Try {\n>>> L160:         $StashPopOutput = (& git stash pop 2>&1)\n    L161:         if ($LASTEXITCODE -ne 0) {\n    L162:             throw \"Git stash pop failed: $StashPopOutput\"",
            "Line": "        $StashPopOutput = (& git stash pop 2>&1)",
            "Type": "code",
            "Index": 159
          },
          {
            "Context": "    L27:     Try {\n    L28:         $StashOutput = (& git stash push -m \"Automated stash before sync pull\" 2>&1)\n>>> L29:         if ($LASTEXITCODE -ne 0) {\n    L30:             throw \"Git stash failed: $StashOutput\"\n    L31:         }",
            "Line": "        if ($LASTEXITCODE -ne 0) {",
            "Type": "control",
            "Index": 28
          },
          {
            "Context": "    L160:         $StashPopOutput = (& git stash pop 2>&1)\n    L161:         if ($LASTEXITCODE -ne 0) {\n>>> L162:             throw \"Git stash pop failed: $StashPopOutput\"\n    L163:         }\n    L164:         Log-Message \"Stash restauré avec succès.\"",
            "Line": "            throw \"Git stash pop failed: $StashPopOutput\"",
            "Type": "code",
            "Index": 161
          },
          {
            "Context": "    L29:         if ($LASTEXITCODE -ne 0) {\n    L30:             throw \"Git stash failed: $StashOutput\"\n>>> L31:         }\n    L32:         Log-Message \"Stash réussi.\"\n    L33:         $StashApplied = $true",
            "Line": "        }",
            "Type": "structure",
            "Index": 30
          },
          {
            "Context": "    L165:     } Catch {\n    L166:         Log-Message \"Échec de la restauration du stash. Des conflits peuvent exister. Message : $($_.Exception.Message)\" \"ALERTE\"\n>>> L167:         # Documenter les conflits de stash pop si nécessaire\n    L168:     }\n    L169: }",
            "Line": "        # Documenter les conflits de stash pop si nécessaire",
            "Type": "comment",
            "Index": 166
          }
        ]
      },
      "Index": 8
    },
    {
      "Lines": 322,
      "Size": 14793,
      "File": "stash9-version.ps1",
      "Comparison": {
        "CommonLines": 103,
        "UniqueInCurrent": 142,
        "UniqueInStash": 219,
        "UniqueAnalysis": [
          {
            "Context": "    L22: # Étape 1: Préparation et Vérification de l'Environnement Git\n    L23: Log-Message \"Vérification du statut Git avant pull...\"\n>>> L24: $GitStatus = (& git status --porcelain 2>&1)\n    L25: if ($GitStatus) {\n    L26:     Log-Message \"Modifications locales détectées. Tentative de stash...\" \"ALERTE\"",
            "Line": "$GitStatus = (& git status --porcelain 2>&1)",
            "Type": "code",
            "Index": 23
          },
          {
            "Context": "    L26:     Log-Message \"Modifications locales détectées. Tentative de stash...\" \"ALERTE\"\n    L27:     Try {\n>>> L28:         $StashOutput = (& git stash push -m \"Automated stash before sync pull\" 2>&1)\n    L29:         if ($LASTEXITCODE -ne 0) {\n    L30:             throw \"Git stash failed: $StashOutput\"",
            "Line": "        $StashOutput = (& git stash push -m \"Automated stash before sync pull\" 2>&1)",
            "Type": "code",
            "Index": 27
          },
          {
            "Context": "    L27:     Try {\n    L28:         $StashOutput = (& git stash push -m \"Automated stash before sync pull\" 2>&1)\n>>> L29:         if ($LASTEXITCODE -ne 0) {\n    L30:             throw \"Git stash failed: $StashOutput\"\n    L31:         }",
            "Line": "        if ($LASTEXITCODE -ne 0) {",
            "Type": "control",
            "Index": 28
          },
          {
            "Context": "    L28:         $StashOutput = (& git stash push -m \"Automated stash before sync pull\" 2>&1)\n    L29:         if ($LASTEXITCODE -ne 0) {\n>>> L30:             throw \"Git stash failed: $StashOutput\"\n    L31:         }\n    L32:         Log-Message \"Stash réussi.\"",
            "Line": "            throw \"Git stash failed: $StashOutput\"",
            "Type": "code",
            "Index": 29
          },
          {
            "Context": "    L41: \n    L42: # Étape 2: Mise à Jour du Dépôt Local (git pull)\n>>> L43: Log-Message \"Exécution de git pull...\"\n    L44: Try {\n    L45:     $PullOutput = (& git pull origin main 2>&1)",
            "Line": "Log-Message \"Exécution de git pull...\"",
            "Type": "code",
            "Index": 42
          },
          {
            "Context": "    L43: Log-Message \"Exécution de git pull...\"\n    L44: Try {\n>>> L45:     $PullOutput = (& git pull origin main 2>&1)\n    L46:     if ($LASTEXITCODE -ne 0) {\n    L47:         throw \"Git pull failed: $PullOutput\"",
            "Line": "    $PullOutput = (& git pull origin main 2>&1)",
            "Type": "code",
            "Index": 44
          },
          {
            "Context": "    L44: Try {\n    L45:     $PullOutput = (& git pull origin main 2>&1)\n>>> L46:     if ($LASTEXITCODE -ne 0) {\n    L47:         throw \"Git pull failed: $PullOutput\"\n    L48:     }",
            "Line": "    if ($LASTEXITCODE -ne 0) {",
            "Type": "control",
            "Index": 45
          },
          {
            "Context": "    L45:     $PullOutput = (& git pull origin main 2>&1)\n    L46:     if ($LASTEXITCODE -ne 0) {\n>>> L47:         throw \"Git pull failed: $PullOutput\"\n    L48:     }\n    L49:     Log-Message \"Git pull réussi.\"",
            "Line": "        throw \"Git pull failed: $PullOutput\"",
            "Type": "code",
            "Index": 46
          },
          {
            "Context": "    L52:     if ($ErrorMessage -like \"*merge conflict*\") {\n    L53:         Log-Message \"Conflit de fusion détecté. Annulation de la fusion...\" \"ALERTE\"\n>>> L54:         & git merge --abort\n    L55:         $ConflictLogFile = Join-Path $ConflictLogDir \"sync_conflicts_$(Get-Date -Format 'yyyyMMdd_HHmmss').log\"\n    L56:         Add-Content -Path $ConflictLogFile -Value \"--- Conflit Git détecté lors du pull - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') ---\"",
            "Line": "        & git merge --abort",
            "Type": "code",
            "Index": 53
          },
          {
            "Context": "    L58:         Add-Content -Path $ConflictLogFile -Value \"Branche : main\"\n    L59:         Add-Content -Path $ConflictLogFile -Value \"Statut avant abort :\"\n>>> L60:         (& git status 2>&1) | Out-String | Add-Content -Path $ConflictLogFile\n    L61:         Add-Content -Path $ConflictLogFile -Value \"--- FIN DU CONFLIT ---\"\n    L62:         Log-Message \"Conflit de fusion annulé. Voir $($ConflictLogFile) pour les détails. Synchronisation interrompue.\" \"ERREUR\"",
            "Line": "        (& git status 2>&1) | Out-String | Add-Content -Path $ConflictLogFile",
            "Type": "code",
            "Index": 59
          },
          {
            "Context": "    L67: }\n    L68: \n>>> L69: # Étape 3 & 4: Analyse des Nouveautés et Exécution des Opérations de Synchronisation\n    L70: Log-Message \"Analyse des nouveautés et synchronisation des fichiers...\"\n    L71: ",
            "Line": "# Étape 3 & 4: Analyse des Nouveautés et Exécution des Opérations de Synchronisation",
            "Type": "comment",
            "Index": 68
          },
          {
            "Context": "    L68: \n    L69: # Étape 3 & 4: Analyse des Nouveautés et Exécution des Opérations de Synchronisation\n>>> L70: Log-Message \"Analyse des nouveautés et synchronisation des fichiers...\"\n    L71: \n    L72: $FilesToSync = @(",
            "Line": "Log-Message \"Analyse des nouveautés et synchronisation des fichiers...\"",
            "Type": "code",
            "Index": 69
          },
          {
            "Context": "    L70: Log-Message \"Analyse des nouveautés et synchronisation des fichiers...\"\n    L71: \n>>> L72: $FilesToSync = @(\n    L73:     \"roo-config/settings/settings.json\",\n    L74:     \"roo-config/settings/servers.json\",",
            "Line": "$FilesToSync = @(",
            "Type": "code",
            "Index": 71
          },
          {
            "Context": "    L76:     \"roo-config/escalation-test-config.json\",\n    L77:     \"roo-config/qwen3-profiles/qwen3-parameters.json\",\n>>> L78:     \"roo-config/analyze-test-results.ps1\",\n    L79:     \"roo-config/apply-escalation-test-config.ps1\",\n    L80:     \"roo-config/create-profile.ps1\",",
            "Line": "    \"roo-config/analyze-test-results.ps1\",",
            "Type": "code",
            "Index": 77
          },
          {
            "Context": "    L77:     \"roo-config/qwen3-profiles/qwen3-parameters.json\",\n    L78:     \"roo-config/analyze-test-results.ps1\",\n>>> L79:     \"roo-config/apply-escalation-test-config.ps1\",\n    L80:     \"roo-config/create-profile.ps1\",\n    L81:     \"roo-config/deploy-profile-modes.ps1\",",
            "Line": "    \"roo-config/apply-escalation-test-config.ps1\",",
            "Type": "code",
            "Index": 78
          },
          {
            "Context": "    L78:     \"roo-config/analyze-test-results.ps1\",\n    L79:     \"roo-config/apply-escalation-test-config.ps1\",\n>>> L80:     \"roo-config/create-profile.ps1\",\n    L81:     \"roo-config/deploy-profile-modes.ps1\",\n    L82:     \"roo-config/maintenance-routine.ps1\",",
            "Line": "    \"roo-config/create-profile.ps1\",",
            "Type": "code",
            "Index": 79
          },
          {
            "Context": "    L79:     \"roo-config/apply-escalation-test-config.ps1\",\n    L80:     \"roo-config/create-profile.ps1\",\n>>> L81:     \"roo-config/deploy-profile-modes.ps1\",\n    L82:     \"roo-config/maintenance-routine.ps1\",\n    L83:     \"roo-config/maintenance-workflow.ps1\",",
            "Line": "    \"roo-config/deploy-profile-modes.ps1\",",
            "Type": "code",
            "Index": 80
          },
          {
            "Context": "    L80:     \"roo-config/create-profile.ps1\",\n    L81:     \"roo-config/deploy-profile-modes.ps1\",\n>>> L82:     \"roo-config/maintenance-routine.ps1\",\n    L83:     \"roo-config/maintenance-workflow.ps1\",\n    L84:     \"roo-config/test-escalation-scenarios.ps1\",",
            "Line": "    \"roo-config/maintenance-routine.ps1\",",
            "Type": "code",
            "Index": 81
          },
          {
            "Context": "    L81:     \"roo-config/deploy-profile-modes.ps1\",\n    L82:     \"roo-config/maintenance-routine.ps1\",\n>>> L83:     \"roo-config/maintenance-workflow.ps1\",\n    L84:     \"roo-config/test-escalation-scenarios.ps1\",\n    L85:     \"roo-config/deployment-scripts/create-clean-modes.ps1\",",
            "Line": "    \"roo-config/maintenance-workflow.ps1\",",
            "Type": "code",
            "Index": 82
          },
          {
            "Context": "    L82:     \"roo-config/maintenance-routine.ps1\",\n    L83:     \"roo-config/maintenance-workflow.ps1\",\n>>> L84:     \"roo-config/test-escalation-scenarios.ps1\",\n    L85:     \"roo-config/deployment-scripts/create-clean-modes.ps1\",\n    L86:     \"roo-config/deployment-scripts/deploy-guide-interactif.ps1\",",
            "Line": "    \"roo-config/test-escalation-scenarios.ps1\",",
            "Type": "code",
            "Index": 83
          },
          {
            "Context": "    L83:     \"roo-config/maintenance-workflow.ps1\",\n    L84:     \"roo-config/test-escalation-scenarios.ps1\",\n>>> L85:     \"roo-config/deployment-scripts/create-clean-modes.ps1\",\n    L86:     \"roo-config/deployment-scripts/deploy-guide-interactif.ps1\",\n    L87:     \"roo-config/deployment-scripts/deploy-modes-ascii.ps1\",",
            "Line": "    \"roo-config/deployment-scripts/create-clean-modes.ps1\",",
            "Type": "code",
            "Index": 84
          },
          {
            "Context": "    L84:     \"roo-config/test-escalation-scenarios.ps1\",\n    L85:     \"roo-config/deployment-scripts/create-clean-modes.ps1\",\n>>> L86:     \"roo-config/deployment-scripts/deploy-guide-interactif.ps1\",\n    L87:     \"roo-config/deployment-scripts/deploy-modes-ascii.ps1\",\n    L88:     \"roo-config/deployment-scripts/deploy-modes-enhanced.ps1\",",
            "Line": "    \"roo-config/deployment-scripts/deploy-guide-interactif.ps1\",",
            "Type": "code",
            "Index": 85
          },
          {
            "Context": "    L85:     \"roo-config/deployment-scripts/create-clean-modes.ps1\",\n    L86:     \"roo-config/deployment-scripts/deploy-guide-interactif.ps1\",\n>>> L87:     \"roo-config/deployment-scripts/deploy-modes-ascii.ps1\",\n    L88:     \"roo-config/deployment-scripts/deploy-modes-enhanced.ps1\",\n    L89:     \"roo-config/deployment-scripts/deploy-modes-extreme.ps1\",",
            "Line": "    \"roo-config/deployment-scripts/deploy-modes-ascii.ps1\",",
            "Type": "code",
            "Index": 86
          },
          {
            "Context": "    L86:     \"roo-config/deployment-scripts/deploy-guide-interactif.ps1\",\n    L87:     \"roo-config/deployment-scripts/deploy-modes-ascii.ps1\",\n>>> L88:     \"roo-config/deployment-scripts/deploy-modes-enhanced.ps1\",\n    L89:     \"roo-config/deployment-scripts/deploy-modes-extreme.ps1\",\n    L90:     \"roo-config/deployment-scripts/deploy-modes-final.ps1\",",
            "Line": "    \"roo-config/deployment-scripts/deploy-modes-enhanced.ps1\",",
            "Type": "code",
            "Index": 87
          },
          {
            "Context": "    L87:     \"roo-config/deployment-scripts/deploy-modes-ascii.ps1\",\n    L88:     \"roo-config/deployment-scripts/deploy-modes-enhanced.ps1\",\n>>> L89:     \"roo-config/deployment-scripts/deploy-modes-extreme.ps1\",\n    L90:     \"roo-config/deployment-scripts/deploy-modes-final.ps1\",\n    L91:     \"roo-config/deployment-scripts/deploy-modes-fixed.ps1\",",
            "Line": "    \"roo-config/deployment-scripts/deploy-modes-extreme.ps1\",",
            "Type": "code",
            "Index": 88
          },
          {
            "Context": "    L88:     \"roo-config/deployment-scripts/deploy-modes-enhanced.ps1\",\n    L89:     \"roo-config/deployment-scripts/deploy-modes-extreme.ps1\",\n>>> L90:     \"roo-config/deployment-scripts/deploy-modes-final.ps1\",\n    L91:     \"roo-config/deployment-scripts/deploy-modes-fixed.ps1\",\n    L92:     \"roo-config/deployment-scripts/deploy-modes-improved.ps1\",",
            "Line": "    \"roo-config/deployment-scripts/deploy-modes-final.ps1\",",
            "Type": "code",
            "Index": 89
          },
          {
            "Context": "    L89:     \"roo-config/deployment-scripts/deploy-modes-extreme.ps1\",\n    L90:     \"roo-config/deployment-scripts/deploy-modes-final.ps1\",\n>>> L91:     \"roo-config/deployment-scripts/deploy-modes-fixed.ps1\",\n    L92:     \"roo-config/deployment-scripts/deploy-modes-improved.ps1\",\n    L93:     \"roo-config/deployment-scripts/deploy-modes-minimal.ps1\",",
            "Line": "    \"roo-config/deployment-scripts/deploy-modes-fixed.ps1\",",
            "Type": "code",
            "Index": 90
          },
          {
            "Context": "    L90:     \"roo-config/deployment-scripts/deploy-modes-final.ps1\",\n    L91:     \"roo-config/deployment-scripts/deploy-modes-fixed.ps1\",\n>>> L92:     \"roo-config/deployment-scripts/deploy-modes-improved.ps1\",\n    L93:     \"roo-config/deployment-scripts/deploy-modes-minimal.ps1\",\n    L94:     \"roo-config/deployment-scripts/deploy-modes-simple-complex.ps1\",",
            "Line": "    \"roo-config/deployment-scripts/deploy-modes-improved.ps1\",",
            "Type": "code",
            "Index": 91
          },
          {
            "Context": "    L91:     \"roo-config/deployment-scripts/deploy-modes-fixed.ps1\",\n    L92:     \"roo-config/deployment-scripts/deploy-modes-improved.ps1\",\n>>> L93:     \"roo-config/deployment-scripts/deploy-modes-minimal.ps1\",\n    L94:     \"roo-config/deployment-scripts/deploy-modes-simple-complex.ps1\",\n    L95:     \"roo-config/deployment-scripts/deploy-modes-simple.ps1\",",
            "Line": "    \"roo-config/deployment-scripts/deploy-modes-minimal.ps1\",",
            "Type": "code",
            "Index": 92
          },
          {
            "Context": "    L92:     \"roo-config/deployment-scripts/deploy-modes-improved.ps1\",\n    L93:     \"roo-config/deployment-scripts/deploy-modes-minimal.ps1\",\n>>> L94:     \"roo-config/deployment-scripts/deploy-modes-simple-complex.ps1\",\n    L95:     \"roo-config/deployment-scripts/deploy-modes-simple.ps1\",\n    L96:     \"roo-config/deployment-scripts/deploy-modes-solution.ps1\",",
            "Line": "    \"roo-config/deployment-scripts/deploy-modes-simple-complex.ps1\",",
            "Type": "code",
            "Index": 93
          },
          {
            "Context": "    L93:     \"roo-config/deployment-scripts/deploy-modes-minimal.ps1\",\n    L94:     \"roo-config/deployment-scripts/deploy-modes-simple-complex.ps1\",\n>>> L95:     \"roo-config/deployment-scripts/deploy-modes-simple.ps1\",\n    L96:     \"roo-config/deployment-scripts/deploy-modes-solution.ps1\",\n    L97:     \"roo-config/deployment-scripts/deploy-modes-ultra-simple.ps1\",",
            "Line": "    \"roo-config/deployment-scripts/deploy-modes-simple.ps1\",",
            "Type": "code",
            "Index": 94
          },
          {
            "Context": "    L94:     \"roo-config/deployment-scripts/deploy-modes-simple-complex.ps1\",\n    L95:     \"roo-config/deployment-scripts/deploy-modes-simple.ps1\",\n>>> L96:     \"roo-config/deployment-scripts/deploy-modes-solution.ps1\",\n    L97:     \"roo-config/deployment-scripts/deploy-modes-ultra-simple.ps1\",\n    L98:     \"roo-config/deployment-scripts/deploy-modes.ps1\",",
            "Line": "    \"roo-config/deployment-scripts/deploy-modes-solution.ps1\",",
            "Type": "code",
            "Index": 95
          },
          {
            "Context": "    L95:     \"roo-config/deployment-scripts/deploy-modes-simple.ps1\",\n    L96:     \"roo-config/deployment-scripts/deploy-modes-solution.ps1\",\n>>> L97:     \"roo-config/deployment-scripts/deploy-modes-ultra-simple.ps1\",\n    L98:     \"roo-config/deployment-scripts/deploy-modes.ps1\",\n    L99:     \"roo-config/deployment-scripts/force-deploy-with-encoding-fix.ps1\",",
            "Line": "    \"roo-config/deployment-scripts/deploy-modes-ultra-simple.ps1\",",
            "Type": "code",
            "Index": 96
          },
          {
            "Context": "    L96:     \"roo-config/deployment-scripts/deploy-modes-solution.ps1\",\n    L97:     \"roo-config/deployment-scripts/deploy-modes-ultra-simple.ps1\",\n>>> L98:     \"roo-config/deployment-scripts/deploy-modes.ps1\",\n    L99:     \"roo-config/deployment-scripts/force-deploy-with-encoding-fix.ps1\",\n    L100:     \"roo-config/deployment-scripts/simple-deploy.ps1\",",
            "Line": "    \"roo-config/deployment-scripts/deploy-modes.ps1\",",
            "Type": "code",
            "Index": 97
          },
          {
            "Context": "    L97:     \"roo-config/deployment-scripts/deploy-modes-ultra-simple.ps1\",\n    L98:     \"roo-config/deployment-scripts/deploy-modes.ps1\",\n>>> L99:     \"roo-config/deployment-scripts/force-deploy-with-encoding-fix.ps1\",\n    L100:     \"roo-config/deployment-scripts/simple-deploy.ps1\",\n    L101:     \"roo-config/diagnostic-scripts/check-deployed-encoding.ps1\",",
            "Line": "    \"roo-config/deployment-scripts/force-deploy-with-encoding-fix.ps1\",",
            "Type": "code",
            "Index": 98
          },
          {
            "Context": "    L98:     \"roo-config/deployment-scripts/deploy-modes.ps1\",\n    L99:     \"roo-config/deployment-scripts/force-deploy-with-encoding-fix.ps1\",\n>>> L100:     \"roo-config/deployment-scripts/simple-deploy.ps1\",\n    L101:     \"roo-config/diagnostic-scripts/check-deployed-encoding.ps1\",\n    L102:     \"roo-config/diagnostic-scripts/diagnostic-rapide-encodage.ps1\",",
            "Line": "    \"roo-config/deployment-scripts/simple-deploy.ps1\",",
            "Type": "code",
            "Index": 99
          },
          {
            "Context": "    L99:     \"roo-config/deployment-scripts/force-deploy-with-encoding-fix.ps1\",\n    L100:     \"roo-config/deployment-scripts/simple-deploy.ps1\",\n>>> L101:     \"roo-config/diagnostic-scripts/check-deployed-encoding.ps1\",\n    L102:     \"roo-config/diagnostic-scripts/diagnostic-rapide-encodage.ps1\",\n    L103:     \"roo-config/diagnostic-scripts/encoding-diagnostic.ps1\",",
            "Line": "    \"roo-config/diagnostic-scripts/check-deployed-encoding.ps1\",",
            "Type": "code",
            "Index": 100
          },
          {
            "Context": "    L100:     \"roo-config/deployment-scripts/simple-deploy.ps1\",\n    L101:     \"roo-config/diagnostic-scripts/check-deployed-encoding.ps1\",\n>>> L102:     \"roo-config/diagnostic-scripts/diagnostic-rapide-encodage.ps1\",\n    L103:     \"roo-config/diagnostic-scripts/encoding-diagnostic.ps1\",\n    L104:     \"roo-config/diagnostic-scripts/verify-deployed-modes.ps1\",",
            "Line": "    \"roo-config/diagnostic-scripts/diagnostic-rapide-encodage.ps1\",",
            "Type": "code",
            "Index": 101
          },
          {
            "Context": "    L101:     \"roo-config/diagnostic-scripts/check-deployed-encoding.ps1\",\n    L102:     \"roo-config/diagnostic-scripts/diagnostic-rapide-encodage.ps1\",\n>>> L103:     \"roo-config/diagnostic-scripts/encoding-diagnostic.ps1\",\n    L104:     \"roo-config/diagnostic-scripts/verify-deployed-modes.ps1\",\n    L105:     \"roo-config/encoding-scripts/fix-encoding-advanced.ps1\",",
            "Line": "    \"roo-config/diagnostic-scripts/encoding-diagnostic.ps1\",",
            "Type": "code",
            "Index": 102
          },
          {
            "Context": "    L102:     \"roo-config/diagnostic-scripts/diagnostic-rapide-encodage.ps1\",\n    L103:     \"roo-config/diagnostic-scripts/encoding-diagnostic.ps1\",\n>>> L104:     \"roo-config/diagnostic-scripts/verify-deployed-modes.ps1\",\n    L105:     \"roo-config/encoding-scripts/fix-encoding-advanced.ps1\",\n    L106:     \"roo-config/encoding-scripts/fix-encoding-ascii.ps1\",",
            "Line": "    \"roo-config/diagnostic-scripts/verify-deployed-modes.ps1\",",
            "Type": "code",
            "Index": 103
          },
          {
            "Context": "    L103:     \"roo-config/diagnostic-scripts/encoding-diagnostic.ps1\",\n    L104:     \"roo-config/diagnostic-scripts/verify-deployed-modes.ps1\",\n>>> L105:     \"roo-config/encoding-scripts/fix-encoding-advanced.ps1\",\n    L106:     \"roo-config/encoding-scripts/fix-encoding-ascii.ps1\",\n    L107:     \"roo-config/encoding-scripts/fix-encoding-complete.ps1\",",
            "Line": "    \"roo-config/encoding-scripts/fix-encoding-advanced.ps1\",",
            "Type": "code",
            "Index": 104
          },
          {
            "Context": "    L104:     \"roo-config/diagnostic-scripts/verify-deployed-modes.ps1\",\n    L105:     \"roo-config/encoding-scripts/fix-encoding-advanced.ps1\",\n>>> L106:     \"roo-config/encoding-scripts/fix-encoding-ascii.ps1\",\n    L107:     \"roo-config/encoding-scripts/fix-encoding-complete.ps1\",\n    L108:     \"roo-config/encoding-scripts/fix-encoding-direct.ps1\",",
            "Line": "    \"roo-config/encoding-scripts/fix-encoding-ascii.ps1\",",
            "Type": "code",
            "Index": 105
          },
          {
            "Context": "    L105:     \"roo-config/encoding-scripts/fix-encoding-advanced.ps1\",\n    L106:     \"roo-config/encoding-scripts/fix-encoding-ascii.ps1\",\n>>> L107:     \"roo-config/encoding-scripts/fix-encoding-complete.ps1\",\n    L108:     \"roo-config/encoding-scripts/fix-encoding-direct.ps1\",\n    L109:     \"roo-config/encoding-scripts/fix-encoding-extreme.ps1\",",
            "Line": "    \"roo-config/encoding-scripts/fix-encoding-complete.ps1\",",
            "Type": "code",
            "Index": 106
          },
          {
            "Context": "    L106:     \"roo-config/encoding-scripts/fix-encoding-ascii.ps1\",\n    L107:     \"roo-config/encoding-scripts/fix-encoding-complete.ps1\",\n>>> L108:     \"roo-config/encoding-scripts/fix-encoding-direct.ps1\",\n    L109:     \"roo-config/encoding-scripts/fix-encoding-extreme.ps1\",\n    L110:     \"roo-config/encoding-scripts/fix-encoding-final.ps1\",",
            "Line": "    \"roo-config/encoding-scripts/fix-encoding-direct.ps1\",",
            "Type": "code",
            "Index": 107
          },
          {
            "Context": "    L107:     \"roo-config/encoding-scripts/fix-encoding-complete.ps1\",\n    L108:     \"roo-config/encoding-scripts/fix-encoding-direct.ps1\",\n>>> L109:     \"roo-config/encoding-scripts/fix-encoding-extreme.ps1\",\n    L110:     \"roo-config/encoding-scripts/fix-encoding-final.ps1\",\n    L111:     \"roo-config/encoding-scripts/fix-encoding-improved.ps1\",",
            "Line": "    \"roo-config/encoding-scripts/fix-encoding-extreme.ps1\",",
            "Type": "code",
            "Index": 108
          },
          {
            "Context": "    L108:     \"roo-config/encoding-scripts/fix-encoding-direct.ps1\",\n    L109:     \"roo-config/encoding-scripts/fix-encoding-extreme.ps1\",\n>>> L110:     \"roo-config/encoding-scripts/fix-encoding-final.ps1\",\n    L111:     \"roo-config/encoding-scripts/fix-encoding-improved.ps1\",\n    L112:     \"roo-config/encoding-scripts/fix-encoding-minimal.ps1\",",
            "Line": "    \"roo-config/encoding-scripts/fix-encoding-final.ps1\",",
            "Type": "code",
            "Index": 109
          },
          {
            "Context": "    L109:     \"roo-config/encoding-scripts/fix-encoding-extreme.ps1\",\n    L110:     \"roo-config/encoding-scripts/fix-encoding-final.ps1\",\n>>> L111:     \"roo-config/encoding-scripts/fix-encoding-improved.ps1\",\n    L112:     \"roo-config/encoding-scripts/fix-encoding-minimal.ps1\",\n    L113:     \"roo-config/encoding-scripts/fix-encoding-regex.ps1\",",
            "Line": "    \"roo-config/encoding-scripts/fix-encoding-improved.ps1\",",
            "Type": "code",
            "Index": 110
          },
          {
            "Context": "    L110:     \"roo-config/encoding-scripts/fix-encoding-final.ps1\",\n    L111:     \"roo-config/encoding-scripts/fix-encoding-improved.ps1\",\n>>> L112:     \"roo-config/encoding-scripts/fix-encoding-minimal.ps1\",\n    L113:     \"roo-config/encoding-scripts/fix-encoding-regex.ps1\",\n    L114:     \"roo-config/encoding-scripts/fix-encoding-simple-final.ps1\",",
            "Line": "    \"roo-config/encoding-scripts/fix-encoding-minimal.ps1\",",
            "Type": "code",
            "Index": 111
          },
          {
            "Context": "    L111:     \"roo-config/encoding-scripts/fix-encoding-improved.ps1\",\n    L112:     \"roo-config/encoding-scripts/fix-encoding-minimal.ps1\",\n>>> L113:     \"roo-config/encoding-scripts/fix-encoding-regex.ps1\",\n    L114:     \"roo-config/encoding-scripts/fix-encoding-simple-final.ps1\",\n    L115:     \"roo-config/encoding-scripts/fix-encoding-simple.ps1\",",
            "Line": "    \"roo-config/encoding-scripts/fix-encoding-regex.ps1\",",
            "Type": "code",
            "Index": 112
          },
          {
            "Context": "    L112:     \"roo-config/encoding-scripts/fix-encoding-minimal.ps1\",\n    L113:     \"roo-config/encoding-scripts/fix-encoding-regex.ps1\",\n>>> L114:     \"roo-config/encoding-scripts/fix-encoding-simple-final.ps1\",\n    L115:     \"roo-config/encoding-scripts/fix-encoding-simple.ps1\",\n    L116:     \"roo-config/encoding-scripts/fix-encoding-ultra-simple.ps1\",",
            "Line": "    \"roo-config/encoding-scripts/fix-encoding-simple-final.ps1\",",
            "Type": "code",
            "Index": 113
          },
          {
            "Context": "    L113:     \"roo-config/encoding-scripts/fix-encoding-regex.ps1\",\n    L114:     \"roo-config/encoding-scripts/fix-encoding-simple-final.ps1\",\n>>> L115:     \"roo-config/encoding-scripts/fix-encoding-simple.ps1\",\n    L116:     \"roo-config/encoding-scripts/fix-encoding-ultra-simple.ps1\",\n    L117:     \"roo-config/encoding-scripts/fix-encoding.ps1\",",
            "Line": "    \"roo-config/encoding-scripts/fix-encoding-simple.ps1\",",
            "Type": "code",
            "Index": 114
          },
          {
            "Context": "    L114:     \"roo-config/encoding-scripts/fix-encoding-simple-final.ps1\",\n    L115:     \"roo-config/encoding-scripts/fix-encoding-simple.ps1\",\n>>> L116:     \"roo-config/encoding-scripts/fix-encoding-ultra-simple.ps1\",\n    L117:     \"roo-config/encoding-scripts/fix-encoding.ps1\",\n    L118:     \"roo-config/encoding-scripts/fix-source-encoding.ps1\",",
            "Line": "    \"roo-config/encoding-scripts/fix-encoding-ultra-simple.ps1\",",
            "Type": "code",
            "Index": 115
          },
          {
            "Context": "    L115:     \"roo-config/encoding-scripts/fix-encoding-simple.ps1\",\n    L116:     \"roo-config/encoding-scripts/fix-encoding-ultra-simple.ps1\",\n>>> L117:     \"roo-config/encoding-scripts/fix-encoding.ps1\",\n    L118:     \"roo-config/encoding-scripts/fix-source-encoding.ps1\",\n    L119:     \"roo-config/settings/deploy-settings.ps1\",",
            "Line": "    \"roo-config/encoding-scripts/fix-encoding.ps1\",",
            "Type": "code",
            "Index": 116
          },
          {
            "Context": "    L116:     \"roo-config/encoding-scripts/fix-encoding-ultra-simple.ps1\",\n    L117:     \"roo-config/encoding-scripts/fix-encoding.ps1\",\n>>> L118:     \"roo-config/encoding-scripts/fix-source-encoding.ps1\",\n    L119:     \"roo-config/settings/deploy-settings.ps1\",\n    L120:     \"roo-config/README-campagne-tests-escalade.md\",",
            "Line": "    \"roo-config/encoding-scripts/fix-source-encoding.ps1\",",
            "Type": "code",
            "Index": 117
          },
          {
            "Context": "    L117:     \"roo-config/encoding-scripts/fix-encoding.ps1\",\n    L118:     \"roo-config/encoding-scripts/fix-source-encoding.ps1\",\n>>> L119:     \"roo-config/settings/deploy-settings.ps1\",\n    L120:     \"roo-config/README-campagne-tests-escalade.md\",\n    L121:     \"roo-config/README-profile-modes.md\",",
            "Line": "    \"roo-config/settings/deploy-settings.ps1\",",
            "Type": "code",
            "Index": 118
          },
          {
            "Context": "    L118:     \"roo-config/encoding-scripts/fix-source-encoding.ps1\",\n    L119:     \"roo-config/settings/deploy-settings.ps1\",\n>>> L120:     \"roo-config/README-campagne-tests-escalade.md\",\n    L121:     \"roo-config/README-profile-modes.md\",\n    L122:     \"roo-config/README.md\",",
            "Line": "    \"roo-config/README-campagne-tests-escalade.md\",",
            "Type": "code",
            "Index": 119
          },
          {
            "Context": "    L119:     \"roo-config/settings/deploy-settings.ps1\",\n    L120:     \"roo-config/README-campagne-tests-escalade.md\",\n>>> L121:     \"roo-config/README-profile-modes.md\",\n    L122:     \"roo-config/README.md\",\n    L123:     \"roo-config/REDIRECTION.md\",",
            "Line": "    \"roo-config/README-profile-modes.md\",",
            "Type": "code",
            "Index": 120
          },
          {
            "Context": "    L120:     \"roo-config/README-campagne-tests-escalade.md\",\n    L121:     \"roo-config/README-profile-modes.md\",\n>>> L122:     \"roo-config/README.md\",\n    L123:     \"roo-config/REDIRECTION.md\",\n    L124:     \"roo-config/backups/README.md\",",
            "Line": "    \"roo-config/README.md\",",
            "Type": "code",
            "Index": 121
          },
          {
            "Context": "    L121:     \"roo-config/README-profile-modes.md\",\n    L122:     \"roo-config/README.md\",\n>>> L123:     \"roo-config/REDIRECTION.md\",\n    L124:     \"roo-config/backups/README.md\",\n    L125:     \"roo-config/config-templates/README.md\",",
            "Line": "    \"roo-config/REDIRECTION.md\",",
            "Type": "code",
            "Index": 122
          },
          {
            "Context": "    L122:     \"roo-config/README.md\",\n    L123:     \"roo-config/REDIRECTION.md\",\n>>> L124:     \"roo-config/backups/README.md\",\n    L125:     \"roo-config/config-templates/README.md\",\n    L126:     \"roo-config/deployment-scripts/README.md\",",
            "Line": "    \"roo-config/backups/README.md\",",
            "Type": "code",
            "Index": 123
          },
          {
            "Context": "    L123:     \"roo-config/REDIRECTION.md\",\n    L124:     \"roo-config/backups/README.md\",\n>>> L125:     \"roo-config/config-templates/README.md\",\n    L126:     \"roo-config/deployment-scripts/README.md\",\n    L127:     \"roo-config/diagnostic-scripts/README.md\",",
            "Line": "    \"roo-config/config-templates/README.md\",",
            "Type": "code",
            "Index": 124
          },
          {
            "Context": "    L124:     \"roo-config/backups/README.md\",\n    L125:     \"roo-config/config-templates/README.md\",\n>>> L126:     \"roo-config/deployment-scripts/README.md\",\n    L127:     \"roo-config/diagnostic-scripts/README.md\",\n    L128:     \"roo-config/docs/guide-import-export.md\",",
            "Line": "    \"roo-config/deployment-scripts/README.md\",",
            "Type": "code",
            "Index": 125
          },
          {
            "Context": "    L125:     \"roo-config/config-templates/README.md\",\n    L126:     \"roo-config/deployment-scripts/README.md\",\n>>> L127:     \"roo-config/diagnostic-scripts/README.md\",\n    L128:     \"roo-config/docs/guide-import-export.md\",\n    L129:     \"roo-config/docs/README.md\",",
            "Line": "    \"roo-config/diagnostic-scripts/README.md\",",
            "Type": "code",
            "Index": 126
          },
          {
            "Context": "    L126:     \"roo-config/deployment-scripts/README.md\",\n    L127:     \"roo-config/diagnostic-scripts/README.md\",\n>>> L128:     \"roo-config/docs/guide-import-export.md\",\n    L129:     \"roo-config/docs/README.md\",\n    L130:     \"roo-config/docs/solution-modes-simple-complex.md\",",
            "Line": "    \"roo-config/docs/guide-import-export.md\",",
            "Type": "code",
            "Index": 127
          },
          {
            "Context": "    L127:     \"roo-config/diagnostic-scripts/README.md\",\n    L128:     \"roo-config/docs/guide-import-export.md\",\n>>> L129:     \"roo-config/docs/README.md\",\n    L130:     \"roo-config/docs/solution-modes-simple-complex.md\",\n    L131:     \"roo-config/encoding-scripts/README.md\",",
            "Line": "    \"roo-config/docs/README.md\",",
            "Type": "code",
            "Index": 128
          },
          {
            "Context": "    L128:     \"roo-config/docs/guide-import-export.md\",\n    L129:     \"roo-config/docs/README.md\",\n>>> L130:     \"roo-config/docs/solution-modes-simple-complex.md\",\n    L131:     \"roo-config/encoding-scripts/README.md\",\n    L132:     \"roo-config/qwen3-profiles/README.md\",",
            "Line": "    \"roo-config/docs/solution-modes-simple-complex.md\",",
            "Type": "code",
            "Index": 129
          },
          {
            "Context": "    L129:     \"roo-config/docs/README.md\",\n    L130:     \"roo-config/docs/solution-modes-simple-complex.md\",\n>>> L131:     \"roo-config/encoding-scripts/README.md\",\n    L132:     \"roo-config/qwen3-profiles/README.md\",\n    L133:     \"roo-config/scheduler/Guide_Edition_Directe_Configurations_Roo_Scheduler.md\",",
            "Line": "    \"roo-config/encoding-scripts/README.md\",",
            "Type": "code",
            "Index": 130
          },
          {
            "Context": "    L130:     \"roo-config/docs/solution-modes-simple-complex.md\",\n    L131:     \"roo-config/encoding-scripts/README.md\",\n>>> L132:     \"roo-config/qwen3-profiles/README.md\",\n    L133:     \"roo-config/scheduler/Guide_Edition_Directe_Configurations_Roo_Scheduler.md\",\n    L134:     \"roo-config/scheduler/Guide_Installation_Roo_Scheduler.md\",",
            "Line": "    \"roo-config/qwen3-profiles/README.md\",",
            "Type": "code",
            "Index": 131
          },
          {
            "Context": "    L131:     \"roo-config/encoding-scripts/README.md\",\n    L132:     \"roo-config/qwen3-profiles/README.md\",\n>>> L133:     \"roo-config/scheduler/Guide_Edition_Directe_Configurations_Roo_Scheduler.md\",\n    L134:     \"roo-config/scheduler/Guide_Installation_Roo_Scheduler.md\",\n    L135:     \"roo-config/settings/README.md\",",
            "Line": "    \"roo-config/scheduler/Guide_Edition_Directe_Configurations_Roo_Scheduler.md\",",
            "Type": "code",
            "Index": 132
          },
          {
            "Context": "    L132:     \"roo-config/qwen3-profiles/README.md\",\n    L133:     \"roo-config/scheduler/Guide_Edition_Directe_Configurations_Roo_Scheduler.md\",\n>>> L134:     \"roo-config/scheduler/Guide_Installation_Roo_Scheduler.md\",\n    L135:     \"roo-config/settings/README.md\",\n    L136:     \"roo-modes/configs/modes.json\",",
            "Line": "    \"roo-config/scheduler/Guide_Installation_Roo_Scheduler.md\",",
            "Type": "code",
            "Index": 133
          },
          {
            "Context": "    L133:     \"roo-config/scheduler/Guide_Edition_Directe_Configurations_Roo_Scheduler.md\",\n    L134:     \"roo-config/scheduler/Guide_Installation_Roo_Scheduler.md\",\n>>> L135:     \"roo-config/settings/README.md\",\n    L136:     \"roo-modes/configs/modes.json\",\n    L137:     \"roo-modes/configs/new-roomodes.json\",",
            "Line": "    \"roo-config/settings/README.md\",",
            "Type": "code",
            "Index": 134
          },
          {
            "Context": "    L135:     \"roo-config/settings/README.md\",\n    L136:     \"roo-modes/configs/modes.json\",\n>>> L137:     \"roo-modes/configs/new-roomodes.json\",\n    L138:     \"roo-modes/configs/standard-modes.json\",\n    L139:     \"roo-modes/configs/vscode-custom-modes.json\",",
            "Line": "    \"roo-modes/configs/new-roomodes.json\",",
            "Type": "code",
            "Index": 136
          },
          {
            "Context": "    L137:     \"roo-modes/configs/new-roomodes.json\",\n    L138:     \"roo-modes/configs/standard-modes.json\",\n>>> L139:     \"roo-modes/configs/vscode-custom-modes.json\",\n    L140:     \"roo-modes/n5/configs/architect-large-optimized-v2.json\",\n    L141:     \"roo-modes/n5/configs/architect-large-optimized.json\",",
            "Line": "    \"roo-modes/configs/vscode-custom-modes.json\",",
            "Type": "code",
            "Index": 138
          },
          {
            "Context": "    L138:     \"roo-modes/configs/standard-modes.json\",\n    L139:     \"roo-modes/configs/vscode-custom-modes.json\",\n>>> L140:     \"roo-modes/n5/configs/architect-large-optimized-v2.json\",\n    L141:     \"roo-modes/n5/configs/architect-large-optimized.json\",\n    L142:     \"roo-modes/n5/configs/architect-large-original.json\",",
            "Line": "    \"roo-modes/n5/configs/architect-large-optimized-v2.json\",",
            "Type": "code",
            "Index": 139
          },
          {
            "Context": "    L139:     \"roo-modes/configs/vscode-custom-modes.json\",\n    L140:     \"roo-modes/n5/configs/architect-large-optimized-v2.json\",\n>>> L141:     \"roo-modes/n5/configs/architect-large-optimized.json\",\n    L142:     \"roo-modes/n5/configs/architect-large-original.json\",\n    L143:     \"roo-modes/n5/configs/architect-large.json\",",
            "Line": "    \"roo-modes/n5/configs/architect-large-optimized.json\",",
            "Type": "code",
            "Index": 140
          },
          {
            "Context": "    L140:     \"roo-modes/n5/configs/architect-large-optimized-v2.json\",\n    L141:     \"roo-modes/n5/configs/architect-large-optimized.json\",\n>>> L142:     \"roo-modes/n5/configs/architect-large-original.json\",\n    L143:     \"roo-modes/n5/configs/architect-large.json\",\n    L144:     \"roo-modes/n5/configs/architect-medium.json\",",
            "Line": "    \"roo-modes/n5/configs/architect-large-original.json\",",
            "Type": "code",
            "Index": 141
          },
          {
            "Context": "    L141:     \"roo-modes/n5/configs/architect-large-optimized.json\",\n    L142:     \"roo-modes/n5/configs/architect-large-original.json\",\n>>> L143:     \"roo-modes/n5/configs/architect-large.json\",\n    L144:     \"roo-modes/n5/configs/architect-medium.json\",\n    L145:     \"roo-modes/n5/configs/ask-large.json\",",
            "Line": "    \"roo-modes/n5/configs/architect-large.json\",",
            "Type": "code",
            "Index": 142
          },
          {
            "Context": "    L142:     \"roo-modes/n5/configs/architect-large-original.json\",\n    L143:     \"roo-modes/n5/configs/architect-large.json\",\n>>> L144:     \"roo-modes/n5/configs/architect-medium.json\",\n    L145:     \"roo-modes/n5/configs/ask-large.json\",\n    L146:     \"roo-modes/n5/configs/ask-medium.json\",",
            "Line": "    \"roo-modes/n5/configs/architect-medium.json\",",
            "Type": "code",
            "Index": 143
          },
          {
            "Context": "    L143:     \"roo-modes/n5/configs/architect-large.json\",\n    L144:     \"roo-modes/n5/configs/architect-medium.json\",\n>>> L145:     \"roo-modes/n5/configs/ask-large.json\",\n    L146:     \"roo-modes/n5/configs/ask-medium.json\",\n    L147:     \"roo-modes/n5/configs/custom-n5-modes.json\",",
            "Line": "    \"roo-modes/n5/configs/ask-large.json\",",
            "Type": "code",
            "Index": 144
          },
          {
            "Context": "    L144:     \"roo-modes/n5/configs/architect-medium.json\",\n    L145:     \"roo-modes/n5/configs/ask-large.json\",\n>>> L146:     \"roo-modes/n5/configs/ask-medium.json\",\n    L147:     \"roo-modes/n5/configs/custom-n5-modes.json\",\n    L148:     \"roo-modes/n5/configs/debug-large.json\",",
            "Line": "    \"roo-modes/n5/configs/ask-medium.json\",",
            "Type": "code",
            "Index": 145
          },
          {
            "Context": "    L145:     \"roo-modes/n5/configs/ask-large.json\",\n    L146:     \"roo-modes/n5/configs/ask-medium.json\",\n>>> L147:     \"roo-modes/n5/configs/custom-n5-modes.json\",\n    L148:     \"roo-modes/n5/configs/debug-large.json\",\n    L149:     \"roo-modes/n5/configs/debug-medium.json\",",
            "Line": "    \"roo-modes/n5/configs/custom-n5-modes.json\",",
            "Type": "code",
            "Index": 146
          },
          {
            "Context": "    L146:     \"roo-modes/n5/configs/ask-medium.json\",\n    L147:     \"roo-modes/n5/configs/custom-n5-modes.json\",\n>>> L148:     \"roo-modes/n5/configs/debug-large.json\",\n    L149:     \"roo-modes/n5/configs/debug-medium.json\",\n    L150:     \"roo-modes/n5/configs/large-modes.json\",",
            "Line": "    \"roo-modes/n5/configs/debug-large.json\",",
            "Type": "code",
            "Index": 147
          },
          {
            "Context": "    L147:     \"roo-modes/n5/configs/custom-n5-modes.json\",\n    L148:     \"roo-modes/n5/configs/debug-large.json\",\n>>> L149:     \"roo-modes/n5/configs/debug-medium.json\",\n    L150:     \"roo-modes/n5/configs/large-modes.json\",\n    L151:     \"roo-modes/n5/configs/medium-modes-fixed.json\",",
            "Line": "    \"roo-modes/n5/configs/debug-medium.json\",",
            "Type": "code",
            "Index": 148
          },
          {
            "Context": "    L148:     \"roo-modes/n5/configs/debug-large.json\",\n    L149:     \"roo-modes/n5/configs/debug-medium.json\",\n>>> L150:     \"roo-modes/n5/configs/large-modes.json\",\n    L151:     \"roo-modes/n5/configs/medium-modes-fixed.json\",\n    L152:     \"roo-modes/n5/configs/medium-modes.json\",",
            "Line": "    \"roo-modes/n5/configs/large-modes.json\",",
            "Type": "code",
            "Index": 149
          },
          {
            "Context": "    L149:     \"roo-modes/n5/configs/debug-medium.json\",\n    L150:     \"roo-modes/n5/configs/large-modes.json\",\n>>> L151:     \"roo-modes/n5/configs/medium-modes-fixed.json\",\n    L152:     \"roo-modes/n5/configs/medium-modes.json\",\n    L153:     \"roo-modes/n5/configs/micro-modes.json\",",
            "Line": "    \"roo-modes/n5/configs/medium-modes-fixed.json\",",
            "Type": "code",
            "Index": 150
          },
          {
            "Context": "    L150:     \"roo-modes/n5/configs/large-modes.json\",\n    L151:     \"roo-modes/n5/configs/medium-modes-fixed.json\",\n>>> L152:     \"roo-modes/n5/configs/medium-modes.json\",\n    L153:     \"roo-modes/n5/configs/micro-modes.json\",\n    L154:     \"roo-modes/n5/configs/mini-modes-fixed.json\",",
            "Line": "    \"roo-modes/n5/configs/medium-modes.json\",",
            "Type": "code",
            "Index": 151
          },
          {
            "Context": "    L151:     \"roo-modes/n5/configs/medium-modes-fixed.json\",\n    L152:     \"roo-modes/n5/configs/medium-modes.json\",\n>>> L153:     \"roo-modes/n5/configs/micro-modes.json\",\n    L154:     \"roo-modes/n5/configs/mini-modes-fixed.json\",\n    L155:     \"roo-modes/n5/configs/mini-modes.json\",",
            "Line": "    \"roo-modes/n5/configs/micro-modes.json\",",
            "Type": "code",
            "Index": 152
          },
          {
            "Context": "    L152:     \"roo-modes/n5/configs/medium-modes.json\",\n    L153:     \"roo-modes/n5/configs/micro-modes.json\",\n>>> L154:     \"roo-modes/n5/configs/mini-modes-fixed.json\",\n    L155:     \"roo-modes/n5/configs/mini-modes.json\",\n    L156:     \"roo-modes/n5/configs/n5-modes-roo-compatible-local.json\",",
            "Line": "    \"roo-modes/n5/configs/mini-modes-fixed.json\",",
            "Type": "code",
            "Index": 153
          },
          {
            "Context": "    L153:     \"roo-modes/n5/configs/micro-modes.json\",\n    L154:     \"roo-modes/n5/configs/mini-modes-fixed.json\",\n>>> L155:     \"roo-modes/n5/configs/mini-modes.json\",\n    L156:     \"roo-modes/n5/configs/n5-modes-roo-compatible-local.json\",\n    L157:     \"roo-modes/n5/configs/n5-modes-roo-compatible-modified.json\",",
            "Line": "    \"roo-modes/n5/configs/mini-modes.json\",",
            "Type": "code",
            "Index": 154
          },
          {
            "Context": "    L154:     \"roo-modes/n5/configs/mini-modes-fixed.json\",\n    L155:     \"roo-modes/n5/configs/mini-modes.json\",\n>>> L156:     \"roo-modes/n5/configs/n5-modes-roo-compatible-local.json\",\n    L157:     \"roo-modes/n5/configs/n5-modes-roo-compatible-modified.json\",\n    L158:     \"roo-modes/n5/configs/n5-modes-roo-compatible.json\",",
            "Line": "    \"roo-modes/n5/configs/n5-modes-roo-compatible-local.json\",",
            "Type": "code",
            "Index": 155
          },
          {
            "Context": "    L155:     \"roo-modes/n5/configs/mini-modes.json\",\n    L156:     \"roo-modes/n5/configs/n5-modes-roo-compatible-local.json\",\n>>> L157:     \"roo-modes/n5/configs/n5-modes-roo-compatible-modified.json\",\n    L158:     \"roo-modes/n5/configs/n5-modes-roo-compatible.json\",\n    L159:     \"roo-modes/n5/configs/oracle-modes-fixed.json\",",
            "Line": "    \"roo-modes/n5/configs/n5-modes-roo-compatible-modified.json\",",
            "Type": "code",
            "Index": 156
          },
          {
            "Context": "    L156:     \"roo-modes/n5/configs/n5-modes-roo-compatible-local.json\",\n    L157:     \"roo-modes/n5/configs/n5-modes-roo-compatible-modified.json\",\n>>> L158:     \"roo-modes/n5/configs/n5-modes-roo-compatible.json\",\n    L159:     \"roo-modes/n5/configs/oracle-modes-fixed.json\",\n    L160:     \"roo-modes/n5/configs/oracle-modes.json\",",
            "Line": "    \"roo-modes/n5/configs/n5-modes-roo-compatible.json\",",
            "Type": "code",
            "Index": 157
          },
          {
            "Context": "    L157:     \"roo-modes/n5/configs/n5-modes-roo-compatible-modified.json\",\n    L158:     \"roo-modes/n5/configs/n5-modes-roo-compatible.json\",\n>>> L159:     \"roo-modes/n5/configs/oracle-modes-fixed.json\",\n    L160:     \"roo-modes/n5/configs/oracle-modes.json\",\n    L161:     \"roo-modes/n5/configs/orchestrator-large.json\",",
            "Line": "    \"roo-modes/n5/configs/oracle-modes-fixed.json\",",
            "Type": "code",
            "Index": 158
          },
          {
            "Context": "    L158:     \"roo-modes/n5/configs/n5-modes-roo-compatible.json\",\n    L159:     \"roo-modes/n5/configs/oracle-modes-fixed.json\",\n>>> L160:     \"roo-modes/n5/configs/oracle-modes.json\",\n    L161:     \"roo-modes/n5/configs/orchestrator-large.json\",\n    L162:     \"roo-modes/n5/configs/orchestrator-medium.json\",",
            "Line": "    \"roo-modes/n5/configs/oracle-modes.json\",",
            "Type": "code",
            "Index": 159
          },
          {
            "Context": "    L159:     \"roo-modes/n5/configs/oracle-modes-fixed.json\",\n    L160:     \"roo-modes/n5/configs/oracle-modes.json\",\n>>> L161:     \"roo-modes/n5/configs/orchestrator-large.json\",\n    L162:     \"roo-modes/n5/configs/orchestrator-medium.json\",\n    L163:     \"roo-modes/README.md\",",
            "Line": "    \"roo-modes/n5/configs/orchestrator-large.json\",",
            "Type": "code",
            "Index": 160
          },
          {
            "Context": "    L160:     \"roo-modes/n5/configs/oracle-modes.json\",\n    L161:     \"roo-modes/n5/configs/orchestrator-large.json\",\n>>> L162:     \"roo-modes/n5/configs/orchestrator-medium.json\",\n    L163:     \"roo-modes/README.md\",\n    L164:     \"roo-modes/custom/README.md\",",
            "Line": "    \"roo-modes/n5/configs/orchestrator-medium.json\",",
            "Type": "code",
            "Index": 161
          },
          {
            "Context": "    L161:     \"roo-modes/n5/configs/orchestrator-large.json\",\n    L162:     \"roo-modes/n5/configs/orchestrator-medium.json\",\n>>> L163:     \"roo-modes/README.md\",\n    L164:     \"roo-modes/custom/README.md\",\n    L165:     \"roo-modes/custom/REDIRECTION.md\",",
            "Line": "    \"roo-modes/README.md\",",
            "Type": "code",
            "Index": 162
          },
          {
            "Context": "    L162:     \"roo-modes/n5/configs/orchestrator-medium.json\",\n    L163:     \"roo-modes/README.md\",\n>>> L164:     \"roo-modes/custom/README.md\",\n    L165:     \"roo-modes/custom/REDIRECTION.md\",\n    L166:     \"roo-modes/custom/docs/architecture/architecture-concept.md\",",
            "Line": "    \"roo-modes/custom/README.md\",",
            "Type": "code",
            "Index": 163
          },
          {
            "Context": "    L163:     \"roo-modes/README.md\",\n    L164:     \"roo-modes/custom/README.md\",\n>>> L165:     \"roo-modes/custom/REDIRECTION.md\",\n    L166:     \"roo-modes/custom/docs/architecture/architecture-concept.md\",\n    L167:     \"roo-modes/custom/docs/criteres-decision/criteres-decision.md\",",
            "Line": "    \"roo-modes/custom/REDIRECTION.md\",",
            "Type": "code",
            "Index": 164
          },
          {
            "Context": "    L164:     \"roo-modes/custom/README.md\",\n    L165:     \"roo-modes/custom/REDIRECTION.md\",\n>>> L166:     \"roo-modes/custom/docs/architecture/architecture-concept.md\",\n    L167:     \"roo-modes/custom/docs/criteres-decision/criteres-decision.md\",\n    L168:     \"roo-modes/custom/docs/implementation/commits.md\",",
            "Line": "    \"roo-modes/custom/docs/architecture/architecture-concept.md\",",
            "Type": "code",
            "Index": 165
          },
          {
            "Context": "    L165:     \"roo-modes/custom/REDIRECTION.md\",\n    L166:     \"roo-modes/custom/docs/architecture/architecture-concept.md\",\n>>> L167:     \"roo-modes/custom/docs/criteres-decision/criteres-decision.md\",\n    L168:     \"roo-modes/custom/docs/implementation/commits.md\",\n    L169:     \"roo-modes/custom/docs/implementation/deploiement-autres-machines.md\",",
            "Line": "    \"roo-modes/custom/docs/criteres-decision/criteres-decision.md\",",
            "Type": "code",
            "Index": 166
          },
          {
            "Context": "    L166:     \"roo-modes/custom/docs/architecture/architecture-concept.md\",\n    L167:     \"roo-modes/custom/docs/criteres-decision/criteres-decision.md\",\n>>> L168:     \"roo-modes/custom/docs/implementation/commits.md\",\n    L169:     \"roo-modes/custom/docs/implementation/deploiement-autres-machines.md\",\n    L170:     \"roo-modes/custom/docs/implementation/deploiement.md\",",
            "Line": "    \"roo-modes/custom/docs/implementation/commits.md\",",
            "Type": "code",
            "Index": 167
          },
          {
            "Context": "    L167:     \"roo-modes/custom/docs/criteres-decision/criteres-decision.md\",\n    L168:     \"roo-modes/custom/docs/implementation/commits.md\",\n>>> L169:     \"roo-modes/custom/docs/implementation/deploiement-autres-machines.md\",\n    L170:     \"roo-modes/custom/docs/implementation/deploiement.md\",\n    L171:     \"roo-modes/custom/docs/implementation/notes-pour-reprise.md\",",
            "Line": "    \"roo-modes/custom/docs/implementation/deploiement-autres-machines.md\",",
            "Type": "code",
            "Index": 168
          },
          {
            "Context": "    L168:     \"roo-modes/custom/docs/implementation/commits.md\",\n    L169:     \"roo-modes/custom/docs/implementation/deploiement-autres-machines.md\",\n>>> L170:     \"roo-modes/custom/docs/implementation/deploiement.md\",\n    L171:     \"roo-modes/custom/docs/implementation/notes-pour-reprise.md\",\n    L172:     \"roo-modes/custom/docs/implementation/script-deploy-local-endpoints.md\",",
            "Line": "    \"roo-modes/custom/docs/implementation/deploiement.md\",",
            "Type": "code",
            "Index": 169
          },
          {
            "Context": "    L169:     \"roo-modes/custom/docs/implementation/deploiement-autres-machines.md\",\n    L170:     \"roo-modes/custom/docs/implementation/deploiement.md\",\n>>> L171:     \"roo-modes/custom/docs/implementation/notes-pour-reprise.md\",\n    L172:     \"roo-modes/custom/docs/implementation/script-deploy-local-endpoints.md\",\n    L173:     \"roo-modes/custom/docs/optimisation/guide-installation-optimisations-mcp.md\",",
            "Line": "    \"roo-modes/custom/docs/implementation/notes-pour-reprise.md\",",
            "Type": "code",
            "Index": 170
          },
          {
            "Context": "    L170:     \"roo-modes/custom/docs/implementation/deploiement.md\",\n    L171:     \"roo-modes/custom/docs/implementation/notes-pour-reprise.md\",\n>>> L172:     \"roo-modes/custom/docs/implementation/script-deploy-local-endpoints.md\",\n    L173:     \"roo-modes/custom/docs/optimisation/guide-installation-optimisations-mcp.md\",\n    L174:     \"roo-modes/custom/docs/optimisation/recommandations-prompts.md\",",
            "Line": "    \"roo-modes/custom/docs/implementation/script-deploy-local-endpoints.md\",",
            "Type": "code",
            "Index": 171
          },
          {
            "Context": "    L171:     \"roo-modes/custom/docs/implementation/notes-pour-reprise.md\",\n    L172:     \"roo-modes/custom/docs/implementation/script-deploy-local-endpoints.md\",\n>>> L173:     \"roo-modes/custom/docs/optimisation/guide-installation-optimisations-mcp.md\",\n    L174:     \"roo-modes/custom/docs/optimisation/recommandations-prompts.md\",\n    L175:     \"roo-modes/custom/docs/optimisation/utilisation-optimisee-mcps.md\",",
            "Line": "    \"roo-modes/custom/docs/optimisation/guide-installation-optimisations-mcp.md\",",
            "Type": "code",
            "Index": 172
          },
          {
            "Context": "    L172:     \"roo-modes/custom/docs/implementation/script-deploy-local-endpoints.md\",\n    L173:     \"roo-modes/custom/docs/optimisation/guide-installation-optimisations-mcp.md\",\n>>> L174:     \"roo-modes/custom/docs/optimisation/recommandations-prompts.md\",\n    L175:     \"roo-modes/custom/docs/optimisation/utilisation-optimisee-mcps.md\",\n    L176:     \"roo-modes/custom/docs/structure-technique/README.md\",",
            "Line": "    \"roo-modes/custom/docs/optimisation/recommandations-prompts.md\",",
            "Type": "code",
            "Index": 173
          },
          {
            "Context": "    L173:     \"roo-modes/custom/docs/optimisation/guide-installation-optimisations-mcp.md\",\n    L174:     \"roo-modes/custom/docs/optimisation/recommandations-prompts.md\",\n>>> L175:     \"roo-modes/custom/docs/optimisation/utilisation-optimisee-mcps.md\",\n    L176:     \"roo-modes/custom/docs/structure-technique/README.md\",\n    L177:     \"roo-modes/docs/directives-modes-custom.md\",",
            "Line": "    \"roo-modes/custom/docs/optimisation/utilisation-optimisee-mcps.md\",",
            "Type": "code",
            "Index": 174
          },
          {
            "Context": "    L174:     \"roo-modes/custom/docs/optimisation/recommandations-prompts.md\",\n    L175:     \"roo-modes/custom/docs/optimisation/utilisation-optimisee-mcps.md\",\n>>> L176:     \"roo-modes/custom/docs/structure-technique/README.md\",\n    L177:     \"roo-modes/docs/directives-modes-custom.md\",\n    L178:     \"roo-modes/docs/guide-import-export.md\",",
            "Line": "    \"roo-modes/custom/docs/structure-technique/README.md\",",
            "Type": "code",
            "Index": 175
          },
          {
            "Context": "    L175:     \"roo-modes/custom/docs/optimisation/utilisation-optimisee-mcps.md\",\n    L176:     \"roo-modes/custom/docs/structure-technique/README.md\",\n>>> L177:     \"roo-modes/docs/directives-modes-custom.md\",\n    L178:     \"roo-modes/docs/guide-import-export.md\",\n    L179:     \"roo-modes/docs/guide-integration-modes-custom.md\",",
            "Line": "    \"roo-modes/docs/directives-modes-custom.md\",",
            "Type": "code",
            "Index": 176
          },
          {
            "Context": "    L176:     \"roo-modes/custom/docs/structure-technique/README.md\",\n    L177:     \"roo-modes/docs/directives-modes-custom.md\",\n>>> L178:     \"roo-modes/docs/guide-import-export.md\",\n    L179:     \"roo-modes/docs/guide-integration-modes-custom.md\",\n    L180:     \"roo-modes/docs/guide-verrouillage-famille-modes.md\",",
            "Line": "    \"roo-modes/docs/guide-import-export.md\",",
            "Type": "code",
            "Index": 177
          },
          {
            "Context": "    L177:     \"roo-modes/docs/directives-modes-custom.md\",\n    L178:     \"roo-modes/docs/guide-import-export.md\",\n>>> L179:     \"roo-modes/docs/guide-integration-modes-custom.md\",\n    L180:     \"roo-modes/docs/guide-verrouillage-famille-modes.md\",\n    L181:     \"roo-modes/docs/README-family-lock.md\",",
            "Line": "    \"roo-modes/docs/guide-integration-modes-custom.md\",",
            "Type": "code",
            "Index": 178
          },
          {
            "Context": "    L178:     \"roo-modes/docs/guide-import-export.md\",\n    L179:     \"roo-modes/docs/guide-integration-modes-custom.md\",\n>>> L180:     \"roo-modes/docs/guide-verrouillage-famille-modes.md\",\n    L181:     \"roo-modes/docs/README-family-lock.md\",\n    L182:     \"roo-modes/docs/reference-prompts-natifs.md\",",
            "Line": "    \"roo-modes/docs/guide-verrouillage-famille-modes.md\",",
            "Type": "code",
            "Index": 179
          },
          {
            "Context": "    L179:     \"roo-modes/docs/guide-integration-modes-custom.md\",\n    L180:     \"roo-modes/docs/guide-verrouillage-famille-modes.md\",\n>>> L181:     \"roo-modes/docs/README-family-lock.md\",\n    L182:     \"roo-modes/docs/reference-prompts-natifs.md\",\n    L183:     \"roo-modes/docs/architecture/architecture-concept.md\",",
            "Line": "    \"roo-modes/docs/README-family-lock.md\",",
            "Type": "code",
            "Index": 180
          },
          {
            "Context": "    L180:     \"roo-modes/docs/guide-verrouillage-famille-modes.md\",\n    L181:     \"roo-modes/docs/README-family-lock.md\",\n>>> L182:     \"roo-modes/docs/reference-prompts-natifs.md\",\n    L183:     \"roo-modes/docs/architecture/architecture-concept.md\",\n    L184:     \"roo-modes/docs/criteres-decision/criteres-decision.md\",",
            "Line": "    \"roo-modes/docs/reference-prompts-natifs.md\",",
            "Type": "code",
            "Index": 181
          },
          {
            "Context": "    L181:     \"roo-modes/docs/README-family-lock.md\",\n    L182:     \"roo-modes/docs/reference-prompts-natifs.md\",\n>>> L183:     \"roo-modes/docs/architecture/architecture-concept.md\",\n    L184:     \"roo-modes/docs/criteres-decision/criteres-decision.md\",\n    L185:     \"roo-modes/docs/implementation/commits.md\",",
            "Line": "    \"roo-modes/docs/architecture/architecture-concept.md\",",
            "Type": "code",
            "Index": 182
          },
          {
            "Context": "    L182:     \"roo-modes/docs/reference-prompts-natifs.md\",\n    L183:     \"roo-modes/docs/architecture/architecture-concept.md\",\n>>> L184:     \"roo-modes/docs/criteres-decision/criteres-decision.md\",\n    L185:     \"roo-modes/docs/implementation/commits.md\",\n    L186:     \"roo-modes/docs/implementation/deploiement-autres-machines.md\",",
            "Line": "    \"roo-modes/docs/criteres-decision/criteres-decision.md\",",
            "Type": "code",
            "Index": 183
          },
          {
            "Context": "    L183:     \"roo-modes/docs/architecture/architecture-concept.md\",\n    L184:     \"roo-modes/docs/criteres-decision/criteres-decision.md\",\n>>> L185:     \"roo-modes/docs/implementation/commits.md\",\n    L186:     \"roo-modes/docs/implementation/deploiement-autres-machines.md\",\n    L187:     \"roo-modes/docs/implementation/deploiement.md\",",
            "Line": "    \"roo-modes/docs/implementation/commits.md\",",
            "Type": "code",
            "Index": 184
          },
          {
            "Context": "    L184:     \"roo-modes/docs/criteres-decision/criteres-decision.md\",\n    L185:     \"roo-modes/docs/implementation/commits.md\",\n>>> L186:     \"roo-modes/docs/implementation/deploiement-autres-machines.md\",\n    L187:     \"roo-modes/docs/implementation/deploiement.md\",\n    L188:     \"roo-modes/docs/implementation/guide-installation-modes-personnalises.md\",",
            "Line": "    \"roo-modes/docs/implementation/deploiement-autres-machines.md\",",
            "Type": "code",
            "Index": 185
          },
          {
            "Context": "    L185:     \"roo-modes/docs/implementation/commits.md\",\n    L186:     \"roo-modes/docs/implementation/deploiement-autres-machines.md\",\n>>> L187:     \"roo-modes/docs/implementation/deploiement.md\",\n    L188:     \"roo-modes/docs/implementation/guide-installation-modes-personnalises.md\",\n    L189:     \"roo-modes/docs/implementation/notes-pour-reprise.md\",",
            "Line": "    \"roo-modes/docs/implementation/deploiement.md\",",
            "Type": "code",
            "Index": 186
          },
          {
            "Context": "    L186:     \"roo-modes/docs/implementation/deploiement-autres-machines.md\",\n    L187:     \"roo-modes/docs/implementation/deploiement.md\",\n>>> L188:     \"roo-modes/docs/implementation/guide-installation-modes-personnalises.md\",\n    L189:     \"roo-modes/docs/implementation/notes-pour-reprise.md\",\n    L190:     \"roo-modes/docs/implementation/script-deploy-local-endpoints.md\",",
            "Line": "    \"roo-modes/docs/implementation/guide-installation-modes-personnalises.md\",",
            "Type": "code",
            "Index": 187
          },
          {
            "Context": "    L187:     \"roo-modes/docs/implementation/deploiement.md\",\n    L188:     \"roo-modes/docs/implementation/guide-installation-modes-personnalises.md\",\n>>> L189:     \"roo-modes/docs/implementation/notes-pour-reprise.md\",\n    L190:     \"roo-modes/docs/implementation/script-deploy-local-endpoints.md\",\n    L191:     \"roo-modes/docs/optimisation/recommandations-prompts.md\",",
            "Line": "    \"roo-modes/docs/implementation/notes-pour-reprise.md\",",
            "Type": "code",
            "Index": 188
          },
          {
            "Context": "    L188:     \"roo-modes/docs/implementation/guide-installation-modes-personnalises.md\",\n    L189:     \"roo-modes/docs/implementation/notes-pour-reprise.md\",\n>>> L190:     \"roo-modes/docs/implementation/script-deploy-local-endpoints.md\",\n    L191:     \"roo-modes/docs/optimisation/recommandations-prompts.md\",\n    L192:     \"roo-modes/n5/CHANGELOG.md\",",
            "Line": "    \"roo-modes/docs/implementation/script-deploy-local-endpoints.md\",",
            "Type": "code",
            "Index": 189
          },
          {
            "Context": "    L189:     \"roo-modes/docs/implementation/notes-pour-reprise.md\",\n    L190:     \"roo-modes/docs/implementation/script-deploy-local-endpoints.md\",\n>>> L191:     \"roo-modes/docs/optimisation/recommandations-prompts.md\",\n    L192:     \"roo-modes/n5/CHANGELOG.md\",\n    L193:     \"roo-modes/n5/rapport-final-deploiement.md\",",
            "Line": "    \"roo-modes/docs/optimisation/recommandations-prompts.md\",",
            "Type": "code",
            "Index": 190
          },
          {
            "Context": "    L190:     \"roo-modes/docs/implementation/script-deploy-local-endpoints.md\",\n    L191:     \"roo-modes/docs/optimisation/recommandations-prompts.md\",\n>>> L192:     \"roo-modes/n5/CHANGELOG.md\",\n    L193:     \"roo-modes/n5/rapport-final-deploiement.md\",\n    L194:     \"roo-modes/n5/rapport-implementation.md\",",
            "Line": "    \"roo-modes/n5/CHANGELOG.md\",",
            "Type": "code",
            "Index": 191
          },
          {
            "Context": "    L191:     \"roo-modes/docs/optimisation/recommandations-prompts.md\",\n    L192:     \"roo-modes/n5/CHANGELOG.md\",\n>>> L193:     \"roo-modes/n5/rapport-final-deploiement.md\",\n    L194:     \"roo-modes/n5/rapport-implementation.md\",\n    L195:     \"roo-modes/n5/README-roo-compatible.md\",",
            "Line": "    \"roo-modes/n5/rapport-final-deploiement.md\",",
            "Type": "code",
            "Index": 192
          },
          {
            "Context": "    L192:     \"roo-modes/n5/CHANGELOG.md\",\n    L193:     \"roo-modes/n5/rapport-final-deploiement.md\",\n>>> L194:     \"roo-modes/n5/rapport-implementation.md\",\n    L195:     \"roo-modes/n5/README-roo-compatible.md\",\n    L196:     \"roo-modes/n5/README.md\",",
            "Line": "    \"roo-modes/n5/rapport-implementation.md\",",
            "Type": "code",
            "Index": 193
          },
          {
            "Context": "    L193:     \"roo-modes/n5/rapport-final-deploiement.md\",\n    L194:     \"roo-modes/n5/rapport-implementation.md\",\n>>> L195:     \"roo-modes/n5/README-roo-compatible.md\",\n    L196:     \"roo-modes/n5/README.md\",\n    L197:     \"roo-modes/n5/docs/guide-migration-roo-compatible.md\",",
            "Line": "    \"roo-modes/n5/README-roo-compatible.md\",",
            "Type": "code",
            "Index": 194
          },
          {
            "Context": "    L194:     \"roo-modes/n5/rapport-implementation.md\",\n    L195:     \"roo-modes/n5/README-roo-compatible.md\",\n>>> L196:     \"roo-modes/n5/README.md\",\n    L197:     \"roo-modes/n5/docs/guide-migration-roo-compatible.md\",\n    L198:     \"roo-modes/n5/docs/guide-migration.md\",",
            "Line": "    \"roo-modes/n5/README.md\",",
            "Type": "code",
            "Index": 195
          },
          {
            "Context": "    L195:     \"roo-modes/n5/README-roo-compatible.md\",\n    L196:     \"roo-modes/n5/README.md\",\n>>> L197:     \"roo-modes/n5/docs/guide-migration-roo-compatible.md\",\n    L198:     \"roo-modes/n5/docs/guide-migration.md\",\n    L199:     \"roo-modes/n5/docs/guide-utilisation.md\",",
            "Line": "    \"roo-modes/n5/docs/guide-migration-roo-compatible.md\",",
            "Type": "code",
            "Index": 196
          },
          {
            "Context": "    L196:     \"roo-modes/n5/README.md\",\n    L197:     \"roo-modes/n5/docs/guide-migration-roo-compatible.md\",\n>>> L198:     \"roo-modes/n5/docs/guide-migration.md\",\n    L199:     \"roo-modes/n5/docs/guide-utilisation.md\",\n    L200:     \"roo-modes/n5/tests/README.md\",",
            "Line": "    \"roo-modes/n5/docs/guide-migration.md\",",
            "Type": "code",
            "Index": 197
          },
          {
            "Context": "    L197:     \"roo-modes/n5/docs/guide-migration-roo-compatible.md\",\n    L198:     \"roo-modes/n5/docs/guide-migration.md\",\n>>> L199:     \"roo-modes/n5/docs/guide-utilisation.md\",\n    L200:     \"roo-modes/n5/tests/README.md\",\n    L201:     \"roo-modes/optimized/ARCHIVE.md\",",
            "Line": "    \"roo-modes/n5/docs/guide-utilisation.md\",",
            "Type": "code",
            "Index": 198
          },
          {
            "Context": "    L198:     \"roo-modes/n5/docs/guide-migration.md\",\n    L199:     \"roo-modes/n5/docs/guide-utilisation.md\",\n>>> L200:     \"roo-modes/n5/tests/README.md\",\n    L201:     \"roo-modes/optimized/ARCHIVE.md\",\n    L202:     \"roo-modes/optimized/README.md\",",
            "Line": "    \"roo-modes/n5/tests/README.md\",",
            "Type": "code",
            "Index": 199
          },
          {
            "Context": "    L199:     \"roo-modes/n5/docs/guide-utilisation.md\",\n    L200:     \"roo-modes/n5/tests/README.md\",\n>>> L201:     \"roo-modes/optimized/ARCHIVE.md\",\n    L202:     \"roo-modes/optimized/README.md\",\n    L203:     \"roo-modes/optimized/REDIRECTION.md\",",
            "Line": "    \"roo-modes/optimized/ARCHIVE.md\",",
            "Type": "code",
            "Index": 200
          },
          {
            "Context": "    L200:     \"roo-modes/n5/tests/README.md\",\n    L201:     \"roo-modes/optimized/ARCHIVE.md\",\n>>> L202:     \"roo-modes/optimized/README.md\",\n    L203:     \"roo-modes/optimized/REDIRECTION.md\",\n    L204:     \"roo-modes/optimized/docs/architecture-concept.md\",",
            "Line": "    \"roo-modes/optimized/README.md\",",
            "Type": "code",
            "Index": 201
          },
          {
            "Context": "    L201:     \"roo-modes/optimized/ARCHIVE.md\",\n    L202:     \"roo-modes/optimized/README.md\",\n>>> L203:     \"roo-modes/optimized/REDIRECTION.md\",\n    L204:     \"roo-modes/optimized/docs/architecture-concept.md\",\n    L205:     \"roo-modes/optimized/docs/criteres-decision.md\",",
            "Line": "    \"roo-modes/optimized/REDIRECTION.md\",",
            "Type": "code",
            "Index": 202
          },
          {
            "Context": "    L202:     \"roo-modes/optimized/README.md\",\n    L203:     \"roo-modes/optimized/REDIRECTION.md\",\n>>> L204:     \"roo-modes/optimized/docs/architecture-concept.md\",\n    L205:     \"roo-modes/optimized/docs/criteres-decision.md\",\n    L206:     \"roo-modes/optimized/docs/notes-pour-reprise.md\",",
            "Line": "    \"roo-modes/optimized/docs/architecture-concept.md\",",
            "Type": "code",
            "Index": 203
          },
          {
            "Context": "    L203:     \"roo-modes/optimized/REDIRECTION.md\",\n    L204:     \"roo-modes/optimized/docs/architecture-concept.md\",\n>>> L205:     \"roo-modes/optimized/docs/criteres-decision.md\",\n    L206:     \"roo-modes/optimized/docs/notes-pour-reprise.md\",\n    L207:     \"roo-modes/optimized/docs/recommandations-prompts.md\"",
            "Line": "    \"roo-modes/optimized/docs/criteres-decision.md\",",
            "Type": "code",
            "Index": 204
          },
          {
            "Context": "    L204:     \"roo-modes/optimized/docs/architecture-concept.md\",\n    L205:     \"roo-modes/optimized/docs/criteres-decision.md\",\n>>> L206:     \"roo-modes/optimized/docs/notes-pour-reprise.md\",\n    L207:     \"roo-modes/optimized/docs/recommandations-prompts.md\"\n    L208: )",
            "Line": "    \"roo-modes/optimized/docs/notes-pour-reprise.md\",",
            "Type": "code",
            "Index": 205
          },
          {
            "Context": "    L205:     \"roo-modes/optimized/docs/criteres-decision.md\",\n    L206:     \"roo-modes/optimized/docs/notes-pour-reprise.md\",\n>>> L207:     \"roo-modes/optimized/docs/recommandations-prompts.md\"\n    L208: )\n    L209: ",
            "Line": "    \"roo-modes/optimized/docs/recommandations-prompts.md\"",
            "Type": "code",
            "Index": 206
          },
          {
            "Context": "    L208: )\n    L209: \n>>> L210: $JsonFiles = @(\n    L211:     \"roo-config/settings/settings.json\",\n    L212:     \"roo-config/settings/servers.json\",",
            "Line": "$JsonFiles = @(",
            "Type": "code",
            "Index": 209
          },
          {
            "Context": "    L71: \n    L72: $FilesToSync = @(\n>>> L73:     \"roo-config/settings/settings.json\",\n    L74:     \"roo-config/settings/servers.json\",\n    L75:     \"roo-config/settings/modes.json\",",
            "Line": "    \"roo-config/settings/settings.json\",",
            "Type": "code",
            "Index": 72
          },
          {
            "Context": "    L72: $FilesToSync = @(\n    L73:     \"roo-config/settings/settings.json\",\n>>> L74:     \"roo-config/settings/servers.json\",\n    L75:     \"roo-config/settings/modes.json\",\n    L76:     \"roo-config/escalation-test-config.json\",",
            "Line": "    \"roo-config/settings/servers.json\",",
            "Type": "code",
            "Index": 73
          },
          {
            "Context": "    L73:     \"roo-config/settings/settings.json\",\n    L74:     \"roo-config/settings/servers.json\",\n>>> L75:     \"roo-config/settings/modes.json\",\n    L76:     \"roo-config/escalation-test-config.json\",\n    L77:     \"roo-config/qwen3-profiles/qwen3-parameters.json\",",
            "Line": "    \"roo-config/settings/modes.json\",",
            "Type": "code",
            "Index": 74
          },
          {
            "Context": "    L74:     \"roo-config/settings/servers.json\",\n    L75:     \"roo-config/settings/modes.json\",\n>>> L76:     \"roo-config/escalation-test-config.json\",\n    L77:     \"roo-config/qwen3-profiles/qwen3-parameters.json\",\n    L78:     \"roo-config/analyze-test-results.ps1\",",
            "Line": "    \"roo-config/escalation-test-config.json\",",
            "Type": "code",
            "Index": 75
          },
          {
            "Context": "    L75:     \"roo-config/settings/modes.json\",\n    L76:     \"roo-config/escalation-test-config.json\",\n>>> L77:     \"roo-config/qwen3-profiles/qwen3-parameters.json\",\n    L78:     \"roo-config/analyze-test-results.ps1\",\n    L79:     \"roo-config/apply-escalation-test-config.ps1\",",
            "Line": "    \"roo-config/qwen3-profiles/qwen3-parameters.json\",",
            "Type": "code",
            "Index": 76
          },
          {
            "Context": "    L134:     \"roo-config/scheduler/Guide_Installation_Roo_Scheduler.md\",\n    L135:     \"roo-config/settings/README.md\",\n>>> L136:     \"roo-modes/configs/modes.json\",\n    L137:     \"roo-modes/configs/new-roomodes.json\",\n    L138:     \"roo-modes/configs/standard-modes.json\",",
            "Line": "    \"roo-modes/configs/modes.json\",",
            "Type": "code",
            "Index": 135
          },
          {
            "Context": "    L135:     \"roo-config/settings/README.md\",\n    L136:     \"roo-modes/configs/modes.json\",\n>>> L137:     \"roo-modes/configs/new-roomodes.json\",\n    L138:     \"roo-modes/configs/standard-modes.json\",\n    L139:     \"roo-modes/configs/vscode-custom-modes.json\",",
            "Line": "    \"roo-modes/configs/new-roomodes.json\",",
            "Type": "code",
            "Index": 136
          },
          {
            "Context": "    L136:     \"roo-modes/configs/modes.json\",\n    L137:     \"roo-modes/configs/new-roomodes.json\",\n>>> L138:     \"roo-modes/configs/standard-modes.json\",\n    L139:     \"roo-modes/configs/vscode-custom-modes.json\",\n    L140:     \"roo-modes/n5/configs/architect-large-optimized-v2.json\",",
            "Line": "    \"roo-modes/configs/standard-modes.json\",",
            "Type": "code",
            "Index": 137
          },
          {
            "Context": "    L137:     \"roo-modes/configs/new-roomodes.json\",\n    L138:     \"roo-modes/configs/standard-modes.json\",\n>>> L139:     \"roo-modes/configs/vscode-custom-modes.json\",\n    L140:     \"roo-modes/n5/configs/architect-large-optimized-v2.json\",\n    L141:     \"roo-modes/n5/configs/architect-large-optimized.json\",",
            "Line": "    \"roo-modes/configs/vscode-custom-modes.json\",",
            "Type": "code",
            "Index": 138
          },
          {
            "Context": "    L138:     \"roo-modes/configs/standard-modes.json\",\n    L139:     \"roo-modes/configs/vscode-custom-modes.json\",\n>>> L140:     \"roo-modes/n5/configs/architect-large-optimized-v2.json\",\n    L141:     \"roo-modes/n5/configs/architect-large-optimized.json\",\n    L142:     \"roo-modes/n5/configs/architect-large-original.json\",",
            "Line": "    \"roo-modes/n5/configs/architect-large-optimized-v2.json\",",
            "Type": "code",
            "Index": 139
          },
          {
            "Context": "    L139:     \"roo-modes/configs/vscode-custom-modes.json\",\n    L140:     \"roo-modes/n5/configs/architect-large-optimized-v2.json\",\n>>> L141:     \"roo-modes/n5/configs/architect-large-optimized.json\",\n    L142:     \"roo-modes/n5/configs/architect-large-original.json\",\n    L143:     \"roo-modes/n5/configs/architect-large.json\",",
            "Line": "    \"roo-modes/n5/configs/architect-large-optimized.json\",",
            "Type": "code",
            "Index": 140
          },
          {
            "Context": "    L140:     \"roo-modes/n5/configs/architect-large-optimized-v2.json\",\n    L141:     \"roo-modes/n5/configs/architect-large-optimized.json\",\n>>> L142:     \"roo-modes/n5/configs/architect-large-original.json\",\n    L143:     \"roo-modes/n5/configs/architect-large.json\",\n    L144:     \"roo-modes/n5/configs/architect-medium.json\",",
            "Line": "    \"roo-modes/n5/configs/architect-large-original.json\",",
            "Type": "code",
            "Index": 141
          },
          {
            "Context": "    L141:     \"roo-modes/n5/configs/architect-large-optimized.json\",\n    L142:     \"roo-modes/n5/configs/architect-large-original.json\",\n>>> L143:     \"roo-modes/n5/configs/architect-large.json\",\n    L144:     \"roo-modes/n5/configs/architect-medium.json\",\n    L145:     \"roo-modes/n5/configs/ask-large.json\",",
            "Line": "    \"roo-modes/n5/configs/architect-large.json\",",
            "Type": "code",
            "Index": 142
          },
          {
            "Context": "    L142:     \"roo-modes/n5/configs/architect-large-original.json\",\n    L143:     \"roo-modes/n5/configs/architect-large.json\",\n>>> L144:     \"roo-modes/n5/configs/architect-medium.json\",\n    L145:     \"roo-modes/n5/configs/ask-large.json\",\n    L146:     \"roo-modes/n5/configs/ask-medium.json\",",
            "Line": "    \"roo-modes/n5/configs/architect-medium.json\",",
            "Type": "code",
            "Index": 143
          },
          {
            "Context": "    L143:     \"roo-modes/n5/configs/architect-large.json\",\n    L144:     \"roo-modes/n5/configs/architect-medium.json\",\n>>> L145:     \"roo-modes/n5/configs/ask-large.json\",\n    L146:     \"roo-modes/n5/configs/ask-medium.json\",\n    L147:     \"roo-modes/n5/configs/custom-n5-modes.json\",",
            "Line": "    \"roo-modes/n5/configs/ask-large.json\",",
            "Type": "code",
            "Index": 144
          },
          {
            "Context": "    L144:     \"roo-modes/n5/configs/architect-medium.json\",\n    L145:     \"roo-modes/n5/configs/ask-large.json\",\n>>> L146:     \"roo-modes/n5/configs/ask-medium.json\",\n    L147:     \"roo-modes/n5/configs/custom-n5-modes.json\",\n    L148:     \"roo-modes/n5/configs/debug-large.json\",",
            "Line": "    \"roo-modes/n5/configs/ask-medium.json\",",
            "Type": "code",
            "Index": 145
          },
          {
            "Context": "    L145:     \"roo-modes/n5/configs/ask-large.json\",\n    L146:     \"roo-modes/n5/configs/ask-medium.json\",\n>>> L147:     \"roo-modes/n5/configs/custom-n5-modes.json\",\n    L148:     \"roo-modes/n5/configs/debug-large.json\",\n    L149:     \"roo-modes/n5/configs/debug-medium.json\",",
            "Line": "    \"roo-modes/n5/configs/custom-n5-modes.json\",",
            "Type": "code",
            "Index": 146
          },
          {
            "Context": "    L146:     \"roo-modes/n5/configs/ask-medium.json\",\n    L147:     \"roo-modes/n5/configs/custom-n5-modes.json\",\n>>> L148:     \"roo-modes/n5/configs/debug-large.json\",\n    L149:     \"roo-modes/n5/configs/debug-medium.json\",\n    L150:     \"roo-modes/n5/configs/large-modes.json\",",
            "Line": "    \"roo-modes/n5/configs/debug-large.json\",",
            "Type": "code",
            "Index": 147
          },
          {
            "Context": "    L147:     \"roo-modes/n5/configs/custom-n5-modes.json\",\n    L148:     \"roo-modes/n5/configs/debug-large.json\",\n>>> L149:     \"roo-modes/n5/configs/debug-medium.json\",\n    L150:     \"roo-modes/n5/configs/large-modes.json\",\n    L151:     \"roo-modes/n5/configs/medium-modes-fixed.json\",",
            "Line": "    \"roo-modes/n5/configs/debug-medium.json\",",
            "Type": "code",
            "Index": 148
          },
          {
            "Context": "    L148:     \"roo-modes/n5/configs/debug-large.json\",\n    L149:     \"roo-modes/n5/configs/debug-medium.json\",\n>>> L150:     \"roo-modes/n5/configs/large-modes.json\",\n    L151:     \"roo-modes/n5/configs/medium-modes-fixed.json\",\n    L152:     \"roo-modes/n5/configs/medium-modes.json\",",
            "Line": "    \"roo-modes/n5/configs/large-modes.json\",",
            "Type": "code",
            "Index": 149
          },
          {
            "Context": "    L149:     \"roo-modes/n5/configs/debug-medium.json\",\n    L150:     \"roo-modes/n5/configs/large-modes.json\",\n>>> L151:     \"roo-modes/n5/configs/medium-modes-fixed.json\",\n    L152:     \"roo-modes/n5/configs/medium-modes.json\",\n    L153:     \"roo-modes/n5/configs/micro-modes.json\",",
            "Line": "    \"roo-modes/n5/configs/medium-modes-fixed.json\",",
            "Type": "code",
            "Index": 150
          },
          {
            "Context": "    L150:     \"roo-modes/n5/configs/large-modes.json\",\n    L151:     \"roo-modes/n5/configs/medium-modes-fixed.json\",\n>>> L152:     \"roo-modes/n5/configs/medium-modes.json\",\n    L153:     \"roo-modes/n5/configs/micro-modes.json\",\n    L154:     \"roo-modes/n5/configs/mini-modes-fixed.json\",",
            "Line": "    \"roo-modes/n5/configs/medium-modes.json\",",
            "Type": "code",
            "Index": 151
          },
          {
            "Context": "    L151:     \"roo-modes/n5/configs/medium-modes-fixed.json\",\n    L152:     \"roo-modes/n5/configs/medium-modes.json\",\n>>> L153:     \"roo-modes/n5/configs/micro-modes.json\",\n    L154:     \"roo-modes/n5/configs/mini-modes-fixed.json\",\n    L155:     \"roo-modes/n5/configs/mini-modes.json\",",
            "Line": "    \"roo-modes/n5/configs/micro-modes.json\",",
            "Type": "code",
            "Index": 152
          },
          {
            "Context": "    L152:     \"roo-modes/n5/configs/medium-modes.json\",\n    L153:     \"roo-modes/n5/configs/micro-modes.json\",\n>>> L154:     \"roo-modes/n5/configs/mini-modes-fixed.json\",\n    L155:     \"roo-modes/n5/configs/mini-modes.json\",\n    L156:     \"roo-modes/n5/configs/n5-modes-roo-compatible-local.json\",",
            "Line": "    \"roo-modes/n5/configs/mini-modes-fixed.json\",",
            "Type": "code",
            "Index": 153
          },
          {
            "Context": "    L153:     \"roo-modes/n5/configs/micro-modes.json\",\n    L154:     \"roo-modes/n5/configs/mini-modes-fixed.json\",\n>>> L155:     \"roo-modes/n5/configs/mini-modes.json\",\n    L156:     \"roo-modes/n5/configs/n5-modes-roo-compatible-local.json\",\n    L157:     \"roo-modes/n5/configs/n5-modes-roo-compatible-modified.json\",",
            "Line": "    \"roo-modes/n5/configs/mini-modes.json\",",
            "Type": "code",
            "Index": 154
          },
          {
            "Context": "    L154:     \"roo-modes/n5/configs/mini-modes-fixed.json\",\n    L155:     \"roo-modes/n5/configs/mini-modes.json\",\n>>> L156:     \"roo-modes/n5/configs/n5-modes-roo-compatible-local.json\",\n    L157:     \"roo-modes/n5/configs/n5-modes-roo-compatible-modified.json\",\n    L158:     \"roo-modes/n5/configs/n5-modes-roo-compatible.json\",",
            "Line": "    \"roo-modes/n5/configs/n5-modes-roo-compatible-local.json\",",
            "Type": "code",
            "Index": 155
          },
          {
            "Context": "    L155:     \"roo-modes/n5/configs/mini-modes.json\",\n    L156:     \"roo-modes/n5/configs/n5-modes-roo-compatible-local.json\",\n>>> L157:     \"roo-modes/n5/configs/n5-modes-roo-compatible-modified.json\",\n    L158:     \"roo-modes/n5/configs/n5-modes-roo-compatible.json\",\n    L159:     \"roo-modes/n5/configs/oracle-modes-fixed.json\",",
            "Line": "    \"roo-modes/n5/configs/n5-modes-roo-compatible-modified.json\",",
            "Type": "code",
            "Index": 156
          },
          {
            "Context": "    L156:     \"roo-modes/n5/configs/n5-modes-roo-compatible-local.json\",\n    L157:     \"roo-modes/n5/configs/n5-modes-roo-compatible-modified.json\",\n>>> L158:     \"roo-modes/n5/configs/n5-modes-roo-compatible.json\",\n    L159:     \"roo-modes/n5/configs/oracle-modes-fixed.json\",\n    L160:     \"roo-modes/n5/configs/oracle-modes.json\",",
            "Line": "    \"roo-modes/n5/configs/n5-modes-roo-compatible.json\",",
            "Type": "code",
            "Index": 157
          },
          {
            "Context": "    L157:     \"roo-modes/n5/configs/n5-modes-roo-compatible-modified.json\",\n    L158:     \"roo-modes/n5/configs/n5-modes-roo-compatible.json\",\n>>> L159:     \"roo-modes/n5/configs/oracle-modes-fixed.json\",\n    L160:     \"roo-modes/n5/configs/oracle-modes.json\",\n    L161:     \"roo-modes/n5/configs/orchestrator-large.json\",",
            "Line": "    \"roo-modes/n5/configs/oracle-modes-fixed.json\",",
            "Type": "code",
            "Index": 158
          },
          {
            "Context": "    L158:     \"roo-modes/n5/configs/n5-modes-roo-compatible.json\",\n    L159:     \"roo-modes/n5/configs/oracle-modes-fixed.json\",\n>>> L160:     \"roo-modes/n5/configs/oracle-modes.json\",\n    L161:     \"roo-modes/n5/configs/orchestrator-large.json\",\n    L162:     \"roo-modes/n5/configs/orchestrator-medium.json\",",
            "Line": "    \"roo-modes/n5/configs/oracle-modes.json\",",
            "Type": "code",
            "Index": 159
          },
          {
            "Context": "    L159:     \"roo-modes/n5/configs/oracle-modes-fixed.json\",\n    L160:     \"roo-modes/n5/configs/oracle-modes.json\",\n>>> L161:     \"roo-modes/n5/configs/orchestrator-large.json\",\n    L162:     \"roo-modes/n5/configs/orchestrator-medium.json\",\n    L163:     \"roo-modes/README.md\",",
            "Line": "    \"roo-modes/n5/configs/orchestrator-large.json\",",
            "Type": "code",
            "Index": 160
          },
          {
            "Context": "    L240:     \"roo-modes/n5/configs/oracle-modes.json\",\n    L241:     \"roo-modes/n5/configs/orchestrator-large.json\",\n>>> L242:     \"roo-modes/n5/configs/orchestrator-medium.json\"\n    L243: )\n    L244: ",
            "Line": "    \"roo-modes/n5/configs/orchestrator-medium.json\"",
            "Type": "code",
            "Index": 241
          },
          {
            "Context": "    L206:     \"roo-modes/optimized/docs/notes-pour-reprise.md\",\n    L207:     \"roo-modes/optimized/docs/recommandations-prompts.md\"\n>>> L208: )\n    L209: \n    L210: $JsonFiles = @(",
            "Line": ")",
            "Type": "structure",
            "Index": 207
          },
          {
            "Context": "    L243: )\n    L244: \n>>> L245: foreach ($File in $FilesToSync) {\n    L246:     $SourceFile = Join-Path $RepoPath $File\n    L247:     $DestinationFile = Join-Path $RepoPath $File # Assumer que le dépôt est l'emplacement actif",
            "Line": "foreach ($File in $FilesToSync) {",
            "Type": "control",
            "Index": 244
          },
          {
            "Context": "    L244: \n    L245: foreach ($File in $FilesToSync) {\n>>> L246:     $SourceFile = Join-Path $RepoPath $File\n    L247:     $DestinationFile = Join-Path $RepoPath $File # Assumer que le dépôt est l'emplacement actif\n    L248: ",
            "Line": "    $SourceFile = Join-Path $RepoPath $File",
            "Type": "code",
            "Index": 245
          },
          {
            "Context": "    L245: foreach ($File in $FilesToSync) {\n    L246:     $SourceFile = Join-Path $RepoPath $File\n>>> L247:     $DestinationFile = Join-Path $RepoPath $File # Assumer que le dépôt est l'emplacement actif\n    L248: \n    L249:     if (Test-Path $SourceFile) {",
            "Line": "    $DestinationFile = Join-Path $RepoPath $File # Assumer que le dépôt est l'emplacement actif",
            "Type": "code",
            "Index": 246
          },
          {
            "Context": "    L247:     $DestinationFile = Join-Path $RepoPath $File # Assumer que le dépôt est l'emplacement actif\n    L248: \n>>> L249:     if (Test-Path $SourceFile) {\n    L250:         Try {\n    L251:             Copy-Item -Path $SourceFile -Destination $DestinationFile -Force -ErrorAction Stop",
            "Line": "    if (Test-Path $SourceFile) {",
            "Type": "control",
            "Index": 248
          },
          {
            "Context": "    L248: \n    L249:     if (Test-Path $SourceFile) {\n>>> L250:         Try {\n    L251:             Copy-Item -Path $SourceFile -Destination $DestinationFile -Force -ErrorAction Stop\n    L252:             Log-Message \"Synchronisé : $($File)\"",
            "Line": "        Try {",
            "Type": "control",
            "Index": 249
          },
          {
            "Context": "    L249:     if (Test-Path $SourceFile) {\n    L250:         Try {\n>>> L251:             Copy-Item -Path $SourceFile -Destination $DestinationFile -Force -ErrorAction Stop\n    L252:             Log-Message \"Synchronisé : $($File)\"\n    L253:         } Catch {",
            "Line": "            Copy-Item -Path $SourceFile -Destination $DestinationFile -Force -ErrorAction Stop",
            "Type": "code",
            "Index": 250
          },
          {
            "Context": "    L250:         Try {\n    L251:             Copy-Item -Path $SourceFile -Destination $DestinationFile -Force -ErrorAction Stop\n>>> L252:             Log-Message \"Synchronisé : $($File)\"\n    L253:         } Catch {\n    L254:             Log-Message \"Échec de la synchronisation de $($File). Message : $($_.Exception.Message)\" \"ERREUR\"",
            "Line": "            Log-Message \"Synchronisé : $($File)\"",
            "Type": "code",
            "Index": 251
          },
          {
            "Context": "    L251:             Copy-Item -Path $SourceFile -Destination $DestinationFile -Force -ErrorAction Stop\n    L252:             Log-Message \"Synchronisé : $($File)\"\n>>> L253:         } Catch {\n    L254:             Log-Message \"Échec de la synchronisation de $($File). Message : $($_.Exception.Message)\" \"ERREUR\"\n    L255:             Exit 1",
            "Line": "        } Catch {",
            "Type": "code",
            "Index": 252
          },
          {
            "Context": "    L252:             Log-Message \"Synchronisé : $($File)\"\n    L253:         } Catch {\n>>> L254:             Log-Message \"Échec de la synchronisation de $($File). Message : $($_.Exception.Message)\" \"ERREUR\"\n    L255:             Exit 1\n    L256:         }",
            "Line": "            Log-Message \"Échec de la synchronisation de $($File). Message : $($_.Exception.Message)\" \"ERREUR\"",
            "Type": "code",
            "Index": 253
          },
          {
            "Context": "    L253:         } Catch {\n    L254:             Log-Message \"Échec de la synchronisation de $($File). Message : $($_.Exception.Message)\" \"ERREUR\"\n>>> L255:             Exit 1\n    L256:         }\n    L257:     }",
            "Line": "            Exit 1",
            "Type": "code",
            "Index": 254
          },
          {
            "Context": "    L258: }\n    L259: \n>>> L260: # Étape 5: Vérification Post-Synchronisation\n    L261: Log-Message \"Vérification post-synchronisation...\"\n    L262: ",
            "Line": "# Étape 5: Vérification Post-Synchronisation",
            "Type": "comment",
            "Index": 259
          },
          {
            "Context": "    L259: \n    L260: # Étape 5: Vérification Post-Synchronisation\n>>> L261: Log-Message \"Vérification post-synchronisation...\"\n    L262: \n    L263: foreach ($JsonFile in $JsonFiles) {",
            "Line": "Log-Message \"Vérification post-synchronisation...\"",
            "Type": "code",
            "Index": 260
          },
          {
            "Context": "    L261: Log-Message \"Vérification post-synchronisation...\"\n    L262: \n>>> L263: foreach ($JsonFile in $JsonFiles) {\n    L264:     $FullPath = Join-Path $RepoPath $JsonFile\n    L265:     if (Test-Path $FullPath) {",
            "Line": "foreach ($JsonFile in $JsonFiles) {",
            "Type": "control",
            "Index": 262
          },
          {
            "Context": "    L262: \n    L263: foreach ($JsonFile in $JsonFiles) {\n>>> L264:     $FullPath = Join-Path $RepoPath $JsonFile\n    L265:     if (Test-Path $FullPath) {\n    L266:         Try {",
            "Line": "    $FullPath = Join-Path $RepoPath $JsonFile",
            "Type": "code",
            "Index": 263
          },
          {
            "Context": "    L263: foreach ($JsonFile in $JsonFiles) {\n    L264:     $FullPath = Join-Path $RepoPath $JsonFile\n>>> L265:     if (Test-Path $FullPath) {\n    L266:         Try {\n    L267:             Get-Content -Raw $FullPath | ConvertFrom-Json | Out-Null",
            "Line": "    if (Test-Path $FullPath) {",
            "Type": "control",
            "Index": 264
          },
          {
            "Context": "    L248: \n    L249:     if (Test-Path $SourceFile) {\n>>> L250:         Try {\n    L251:             Copy-Item -Path $SourceFile -Destination $DestinationFile -Force -ErrorAction Stop\n    L252:             Log-Message \"Synchronisé : $($File)\"",
            "Line": "        Try {",
            "Type": "control",
            "Index": 249
          },
          {
            "Context": "    L265:     if (Test-Path $FullPath) {\n    L266:         Try {\n>>> L267:             Get-Content -Raw $FullPath | ConvertFrom-Json | Out-Null\n    L268:             Log-Message \"Vérifié (JSON valide) : $($JsonFile)\"\n    L269:         } Catch {",
            "Line": "            Get-Content -Raw $FullPath | ConvertFrom-Json | Out-Null",
            "Type": "code",
            "Index": 266
          },
          {
            "Context": "    L266:         Try {\n    L267:             Get-Content -Raw $FullPath | ConvertFrom-Json | Out-Null\n>>> L268:             Log-Message \"Vérifié (JSON valide) : $($JsonFile)\"\n    L269:         } Catch {\n    L270:             Log-Message \"ERREUR: Fichier JSON invalide après synchronisation : $($JsonFile). Détails : $($_.Exception.Message)\" \"ERREUR\"",
            "Line": "            Log-Message \"Vérifié (JSON valide) : $($JsonFile)\"",
            "Type": "code",
            "Index": 267
          },
          {
            "Context": "    L251:             Copy-Item -Path $SourceFile -Destination $DestinationFile -Force -ErrorAction Stop\n    L252:             Log-Message \"Synchronisé : $($File)\"\n>>> L253:         } Catch {\n    L254:             Log-Message \"Échec de la synchronisation de $($File). Message : $($_.Exception.Message)\" \"ERREUR\"\n    L255:             Exit 1",
            "Line": "        } Catch {",
            "Type": "code",
            "Index": 252
          },
          {
            "Context": "    L268:             Log-Message \"Vérifié (JSON valide) : $($JsonFile)\"\n    L269:         } Catch {\n>>> L270:             Log-Message \"ERREUR: Fichier JSON invalide après synchronisation : $($JsonFile). Détails : $($_.Exception.Message)\" \"ERREUR\"\n    L271:             Exit 1\n    L272:         }",
            "Line": "            Log-Message \"ERREUR: Fichier JSON invalide après synchronisation : $($JsonFile). Détails : $($_.Exception.Message)\" \"ERREUR\"",
            "Type": "code",
            "Index": 269
          },
          {
            "Context": "    L253:         } Catch {\n    L254:             Log-Message \"Échec de la synchronisation de $($File). Message : $($_.Exception.Message)\" \"ERREUR\"\n>>> L255:             Exit 1\n    L256:         }\n    L257:     }",
            "Line": "            Exit 1",
            "Type": "code",
            "Index": 254
          },
          {
            "Context": "    L274: }\n    L275: \n>>> L276: # Étape 6: Gestion des Commits de Correction (si nécessaire)\n    L277: Log-Message \"Vérification des modifications pour commit de correction...\"\n    L278: $PostSyncStatus = (& git status --porcelain 2>&1)",
            "Line": "# Étape 6: Gestion des Commits de Correction (si nécessaire)",
            "Type": "comment",
            "Index": 275
          },
          {
            "Context": "    L275: \n    L276: # Étape 6: Gestion des Commits de Correction (si nécessaire)\n>>> L277: Log-Message \"Vérification des modifications pour commit de correction...\"\n    L278: $PostSyncStatus = (& git status --porcelain 2>&1)\n    L279: if ($PostSyncStatus) {",
            "Line": "Log-Message \"Vérification des modifications pour commit de correction...\"",
            "Type": "code",
            "Index": 276
          },
          {
            "Context": "    L276: # Étape 6: Gestion des Commits de Correction (si nécessaire)\n    L277: Log-Message \"Vérification des modifications pour commit de correction...\"\n>>> L278: $PostSyncStatus = (& git status --porcelain 2>&1)\n    L279: if ($PostSyncStatus) {\n    L280:     Log-Message \"Modifications détectées après synchronisation. Création d'un commit de correction...\"",
            "Line": "$PostSyncStatus = (& git status --porcelain 2>&1)",
            "Type": "code",
            "Index": 277
          },
          {
            "Context": "    L278: $PostSyncStatus = (& git status --porcelain 2>&1)\n    L279: if ($PostSyncStatus) {\n>>> L280:     Log-Message \"Modifications détectées après synchronisation. Création d'un commit de correction...\"\n    L281:     & git add .\n    L282:     $CommitOutput = (& git commit -m \"SYNC: [Automated] Synchronisation des paramètres Roo post-pull\" 2>&1)",
            "Line": "    Log-Message \"Modifications détectées après synchronisation. Création d'un commit de correction...\"",
            "Type": "code",
            "Index": 279
          },
          {
            "Context": "    L279: if ($PostSyncStatus) {\n    L280:     Log-Message \"Modifications détectées après synchronisation. Création d'un commit de correction...\"\n>>> L281:     & git add .\n    L282:     $CommitOutput = (& git commit -m \"SYNC: [Automated] Synchronisation des paramètres Roo post-pull\" 2>&1)\n    L283:     if ($LASTEXITCODE -ne 0) {",
            "Line": "    & git add .",
            "Type": "code",
            "Index": 280
          },
          {
            "Context": "    L280:     Log-Message \"Modifications détectées après synchronisation. Création d'un commit de correction...\"\n    L281:     & git add .\n>>> L282:     $CommitOutput = (& git commit -m \"SYNC: [Automated] Synchronisation des paramètres Roo post-pull\" 2>&1)\n    L283:     if ($LASTEXITCODE -ne 0) {\n    L284:         Log-Message \"Échec du commit. Message : $($CommitOutput)\" \"ERREUR\"",
            "Line": "    $CommitOutput = (& git commit -m \"SYNC: [Automated] Synchronisation des paramètres Roo post-pull\" 2>&1)",
            "Type": "code",
            "Index": 281
          },
          {
            "Context": "    L44: Try {\n    L45:     $PullOutput = (& git pull origin main 2>&1)\n>>> L46:     if ($LASTEXITCODE -ne 0) {\n    L47:         throw \"Git pull failed: $PullOutput\"\n    L48:     }",
            "Line": "    if ($LASTEXITCODE -ne 0) {",
            "Type": "control",
            "Index": 45
          },
          {
            "Context": "    L282:     $CommitOutput = (& git commit -m \"SYNC: [Automated] Synchronisation des paramètres Roo post-pull\" 2>&1)\n    L283:     if ($LASTEXITCODE -ne 0) {\n>>> L284:         Log-Message \"Échec du commit. Message : $($CommitOutput)\" \"ERREUR\"\n    L285:         # Ne pas quitter ici, car la synchronisation des fichiers a été effectuée localement.\n    L286:         # Le commit peut être retenté manuellement.",
            "Line": "        Log-Message \"Échec du commit. Message : $($CommitOutput)\" \"ERREUR\"",
            "Type": "code",
            "Index": 283
          },
          {
            "Context": "    L284:         Log-Message \"Échec du commit. Message : $($CommitOutput)\" \"ERREUR\"\n    L285:         # Ne pas quitter ici, car la synchronisation des fichiers a été effectuée localement.\n>>> L286:         # Le commit peut être retenté manuellement.\n    L287:     } else {\n    L288:         Log-Message \"Commit de correction créé.\"",
            "Line": "        # Le commit peut être retenté manuellement.",
            "Type": "comment",
            "Index": 285
          },
          {
            "Context": "    L286:         # Le commit peut être retenté manuellement.\n    L287:     } else {\n>>> L288:         Log-Message \"Commit de correction créé.\"\n    L289:     }\n    L290: ",
            "Line": "        Log-Message \"Commit de correction créé.\"",
            "Type": "code",
            "Index": 287
          },
          {
            "Context": "    L289:     }\n    L290: \n>>> L291:     Log-Message \"Tentative de push du commit de correction...\"\n    L292:     Try {\n    L293:         $PushOutput = (& git push origin main 2>&1)",
            "Line": "    Log-Message \"Tentative de push du commit de correction...\"",
            "Type": "code",
            "Index": 290
          },
          {
            "Context": "    L291:     Log-Message \"Tentative de push du commit de correction...\"\n    L292:     Try {\n>>> L293:         $PushOutput = (& git push origin main 2>&1)\n    L294:         if ($LASTEXITCODE -ne 0) {\n    L295:             throw \"Git push failed: $PushOutput\"",
            "Line": "        $PushOutput = (& git push origin main 2>&1)",
            "Type": "code",
            "Index": 292
          },
          {
            "Context": "    L27:     Try {\n    L28:         $StashOutput = (& git stash push -m \"Automated stash before sync pull\" 2>&1)\n>>> L29:         if ($LASTEXITCODE -ne 0) {\n    L30:             throw \"Git stash failed: $StashOutput\"\n    L31:         }",
            "Line": "        if ($LASTEXITCODE -ne 0) {",
            "Type": "control",
            "Index": 28
          },
          {
            "Context": "    L293:         $PushOutput = (& git push origin main 2>&1)\n    L294:         if ($LASTEXITCODE -ne 0) {\n>>> L295:             throw \"Git push failed: $PushOutput\"\n    L296:         }\n    L297:         Log-Message \"Push du commit de correction réussi.\"",
            "Line": "            throw \"Git push failed: $PushOutput\"",
            "Type": "code",
            "Index": 294
          },
          {
            "Context": "    L29:         if ($LASTEXITCODE -ne 0) {\n    L30:             throw \"Git stash failed: $StashOutput\"\n>>> L31:         }\n    L32:         Log-Message \"Stash réussi.\"\n    L33:         $StashApplied = $true",
            "Line": "        }",
            "Type": "structure",
            "Index": 30
          },
          {
            "Context": "    L295:             throw \"Git push failed: $PushOutput\"\n    L296:         }\n>>> L297:         Log-Message \"Push du commit de correction réussi.\"\n    L298:     } Catch {\n    L299:         Log-Message \"Échec du push du commit de correction. Message : $($_.Exception.Message)\" \"ERREUR\"",
            "Line": "        Log-Message \"Push du commit de correction réussi.\"",
            "Type": "code",
            "Index": 296
          },
          {
            "Context": "    L297:         Log-Message \"Push du commit de correction réussi.\"\n    L298:     } Catch {\n>>> L299:         Log-Message \"Échec du push du commit de correction. Message : $($_.Exception.Message)\" \"ERREUR\"\n    L300:         # Ne pas quitter ici, car la synchronisation des fichiers a été effectuée localement.\n    L301:         # Le push peut être retenté manuellement.",
            "Line": "        Log-Message \"Échec du push du commit de correction. Message : $($_.Exception.Message)\" \"ERREUR\"",
            "Type": "code",
            "Index": 298
          },
          {
            "Context": "    L283:     if ($LASTEXITCODE -ne 0) {\n    L284:         Log-Message \"Échec du commit. Message : $($CommitOutput)\" \"ERREUR\"\n>>> L285:         # Ne pas quitter ici, car la synchronisation des fichiers a été effectuée localement.\n    L286:         # Le commit peut être retenté manuellement.\n    L287:     } else {",
            "Line": "        # Ne pas quitter ici, car la synchronisation des fichiers a été effectuée localement.",
            "Type": "comment",
            "Index": 284
          },
          {
            "Context": "    L309:     Log-Message \"Restauration du stash...\"\n    L310:     Try {\n>>> L311:         $StashPopOutput = (& git stash pop 2>&1)\n    L312:         if ($LASTEXITCODE -ne 0) {\n    L313:             throw \"Git stash pop failed: $StashPopOutput\"",
            "Line": "        $StashPopOutput = (& git stash pop 2>&1)",
            "Type": "code",
            "Index": 310
          },
          {
            "Context": "    L27:     Try {\n    L28:         $StashOutput = (& git stash push -m \"Automated stash before sync pull\" 2>&1)\n>>> L29:         if ($LASTEXITCODE -ne 0) {\n    L30:             throw \"Git stash failed: $StashOutput\"\n    L31:         }",
            "Line": "        if ($LASTEXITCODE -ne 0) {",
            "Type": "control",
            "Index": 28
          },
          {
            "Context": "    L311:         $StashPopOutput = (& git stash pop 2>&1)\n    L312:         if ($LASTEXITCODE -ne 0) {\n>>> L313:             throw \"Git stash pop failed: $StashPopOutput\"\n    L314:         }\n    L315:         Log-Message \"Stash restauré avec succès.\"",
            "Line": "            throw \"Git stash pop failed: $StashPopOutput\"",
            "Type": "code",
            "Index": 312
          },
          {
            "Context": "    L29:         if ($LASTEXITCODE -ne 0) {\n    L30:             throw \"Git stash failed: $StashOutput\"\n>>> L31:         }\n    L32:         Log-Message \"Stash réussi.\"\n    L33:         $StashApplied = $true",
            "Line": "        }",
            "Type": "structure",
            "Index": 30
          },
          {
            "Context": "    L316:     } Catch {\n    L317:         Log-Message \"Échec de la restauration du stash. Des conflits peuvent exister. Message : $($_.Exception.Message)\" \"ALERTE\"\n>>> L318:         # Documenter les conflits de stash pop si nécessaire\n    L319:     }\n    L320: }",
            "Line": "        # Documenter les conflits de stash pop si nécessaire",
            "Type": "comment",
            "Index": 317
          }
        ]
      },
      "Index": 9
    }
  ],
  "Timestamp": "2025-10-22 03:50:08"
}
