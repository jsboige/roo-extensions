#!/usr/bin/env pwsh
<#
.SYNOPSIS
    Push S√âCURIS√â du sous-module mcps/internal (PHASE CRITIQUE)
.DESCRIPTION
    Ordre de push CRITIQUE : Sous-module EN PREMIER, Principal ENSUITE
    Raison : Le d√©p√¥t principal r√©f√©rence le sous-module
    Mission : Validation Fonctionnelle MCP et Push Final S√©curis√©
#>

Set-StrictMode -Version Latest
$ErrorActionPreference = "Stop"

$SubmoduleDir = "d:/Dev/roo-extensions/mcps/internal"
Push-Location $SubmoduleDir

try {
    Write-Host "üöÄ PUSH SOUS-MODULE mcps/internal" -ForegroundColor Cyan
    Write-Host "‚ö†Ô∏è PHASE CRITIQUE : Sous-module EN PREMIER" -ForegroundColor Yellow
    Write-Host ""

    # 1. V√©rifier √©tat local
    Write-Host "üìä √âTAT LOCAL:" -ForegroundColor Cyan
    $currentBranch = git branch --show-current
    $currentSHA = git rev-parse HEAD
    Write-Host "  Branche: $currentBranch" -ForegroundColor Gray
    Write-Host "  SHA: $currentSHA" -ForegroundColor Gray
    
    $status = git status --short
    if ($status) {
        Write-Host ""
        Write-Host "‚ö†Ô∏è FICHIERS NON COMMIT√âS:" -ForegroundColor Yellow
        Write-Host $status -ForegroundColor Gray
        Write-Host ""
        Write-Host "Ces fichiers ne seront PAS push√©s (non commit√©s)" -ForegroundColor Yellow
    }

    # 2. V√©rifier commits √† pusher
    Write-Host ""
    Write-Host "üì§ COMMITS √Ä PUSHER:" -ForegroundColor Cyan
    $commitsToPush = git log origin/$currentBranch..$currentBranch --oneline
    if (-not $commitsToPush) {
        Write-Host "  ‚ÑπÔ∏è Aucun commit √† pusher (d√©j√† synchronis√©)" -ForegroundColor Yellow
        Write-Host ""
        Write-Host "‚úÖ PUSH INUTILE - D√©j√† √† jour" -ForegroundColor Green
        exit 0
    }
    Write-Host $commitsToPush -ForegroundColor Gray

    # 3. V√©rifier commits distants non pull√©s
    Write-Host ""
    Write-Host "üì• COMMITS DISTANTS NON PULL√âS:" -ForegroundColor Cyan
    $remotesAhead = git log $currentBranch..origin/$currentBranch --oneline
    if ($remotesAhead) {
        Write-Host $remotesAhead -ForegroundColor Red
        Write-Host ""
        Write-Host "‚ùå ERREUR: Remote contient des commits non pull√©s" -ForegroundColor Red
        Write-Host "ACTION REQUISE: git pull --rebase avant push" -ForegroundColor Yellow
        exit 1
    }
    Write-Host "  ‚úÖ Aucun commit distant non pull√©" -ForegroundColor Green

    # 4. PUSH CRITIQUE
    Write-Host ""
    Write-Host "üöÄ PUSH EN COURS..." -ForegroundColor Cyan
    Write-Host "  Commande: git push origin $currentBranch" -ForegroundColor Gray
    
    git push origin $currentBranch
    
    if ($LASTEXITCODE -ne 0) {
        Write-Host ""
        Write-Host "‚ùå PUSH √âCHOU√â (Exit code: $LASTEXITCODE)" -ForegroundColor Red
        Write-Host ""
        Write-Host "üîç DIAGNOSTIC:" -ForegroundColor Cyan
        git status
        Write-Host ""
        Write-Host "‚ö†Ô∏è NE CONTINUEZ PAS SANS R√âSOUDRE CETTE ERREUR" -ForegroundColor Yellow
        exit 1
    }

    # 5. V√©rification post-push
    Write-Host ""
    Write-Host "‚úÖ PUSH R√âUSSI" -ForegroundColor Green
    Write-Host ""
    Write-Host "üîç V√âRIFICATION POST-PUSH:" -ForegroundColor Cyan
    
    # Forcer fetch pour mettre √† jour refs
    git fetch origin $currentBranch | Out-Null
    
    $localSHA = git rev-parse HEAD
    $remoteSHA = git rev-parse origin/$currentBranch
    
    Write-Host "  Local HEAD:  $localSHA" -ForegroundColor Gray
    Write-Host "  Remote HEAD: $remoteSHA" -ForegroundColor Gray
    
    if ($localSHA -eq $remoteSHA) {
        Write-Host ""
        Write-Host "‚úÖ SYNCHRONISATION CONFIRM√âE" -ForegroundColor Green
        Write-Host "Local et remote sont identiques" -ForegroundColor Gray
    } else {
        Write-Host ""
        Write-Host "‚ö†Ô∏è ATTENTION: Diff√©rence d√©tect√©e apr√®s push" -ForegroundColor Yellow
        Write-Host "Cela peut √™tre normal si d'autres commits ont √©t√© push√©s" -ForegroundColor Gray
    }

    # 6. √âtat final
    Write-Host ""
    Write-Host "üìä √âTAT FINAL:" -ForegroundColor Cyan
    git status --short --branch

    Write-Host ""
    Write-Host "üéØ COMMITS PUSH√âS:" -ForegroundColor Cyan
    Write-Host $commitsToPush -ForegroundColor Green

} catch {
    Write-Host ""
    Write-Host "‚ùå ERREUR CRITIQUE: $_" -ForegroundColor Red
    Write-Host $_.ScriptStackTrace -ForegroundColor Red
    exit 1
} finally {
    Pop-Location
}