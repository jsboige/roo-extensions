# Script de test de compilation roo-state-manager
# V√©rifie que toutes les corrections TypeScript sont valides

$projectPath = "mcps/internal/servers/roo-state-manager"
$buildLog = "build-test-results.txt"

Write-Host "`nüèóÔ∏è Test de compilation roo-state-manager" -ForegroundColor Cyan
Write-Host "=" * 60 -ForegroundColor Gray

# Nettoyer le build pr√©c√©dent
Write-Host "`nüßπ Nettoyage du build pr√©c√©dent..." -ForegroundColor Yellow
if (Test-Path "$projectPath/build") {
    Remove-Item "$projectPath/build" -Recurse -Force
    Write-Host "‚úÖ R√©pertoire build supprim√©" -ForegroundColor Green
}

# Aller dans le r√©pertoire du projet
Push-Location $projectPath

try {
    Write-Host "`nüì¶ Installation des d√©pendances..." -ForegroundColor Yellow
    npm install 2>&1 | Out-Null
    
    Write-Host "`nüî® Compilation TypeScript..." -ForegroundColor Yellow
    $buildOutput = npm run build 2>&1 | Out-String
    
    # Sauvegarder la sortie compl√®te
    $buildOutput | Out-File -FilePath "../../$buildLog" -Encoding UTF8
    
    # Analyser les r√©sultats
    if ($buildOutput -match "error TS\d+:") {
        Write-Host "`n‚ùå √âCHEC DE COMPILATION" -ForegroundColor Red
        Write-Host "=" * 60 -ForegroundColor Gray
        
        # Extraire et afficher les erreurs
        $errors = $buildOutput | Select-String "error TS\d+:" -AllMatches
        Write-Host "`nüìã Erreurs d√©tect√©es:" -ForegroundColor Red
        foreach ($err in $errors) {
            Write-Host "  ‚Ä¢ $($err.Line)" -ForegroundColor Red
        }
        
        Write-Host "`nüìÑ Log complet sauvegard√©: $buildLog" -ForegroundColor Yellow
        Pop-Location
        exit 1
    }
    else {
        Write-Host "`n‚úÖ COMPILATION R√âUSSIE" -ForegroundColor Green
        Write-Host "=" * 60 -ForegroundColor Gray
        
        # V√©rifier que les fichiers JS ont √©t√© g√©n√©r√©s
        $jsFiles = Get-ChildItem -Path "build" -Filter "*.js" -Recurse
        $jsCount = $jsFiles.Count
        
        Write-Host "`nüìä Statistiques de compilation:" -ForegroundColor Cyan
        Write-Host "  ‚Ä¢ Fichiers JavaScript g√©n√©r√©s: $jsCount" -ForegroundColor White
        Write-Host "  ‚Ä¢ R√©pertoire de sortie: build/" -ForegroundColor White
        
        if ($jsCount -gt 0) {
            Write-Host "`n‚ú® Build pr√™t pour d√©ploiement" -ForegroundColor Green
        }
        
        Pop-Location
        exit 0
    }
}
catch {
    Write-Host "`n‚ùå ERREUR INATTENDUE" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
    Pop-Location
    exit 1
}